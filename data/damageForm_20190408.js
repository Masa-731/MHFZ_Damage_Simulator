var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

var WP_Info = [], WP_Motion = [];
var BUKITYPE = ["","斬","打","弾"];
var g_attB_rslt = g_attB_noHosei = e_attB_rslt = kaisin_rslt = g_zoku = "";
var n_zoku = zokuItem = zokuUp = [];
var eq_zoku = kenshou_zoku = [];
var zokuUpA = sisyuZoku = lionZoku = "";
var eq_ijyou = kenshou_ijyou = "";
var criPoint = "";
var mos_class = +this.m_classS.value;
var mos_list = MOS_LIST, mos_data = MOS_INFO, eq_data = EQUIP_INFO, sinka_data = SINKA_INFO, gauge_data = GAUGE_INFO;
var bui = [];
var s_wp_bk = "", issen_bk = "", tokkou_bk = "", hiden_bk = "", fw_bk = "";
var I_aNAME = 0,I_aAT = 1,I_aZOKU = 2,I_aZOKUAT = 3,I_aZYOU = 4,I_aZYOUAT = 5,I_aCRI = 6,I_aRARE = 7,I_aGR = 8,I_aSLOT = 9,I_aDEF = 10,I_aHR = 11,I_aCRE = 12,I_aCLASS = 13
  ,I_aSINKAGR = 14,I_aDOC = 15,I_aGAUGE = 16,I_aREACH = 17,I_aKYOKUSYA = 5,I_aYA = 16,I_aBIN = 17,I_aSPEED = 4,I_aSOKUSYA = 16,I_aKICK = 17,I_aRELO = 18,I_aGUN = 19;
var MAKENAME = {"":"",1:"",2:"猟団",3:"カフェ",4:"課金",5:"特典","-":"",e:"イベ",er:"イベ/狩衛戦",dr:"パローネ/狩衛戦",mr:"狩人祭/狩衛戦",m:"狩人祭",d:"パローネ",g:"ガチャ",k:"キット",i:"韋駄天",t:"天廊",p:"パッケ",r:"狩衛戦"};
var CLASSTYPE = {"":" ",A:"ＳＰ",B:"親方",C:"ＨＣ",D:"剛種",E:"剛猫",F:"進化",G:"天嵐",H:"覇種",I:"G覇",J:"烈種",K:"準Ｇ",L:"Ｇ級",M:"Ｇ技",N:"天廊",O:"始種",P:"遷悠",Q:"Ｇ進",R:"準技",S:"祈歌",T:"辿異",U:"辿進",
                SP:"A",HrClass:"ABC",Sinka:"FQU",HC:"C",Gosyu:"DGHIJO",Tenran:"GHIJO",GSizil:"KLMPQRSTU",GClass:"KLMR",Resyu:"JO",Sisyu:"O",Tenrou:"N",Senyu:"P",Teni:"TU",Bless:"S"};
var ONPUCOLOR = [0,"<span class=fr>♪</span>","<span class=fy>♪</span>","<span class=fw>♪</span>","<span class=fb>♪</span>","<span class=fg>♪</span>","<span class=fp>♪</span>","<span class=fa>♪</span>"];
var RELOADNAME = ["遅い","やや遅い","普通","やや速い","速い"];
var KICKNAME = ["最大","大","中","やや小","小"];
var YANAME = {"連射1":0,"連射2":1,"連射3":2,"連射4":3,"拡散1":4,"拡散2":5,"拡散3":6,"拡散4":7,"貫通1":8,"貫通2":9,"貫通3":10,"貫通4":11};
var KYOKUNAME = ["放散型","集中型","爆裂型","切断型"];
var AXEBINNAME = {"スタンビン":"","強撃ビン":"KG","強属性ビン":"KZ","強異常ビン":"KI"};
var SHELLINGNAME = {"通常型":0,"拡散型":1,"放射型":2};
var SHARP_INFO = {
  "0": {Rate:600, MuUp:2500},
  "1": {Rate:850, MuUp:5000},
  "2": {Rate:1100, MuUp:7500},
  "3": {Rate:1325, MuUp:10000},
  "4": {Rate:1450, MuUp:10625},
  "5": {Rate:1600, MuUp:11250},
  "6": {Rate:1700, MuUp:11500},
  "7": {Rate:1800, MuUp:12000},
};

var WEAPON_INFO = {
  "0": {Id:"None", Name:"無し", Ratio:10, Hiden:"秘伝", Hosei:100},
  "1": {Id:"katate", Name:"片手剣", Ratio:14, Type:1, Hiden:"剣聖", Hosei:125, Hengeki:[0,12,7],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[17,22,27]/*毒*/,[17,22,27]/*麻痺*/,[15,20,25]/*睡眠*/],BakuKen:[220,260,300]},
  "2": {Id:"souken", Name:"双剣", Ratio:14, Type:1, Hiden:"双龍", Hosei:100, Hengeki:[0,10,2],
        ZokuKen:[30,40,50,130,150,210],IjyouKen:[[5,8,10]/*毒*/,[5,8,10]/*麻痺*/,[1,2,3]/*睡眠*/],BakuKen:[200,240,290],BakuKen_Kijin:[150,180,220]},
  "3": {Id:"taiken", Name:"大剣", Ratio:48, Type:1, Hiden:"剣王", Hosei:100, Hengeki:[0,20,10],
        ZokuKen:[50,70,90,130,150,210],IjyouKen:[[20,25,30]/*毒*/,[18,23,28]/*麻痺*/,[15,20,25]/*睡眠*/],BakuKen:[140,160,180]},
  "4": {Id:"tachi", Name:"太刀", Ratio:48, Type:1, Hiden:"刀神", Hosei:100, Hengeki:[0,11,7],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[13,18,23]/*麻痺*/,[13,18,23]/*睡眠*/],BakuKen:[140,160,180]},
  "5": {Id:"hammer", Name:"鎚", Ratio:52, Type:2, Hiden:"鈍器獣", Hosei:100, Hengeki:[0,13,10],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[13,18,23]/*麻痺*/,[13,18,23]/*睡眠*/],BakuKen:[120,140,160]},
  "6": {Id:"horn", Name:"狩猟笛", Ratio:52, Type:2, Hiden:"奏帝", Hosei:100, Hengeki:[0,15,7],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[13,18,23]/*麻痺*/,[13,18,23]/*睡眠*/],BakuKen:[120,140,160]},
  "7": {Id:"lance", Name:"槍", Ratio:23, Type:1, Hiden:"天槍", Hosei:100, Hengeki:[0,13,7],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[13,18,23]/*麻痺*/,[13,18,23]/*睡眠*/],BakuKen:[130,150,170]},
  "8": {Id:"glance", Name:"銃槍", Ratio:23, Type:1, Hiden:"砲皇", Hosei:100, Hengeki:[0,10,9],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[13,18,23]/*麻痺*/,[13,18,23]/*睡眠*/],BakuKen:[130,150,170]},
  "9": {Id:"tonfa", Name:"穿龍棍", Ratio:18, Type:2, Hiden:"穿凰", Hosei:100, Hengeki:[0,10,6],
        ZokuKen:[30,40,50,130,150,210],IjyouKen:[[5,8,10]/*毒*/,[5,8,10]/*麻痺*/,[1,2,3]/*睡眠*/],BakuKen:[200,240,290]},
  "10": {Id:"saxef", Name:"剣斧", Ratio:54, Type:1, Hiden:"斬将", Hosei:100, Hengeki:[0,11,7],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[8,12,16]/*麻痺*/,[13,18,23]/*睡眠*/],BakuKen:[140,160,180]},
  "11": {Id:"magspk", Name:"磁斬鎚", Ratio:54, Type:1, Hiden:"磁星", Hosei:100, Hengeki:[0,13,6],
        ZokuKen:[35,55,75,130,150,210],IjyouKen:[[15,20,25]/*毒*/,[6,9,13]/*麻痺*/,[12,17,22]/*睡眠*/],BakuKen:[140,160,180]},
  "12": {Id:"light", Name:"軽銃", Ratio:12, Type:3, Hiden:"銃傑", Hosei:100},
  "13": {Id:"heavy", Name:"重銃", Ratio:12, Type:3, Hiden:"銃仙", Hosei:100},
  "14": {Id:"yumi", Name:"弓", Ratio:12, Type:3, Hiden:"弓鬼", Hosei:100}
};

//N:モーション名,P:モーション値,T:攻撃系統,H:個別補正,ZH:属性補正,IH:異常補正,KH:剣術特殊補正,S:固定斬れ味,X:ヒット数,PC:コメント
//NK:剣術無効,NCr:会心無効,NKS:剣晶無効,KRH:特殊斬り方補正,NCH:中腹補正無効
//R:武器毎補正(2:乱舞改,3:大剣ﾌｨｰﾁｬｰ,4K:剣術時ﾓｰｼｮﾝ,5:瞬撃,7:天槍,9:地上,9K:蹴り,9H:砲術,10:剣)

WEAPON_INFO[1].Motion = [
  {flg:{S:"1111",P:"11",C:"11"},N:"JP斬り",P:13,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"1111",P:"11",C:"11"},N:"JP斬り",P:21},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬上げ",P:20},
  {flg:{S:"1101",P:"11",C:"11"},N:"斬下し",P:20},
  {flg:{S:"1101",P:"11",C:"11"},N:"横斬り",P:26},
  {flg:{S:"1101",P:"11",C:"11"},N:"盾剣コンボ",P:10,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"1101",P:"11",C:"11"},N:"盾剣コンボ",P:16},
  {flg:{S:"1001",P:"11",C:"10"},N:"回転斬り",P:31},
  {flg:{S:"1001",P:"11",C:"01"},N:"真空回転斬",P:31},
  {flg:{S:"1001",P:"11",C:"01"},N:"真空回転斬",P:16,NK:1},
  {flg:{S:"0010",P:"11",C:"11"},N:"突き１",P:14,ZH:140},
  {flg:{S:"0010",P:"11",C:"11"},N:"突き２",P:10,ZH:140},
  {flg:{S:"0010",P:"11",C:"11"},N:"突き３",P:10,ZH:140},
  {flg:{S:"0010",P:"11",C:"11"},N:"上下斬り",P:13,ZH:140},
  {flg:{S:"0010",P:"11",C:"11"},N:"上下斬り",P:16,ZH:140},
  {flg:{S:"0111",P:"11",C:"11"},N:"JP二段斬り",P:26},
  {flg:{S:"0111",P:"11",C:"11"},N:"JP二段斬り",P:24},
  {flg:{S:"1111",P:"10",C:"11"},N:"ｽﾗｲﾃﾞｨﾝｸﾞ",P:21},
  {flg:{S:"1111",P:"01",C:"11"},N:"ｽﾗｲﾃﾞｨﾝｸﾞ",P:31},
  {flg:{S:"1111",P:"10",C:"11"},N:"盾アタック",P:13,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"1111",P:"01",C:"11"},N:"盾アタック",P:19,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"1111",P:"10",C:"11"},N:"盾バッシュ",P:18,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"1111",P:"01",C:"11"},N:"盾バッシュ",P:27,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"0001",P:"11",C:"11"},N:"盾ブロウ連打",P:20,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"1110",P:"11",C:"11"},N:"ガード斬り",P:18},
  {flg:{S:"1111",P:"10",C:"11"},N:"無限連斬",P:25},
  {flg:{S:"1111",P:"01",C:"11"},N:"無限連斬",P:28},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭ盾ブロウ",P:34,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭJP回転斬り",P:18},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭJP回転斬り",P:34},
  {flg:{S:"0001",P:"11",C:"11"},N:"回避攻撃",P:17}
];

WEAPON_INFO[2].Motion_Normal = [
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:11},
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:5},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:16},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:7},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:11},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:15},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:16},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:22},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬上げ",P:17},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:10},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:10},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:8},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:9},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:7},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:14},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:24},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:14},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:9},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬",P:6,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬ﾌｨﾆｯｼｭ",P:20,X:2},
];

WEAPON_INFO[2].Motion_Kijin = [
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:14},
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:6},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:21},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:9},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:14},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:20},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:21},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:29},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬上げ",P:22},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:17},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:10},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:12},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:9},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:32},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:12},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:6},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:29},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:17},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:12},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬",P:8,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬ﾌｨﾆｯｼｭ",P:27,X:2},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:31,ZH:70},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:6,ZH:70,X:8},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:37,ZH:70},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（3連突き）",P:13,X:3,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:21,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:33,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:51,R2:1},
];

WEAPON_INFO[2].Motion_SinKijin = [
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:14},
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:6},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:21},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:9},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:14},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:20},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:21},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:29},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬上げ",P:22},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:17},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:10},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:12},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:9},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:32},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:12},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:6},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:29},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:17},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:12},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬",P:8,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬ﾌｨﾆｯｼｭ",P:27,X:2},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:31,ZH:70},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:6,ZH:70,X:10},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:37,ZH:70},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（3連突き）",P:13,X:3,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:21,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:33,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:51,R2:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"乱舞旋風（回転）",P:14,X:6},
  {flg:{S:"1111",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:36},
  {flg:{S:"1111",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:54},
  {flg:{S:"1111",P:"11",C:"11"},N:"真鬼人回避",P:12,X:2},
];

WEAPON_INFO[2].Motion_SinKijin_Max = [
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:15},
  {flg:{S:"1101",P:"10",C:"11"},N:"斬払い",P:7},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:23},
  {flg:{S:"1101",P:"01",C:"11"},N:"斬払い",P:10},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:15},
  {flg:{S:"0010",P:"10",C:"11"},N:"JP縦回転斬り",P:21},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:23},
  {flg:{S:"0010",P:"01",C:"11"},N:"JP縦回転斬り",P:31},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬上げ",P:24},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:14},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し１",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:14},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し２",P:11},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:10},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:20},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬下し３",P:34},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:20},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:13},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:7},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:31},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"回転斬り",P:13},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬",P:8,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬ﾌｨﾆｯｼｭ",P:29,X:2},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:33,ZH:70},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:7,ZH:70,X:10},
  {flg:{S:"1000",P:"11",C:"11"},N:"乱舞",P:40,ZH:70},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（3連突き）",P:14,X:3,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:23,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:36,R2:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:55,R2:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"乱舞旋風（回転）",P:15,X:6},
  {flg:{S:"1111",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:39},
  {flg:{S:"1111",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:58},
  {flg:{S:"1111",P:"11",C:"11"},N:"真鬼人回避",P:13,X:2},
];

WEAPON_INFO[2].Motion_GokuKijin = [
  {flg:{S:"0001",P:"11",C:"11"},N:"斬上げ",P:22},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し１",P:13},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し１",P:17},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し２",P:13},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し２",P:10},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:12},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:9},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:18},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:32},
  {flg:{S:"0001",P:"11",C:"11"},N:"上昇斬り",P:13,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"上昇斬り",P:12,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬",P:8,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬ﾌｨﾆｯｼｭ",P:27,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（3連突き）",P:13,X:3,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:21,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:33,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:51,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞旋風（回転）",P:14,X:6},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:36},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:54},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（前後）",P:16,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:8},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:8},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:8},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:8},
];

WEAPON_INFO[2].Motion_GokuKijin_Max = [
  {flg:{S:"0001",P:"11",C:"11"},N:"斬上げ",P:24},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し１",P:14},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し１",P:18},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し２",P:14},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し２",P:11},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:13},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:10},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:20},
  {flg:{S:"0001",P:"11",C:"11"},N:"斬下し３",P:34},
  {flg:{S:"0001",P:"11",C:"11"},N:"上昇斬り",P:14,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"上昇斬り",P:13,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬",P:8,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"空舞連斬ﾌｨﾆｯｼｭ",P:29,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（3連突き）",P:14,X:3,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:23,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:36,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞改（回転斬り）",P:55,R2:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞旋風（回転）",P:15,X:6},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:39},
  {flg:{S:"0001",P:"11",C:"11"},N:"乱舞旋風（斬下げ）",P:58},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（前後）",P:17,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:9},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:8},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:9},
  {flg:{S:"0001",P:"11",C:"11"},N:"極鬼人回避（左右）",P:8},
];

WEAPON_INFO[3].Motion = [
  {flg:{S:"1111",P:"11",C:"11"},N:"縦斬り",P:60,R3:1},
  {flg:{S:"1001",P:"11",C:"11"},N:"溜め斬り（溜め１）",P:[85,92,95],H:110,ZH:[100,120,130],R3:1,PC:"x110%"},
  {flg:{S:"1001",P:"11",C:"11"},N:"溜め斬り（溜め２）",P:[105,112,115],H:120,ZH:[100,120,130],R3:1,PC:"x120%"},
  {flg:{S:"1001",P:"11",C:"11"},N:"溜め斬り（溜め３）",P:[146,156,161],H:130,ZH:[100,120,130],R3:1,PC:"x130%"},
  {flg:{S:"1111",P:"11",C:"11"},N:"ﾌｨﾆｯｼｭA",P:45},
  {flg:{S:"1111",P:"11",C:"11"},N:"ﾌｨﾆｯｼｭA",P:76},
  {flg:{S:"1111",P:"10",C:"11"},N:"薙ぎ払い",P:46,R3:1},
  {flg:{S:"1111",P:"01",C:"11"},N:"薙ぎ払い",P:59,R3:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"ﾌｨﾆｯｼｭB",P:105},
  {flg:{S:"1111",P:"10",C:"11"},N:"斬上げ",P:58,R3:1},
  {flg:{S:"1111",P:"01",C:"11"},N:"斬上げ",P:72,R3:1},
  {flg:{S:"0011",P:"11",C:"11"},N:"溜め斬上げ（溜め１）",P:[92,99,102],ZH:[100,120,130],R3:1},
  {flg:{S:"0011",P:"11",C:"11"},N:"溜め斬上げ（溜め２）",P:[112,119,122],H:110,ZH:[100,120,130],R3:1,PC:"x110%"},
  {flg:{S:"0011",P:"11",C:"11"},N:"溜め斬上げ（溜め３）",P:[157,167,172],H:120,ZH:[100,120,130],R3:1,PC:"x120%"},
  {flg:{S:"0011",P:"11",C:"11"},N:"溜め斬上げ（溜め４）",P:[200,213,220],H:130,ZH:[100,120,130],R3:1,PC:"x130%"},
  {flg:{S:"1111",P:"11",C:"11"},N:"ﾌｨﾆｯｼｭC",P:117},
  {flg:{S:"1100",P:"11",C:"11"},N:"強ガード",P:23},
  {flg:{S:"0110",P:"11",C:"11"},N:"ガード斬り（０回）",P:48},
  {flg:{S:"0110",P:"11",C:"11"},N:"ガード斬り（１回）",P:107},
  {flg:{S:"0110",P:"11",C:"11"},N:"ガード斬り（２回）",P:156},
  {flg:{S:"0110",P:"11",C:"11"},N:"ガード斬り（３回）",P:215},
  {flg:{S:"0001",P:"11",C:"11"},N:"ガード振り下ろし",P:200,R3:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"ガード薙ぎ払い",P:125,R3:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"輝烈剣",P:[27,40,47],ZH:[100*50/100,120*50/100,130*50/100],IH:50,R3:1,X:17,NK:1,NKS:1,KRH:50,NCH:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"ダッシュ斬り",P:60},
];

WEAPON_INFO[4].Motion = [
  {flg:{S:"1111",P:"10",C:"11"},N:"踏み込み斬り",P:40},
  {flg:{S:"1111",P:"01",C:"11"},N:"踏み込み斬り",P:60},
  {flg:{S:"1111",P:"11",C:"11"},N:"縦斬り",P:33},
  {flg:{S:"1000",P:"10",C:"11"},N:"斬り下り",P:36},
  {flg:{S:"1000",P:"01",C:"11"},N:"斬り下り",P:43},
  {flg:{S:"1000",P:"10",C:"11"},N:"突き下り",P:26},
  {flg:{S:"1000",P:"01",C:"11"},N:"突き下り",P:31},
  {flg:{S:"0111",P:"11",C:"11"},N:"避け斬り",P:30},
  {flg:{S:"1111",P:"10",C:"11"},N:"斬上げ",P:28},
  {flg:{S:"1111",P:"01",C:"11"},N:"斬上げ",P:42},
  {flg:{S:"1111",P:"11",C:"11"},N:"突き",P:25},
  {flg:{S:"0011",P:"10",C:"11",R4KJ:"10"},N:"貫刺し",P:[26,29,30],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1},
  {flg:{S:"0011",P:"10",C:"11",R4KJ:"10"},N:"貫刺し",P:[13,15,16],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1,X:2},
  {flg:{S:"0011",P:"01",C:"11",R4KJ:"10"},N:"貫刺し",P:[35,38,39],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1},
  {flg:{S:"0011",P:"01",C:"11",R4KJ:"10"},N:"貫刺し",P:[17,19,20],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1,X:2},
  {flg:{S:"0011",P:"10",C:"11",R4KJ:"01"},N:"気刃貫刺し",P:[25,28,30],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1},
  {flg:{S:"0011",P:"10",C:"11",R4KJ:"01"},N:"気刃貫刺し",P:[12,13,14],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1,X:5},
  {flg:{S:"0011",P:"10",C:"11",R4KJ:"01"},N:"気刃貫刺し",P:[31,35,37],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1},
  {flg:{S:"0011",P:"01",C:"11",R4KJ:"01"},N:"気刃貫刺し",P:[33,36,38],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1},
  {flg:{S:"0011",P:"01",C:"11",R4KJ:"01"},N:"気刃貫刺し",P:[16,17,18],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1,X:5},
  {flg:{S:"0011",P:"01",C:"11",R4KJ:"01"},N:"気刃貫刺し",P:[41,45,47],ZH:[100*67/100,105*67/100,110*67/100],IH:50,KH:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"ステップ斬り",P:26},
  {flg:{S:"1111",P:"10",C:"11"},N:"気刃斬り（練気不足）",P:17},
  {flg:{S:"1111",P:"01",C:"11"},N:"気刃斬り（練気不足）",P:25},
  {flg:{S:"1111",P:"10",C:"11"},N:"気刃斬り１",P:37},
  {flg:{S:"1111",P:"01",C:"11"},N:"気刃斬り１",P:55},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃斬り２",P:39},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃斬り３",P:21,X:2},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃斬り３",P:46},
  {flg:{S:"1111",P:"10",C:"11"},N:"気刃放出斬（ｺﾝﾎﾞ無）",P:[40,49,54],ZH:[100,105,110]},
  {flg:{S:"1111",P:"10",C:"11"},N:"気刃放出斬（ｺﾝﾎﾞ無）",P:[],PC:"※・※"},
  {flg:{S:"1111",P:"01",C:"11"},N:"気刃放出斬（ｺﾝﾎﾞ無）",P:[60,69,74],ZH:[100,105,110]},
  {flg:{S:"1111",P:"01",C:"11"},N:"気刃放出斬（ｺﾝﾎﾞ無）",P:[],PC:"※・※"},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃放出斬（気刃１後）",P:[60,71,76],ZH:[100,105,110]},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃放出斬（気刃１後）",P:[],PC:"※・※"},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃放出斬（気刃２後）",P:[70,82,88],ZH:[100,105,110]},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃放出斬（気刃２後）",P:[],PC:"※・※"},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃放出斬（気刃３後）",P:[90,105,112],ZH:[100,105,110]},
  {flg:{S:"1111",P:"11",C:"11"},N:"気刃放出斬（気刃３後）",P:[],PC:"※・※"},
  {flg:{S:"1111",P:"10",C:"11"},N:"※（練気MAX）",P:[35,41,44],ZH:[100,105,110],NK:1,NKS:1},
  {flg:{S:"1111",P:"01",C:"11"},N:"※（練気MAX）",P:[52,61,66],ZH:[100,105,110],NK:1,NKS:1},
  {flg:{S:"1111",P:"10",C:"11"},N:"※（練気80-99）",P:[26,32,35],ZH:[100,105,110],NK:1,NKS:1},
  {flg:{S:"1111",P:"01",C:"11"},N:"※（練気80-99）",P:[39,48,52],ZH:[100,105,110],NK:1,NKS:1},
  {flg:{S:"1111",P:"10",C:"11"},N:"※（練気50-79）",P:[20,26,29],ZH:[100,105,110],NK:1,NKS:1},
  {flg:{S:"1111",P:"01",C:"11"},N:"※（練気50-79）",P:[31,39,43],ZH:[100,105,110],NK:1,NKS:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"解放連撃（ｹﾞｰｼﾞ50未満）",P:5,ZH:100,IH:100,KH:1,KRH:100},
  {flg:{S:"0001",P:"11",C:"11"},N:"解放連撃（ｹﾞｰｼﾞ50未満）",P:10,ZH:0,IH:0,NK:1,NCr:1,NKS:1,KRH:50,NCH:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"解放連撃（ｹﾞｰｼﾞ50-99）",P:5,ZH:100,IH:100,KH:1,X:2,KRH:100},
  {flg:{S:"0001",P:"11",C:"11"},N:"解放連撃（ｹﾞｰｼﾞ50-99）",P:60,ZH:0,IH:0,NK:1,NCr:1,NKS:1,KRH:50,NCH:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"解放連撃（ｹﾞｰｼﾞMAX）",P:5,ZH:100,IH:100,KH:1,X:3,KRH:100},
  {flg:{S:"0001",P:"11",C:"11"},N:"解放連撃（ｹﾞｰｼﾞMAX）",P:180,ZH:0,IH:0,NK:1,NCr:1,NKS:1,KRH:50,NCH:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭ溜め斬り",P:[18,23,26],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭ練気溜め斬り",P:[70,80,86],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"瞬斬",P:30,NK:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"瞬斬",P:15},
  {flg:{S:"0001",P:"11",C:"11"},N:"いなし突き",P:25,ZH:67,IH:50,KH:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"いなし突き",P:12,ZH:67,IH:50,KH:1,X:5},
  {flg:{S:"0001",P:"11",C:"11"},N:"いなし突き",P:31,ZH:67,IH:50,KH:1},
];

WEAPON_INFO[5].Motion = [
  {flg:{S:"1111",P:"10",C:"11"},N:"振上げ",P:32},
  {flg:{S:"1111",P:"01",C:"11"},N:"振上げ",P:48},
  {flg:{S:"1111",P:"11",C:"11"},N:"片手ｽﾀﾝﾌﾟ",P:60},
  {flg:{S:"1110",P:"10",C:"11"},N:"振抜き",P:100},
  {flg:{S:"1110",P:"01",C:"11"},N:"振抜き",P:130},
  {flg:{S:"0001",P:"10",C:"11"},N:"振抜き",P:100,R5:1},
  {flg:{S:"0001",P:"01",C:"11"},N:"振抜き",P:130,R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"縦振り１",P:52,R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"縦振り２",P:38,R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"縦振り３",P:100,R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"横振り",P:30,R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"溜め振上げ",P:[45,52,55],ZH:[100,105,110],R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"溜め攻撃１",P:[52,56,58],ZH:[100,105,110]},
  {flg:{S:"1000",P:"11",C:"11"},N:"溜め攻撃２",P:[52,56,58],ZH:[100,105,110],R5:1},
  {flg:{S:"1000",P:"11",C:"11"},N:"溜め攻撃２",P:[35,36,37],ZH:[100,105,110],R5:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"溜め攻撃２",P:[52,56,58],ZH:[100,105,110]},
  {flg:{S:"0111",P:"11",C:"11"},N:"溜め攻撃２",P:[35,36,37],ZH:[100,105,110]},
  {flg:{S:"1111",P:"11",C:"11"},N:"スタンプ",P:[40,44,46],ZH:[100,105,110],R5:1},
  {flg:{S:"1111",P:"11",C:"11"},N:"スタンプ",P:[100,109,114],ZH:[100,105,110],R5:1},
  {flg:{S:"1000",P:"11",C:"11"},N:"回転（開始）",P:[20,23,24],ZH:[100,105,110],R5:1},
  {flg:{S:"1000",P:"11",C:"11"},N:"回転",P:[10,11,12],ZH:[100,105,110],R5:1},
  {flg:{S:"1000",P:"11",C:"11"},N:"回転（終了）",P:[40,45,48],ZH:[100,105,110],R5:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱打（初撃）",P:[60,64,66],ZH:[100,105,110],R5:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"乱打",P:[45,48,49],ZH:[100,105,110],R5:1},
  {flg:{S:"0011",P:"11",C:"11"},N:"JPスタンプ",P:[40,41,42],ZH:[100,105,110],R5:1},
  {flg:{S:"0011",P:"11",C:"11"},N:"JPスタンプ",P:[30,35,37],ZH:[100,105,110],R5:1},
  {flg:{S:"0011",P:"11",C:"11"},N:"JPスタンプ",P:[120,128,132],ZH:[100,105,110],R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"2連スタンプ",P:[60,63,64],ZH:[100,105,110],R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"2連スタンプ",P:[45,47,48],ZH:[100,105,110],R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"2連スタンプ",P:[145,153,157],ZH:[100,105,110],R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し",P:20,R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め１",P:[30,32,33],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め１",P:[40,43,44],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め１",P:[10,13,15],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め２",P:[30,32,33],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め２",P:[40,43,44],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め２",P:[70,75,77],ZH:[100,105,110]},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め３",P:[30,32,33],ZH:[100,105,110],R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め３",P:[40,43,44],ZH:[100,105,110],R5:1},
  {flg:{S:"0001",P:"11",C:"11"},N:"振回し溜め３",P:[160,167,170],ZH:[100,105,110],R5:1},
];

WEAPON_INFO[6].Motion = [
  {flg:{S:"1111",P:"11",C:"11"},N:"ぶん回し",P:40},
  {flg:{S:"1001",P:"11",C:"11"},N:"叩きつけ",P:18},
  {flg:{S:"1001",P:"11",C:"11"},N:"叩きつけ",P:57},
  {flg:{S:"0111",P:"11",C:"11"},N:"振り上げ",P:60},
  {flg:{S:"0111",P:"11",C:"11"},N:"突き上げ",P:30},
  {flg:{S:"0111",P:"11",C:"11"},N:"蹴り上げ",P:38},
  {flg:{S:"1111",P:"10",C:"11"},N:"つか殴り",P:16},
  {flg:{S:"1111",P:"01",C:"11"},N:"つか殴り",P:27},
  {flg:{S:"1111",P:"10",C:"11"},N:"演奏開始",P:26},
  {flg:{S:"1111",P:"01",C:"11"},N:"演奏開始",P:39},
  {flg:{S:"1111",P:"10",C:"11"},N:"演奏１",P:43},
  {flg:{S:"1111",P:"01",C:"11"},N:"演奏１",P:64},
  {flg:{S:"1111",P:"10",C:"11"},N:"演奏２",P:50},
  {flg:{S:"1111",P:"01",C:"11"},N:"演奏２",P:75},
  {flg:{S:"1111",P:"10",C:"11"},N:"演奏３",P:49},
  {flg:{S:"1111",P:"01",C:"11"},N:"演奏３",P:73},
  {flg:{S:"1111",P:"10",C:"11"},N:"演奏終了",P:31},
  {flg:{S:"1111",P:"01",C:"11"},N:"演奏終了",P:46},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭ回転攻撃",P:40,X:2},
  {flg:{S:"0001",P:"11",C:"11"},N:"音響攻撃",P:[],M:30,T:-1},
];

WEAPON_INFO[7].Motion = [
  {flg:{S:"1111",P:"10",C:"11"},N:"武器出し中段",P:36},
  {flg:{S:"1111",P:"01",C:"11"},N:"武器出し中段",P:54},
  {flg:{S:"1111",P:"10",C:"11"},N:"武器出し上段",P:36},
  {flg:{S:"1111",P:"01",C:"11"},N:"武器出し上段",P:54},
  {flg:{S:"1000",P:"11",C:"11"},N:"中段突き１２",P:32},
  {flg:{S:"1000",P:"11",C:"11"},N:"中段突き３",P:38,R7:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"中段突き１２３",P:32},
  {flg:{S:"0111",P:"11",C:"11"},N:"中段突き４",P:38,R7:1},
  {flg:{S:"1000",P:"11",C:"11"},N:"上段突き１２",P:35},
  {flg:{S:"1000",P:"11",C:"11"},N:"上段突き３",P:38,R7:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"上段突き１２３",P:35},
  {flg:{S:"0111",P:"11",C:"11"},N:"上段突き４",P:38,R7:1},
  {flg:{S:"0111",P:"11",C:"11"},N:"天井突き１２３",P:38},
  {flg:{S:"0111",P:"11",C:"11"},N:"天井突き４",P:43,R7:1},
  {flg:{S:"1000",P:"11",C:"10"},N:"突進",P:25},
  {flg:{S:"1000",P:"11",C:"01"},N:"ドリル突進",P:31},
  {flg:{S:"1000",P:"11",C:"01"},N:"ドリル突進",P:6},
  {flg:{S:"1000",P:"11",C:"01"},N:"ドリル突進",P:9},
  {flg:{S:"1000",P:"10",C:"11"},N:"突進ﾌｨﾆｯｼｭ",P:50},
  {flg:{S:"1000",P:"01",C:"11"},N:"突進ﾌｨﾆｯｼｭ",P:75},
  {flg:{S:"1111",P:"11",C:"11"},N:"ふんばり突き",P:[50,55,58],ZH:[100,105,110]},
  {flg:{S:"1111",P:"11",C:"11"},N:"ふんばり突き（溜め）",P:[78,89,94],ZH:[100,105,110]},
  {flg:{S:"1100",P:"11",C:"11"},N:"ガード突き",P:25},
  {flg:{S:"0011",P:"10",C:"11"},N:"ｶﾞｰﾄﾞﾁｬｰｼﾞ",P:3,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"0011",P:"10",C:"11"},N:"ｶﾞｰﾄﾞﾁｬｰｼﾞ",P:25,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"0011",P:"01",C:"11"},N:"ｶﾞｰﾄﾞﾁｬｰｼﾞ",P:4,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"0011",P:"01",C:"11"},N:"ｶﾞｰﾄﾞﾁｬｰｼﾞ",P:37,T:2,H:100,S:5,PC:"<small>盾</small>"},
  {flg:{S:"0001",P:"11",C:"11"},N:"回避突き",P:30},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾌｨﾆｯｼｭ突き",P:91},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭJP突き",P:50},
  {flg:{S:"0001",P:"11",C:"11"},N:"ﾀﾞｯｼｭｶﾞｰﾄﾞ",P:25,T:2,H:100,S:5,PC:"<small>盾</small>"},
];

WEAPON_INFO[8].Motion = [
  {flg:{S:"1111",P:"10",C:"11"},N:"踏込斬上げ",P:38},
  {flg:{S:"1111",P:"01",C:"11"},N:"踏込斬上げ",P:57},
  {flg:{S:"1111",P:"10",C:"11"},N:"踏込薙払い",P:34},
  {flg:{S:"1111",P:"01",C:"11"},N:"踏込薙払い",P:51},
  {flg:{S:"1111",P:"11",C:"11"},N:"連撃砲（折返し）",P:18},
  {flg:{S:"1111",P:"11",C:"11"},N:"前方突き１２",P:33},
  {flg:{S:"1111",P:"11",C:"11"},N:"前方突き３",P:34},
  {flg:{S:"1111",P:"11",C:"11"},N:"斬り上げ",P:42},
  {flg:{S:"1111",P:"11",C:"11"},N:"上方突き",P:30},
  {flg:{S:"0001",P:"11",C:"11"},N:"ＢＤ薙払い",P:58},
];

WEAPON_INFO[8].Shelling_Normal = [
  {N:"通常LV1",M:16,FZ:5,ZB:300,ZM:10,DM:14},
  {N:"通常LV2",M:23,FZ:8,ZB:313,ZM:14,DM:21},
  {N:"通常LV3",M:30,FZ:10,ZB:326,ZM:18,DM:27},
  {N:"通常LV4",M:35,FZ:12,ZB:339,ZM:21,DM:32},
  {N:"通常LV5",M:40,FZ:14,ZB:352,ZM:24,DM:36},
  {N:"通常LV6",M:65,FZ:16,ZB:365,ZM:39,DM:59},
  {N:"通常LV7",M:75,FZ:18,ZB:378,ZM:45,DM:68},
  {N:"通常LV8",M:85,FZ:20,ZB:391,ZM:51,DM:77},
  {N:"通常LV9",M:99,FZ:22,ZB:404,ZM:59,DM:89},
];

WEAPON_INFO[8].Shelling_Wide = [
  {N:"拡散LV1",M:31,FZ:15,ZB:550,ZM:19,DM:28},
  {N:"拡散LV2",M:44,FZ:20,ZB:563,ZM:26,DM:40},
  {N:"拡散LV3",M:57,FZ:24,ZB:576,ZM:34,DM:51},
  {N:"拡散LV4",M:63,FZ:29,ZB:589,ZM:38,DM:57},
  {N:"拡散LV5",M:68,FZ:34,ZB:602,ZM:41,DM:61},
  {N:"拡散LV6",M:107,FZ:39,ZB:615,ZM:64,DM:96},
  {N:"拡散LV7",M:119,FZ:43,ZB:628,ZM:71,DM:107},
  {N:"拡散LV8",M:133,FZ:47,ZB:641,ZM:80,DM:120},
  {N:"拡散LV9",M:153,FZ:51,ZB:654,ZM:92,DM:138},
];

WEAPON_INFO[8].Shelling_Long = [
  {N:"放射LV1",M:24,FZ:11,ZB:500,ZM:14,DM:22},
  {N:"放射LV2",M:33,FZ:16,ZB:513,ZM:20,DM:30},
  {N:"放射LV3",M:42,FZ:20,ZB:526,ZM:25,DM:38},
  {N:"放射LV4",M:48,FZ:22,ZB:539,ZM:29,DM:43},
  {N:"放射LV5",M:53,FZ:24,ZB:552,ZM:32,DM:48},
  {N:"放射LV6",M:84,FZ:27,ZB:565,ZM:50,DM:76},
  {N:"放射LV7",M:95,FZ:30,ZB:578,ZM:58,DM:86},
  {N:"放射LV8",M:106,FZ:33,ZB:591,ZM:64,DM:95},
  {N:"放射LV9",M:122,FZ:36,ZB:604,ZM:73,DM:110},
];

WEAPON_INFO[8].Wyvern_Normal = [
  {N:"竜撃砲LV1",M:40,FZ:12,X:5},
  {N:"竜撃砲LV2",M:50,FZ:16,X:5},
  {N:"竜撃砲LV3",M:62,FZ:18,X:5},
  {N:"竜撃砲LV4",M:69,FZ:21,X:5},
  {N:"竜撃砲LV5",M:76,FZ:23,X:5},
  {N:"竜撃砲LV6",M:120,FZ:25,X:5},
  {N:"竜撃砲LV7",M:132,FZ:28,X:5},
  {N:"竜撃砲LV8",M:153,FZ:30,X:5},
  {N:"竜撃砲LV9",M:172,FZ:33,X:5},
];

WEAPON_INFO[8].Wyvern_Wide = [
  {N:"竜撃砲LV1",M:33,FZ:12,X:5},
  {N:"竜撃砲LV2",M:43,FZ:16,X:5},
  {N:"竜撃砲LV3",M:55,FZ:18,X:5},
  {N:"竜撃砲LV4",M:62,FZ:21,X:5},
  {N:"竜撃砲LV5",M:69,FZ:23,X:5},
  {N:"竜撃砲LV6",M:109,FZ:25,X:5},
  {N:"竜撃砲LV7",M:122,FZ:28,X:5},
  {N:"竜撃砲LV8",M:142,FZ:30,X:5},
  {N:"竜撃砲LV9",M:159,FZ:33,X:5},
];

WEAPON_INFO[8].Wyvern_Long = [
  {N:"竜撃砲LV1",M:45,FZ:15,X:5},
  {N:"竜撃砲LV2",M:55,FZ:18,X:5},
  {N:"竜撃砲LV3",M:67,FZ:21,X:5},
  {N:"竜撃砲LV4",M:74,FZ:23,X:5},
  {N:"竜撃砲LV5",M:81,FZ:25,X:5},
  {N:"竜撃砲LV6",M:139,FZ:28,X:5},
  {N:"竜撃砲LV7",M:153,FZ:30,X:5},
  {N:"竜撃砲LV8",M:178,FZ:33,X:5},
  {N:"竜撃砲LV9",M:198,FZ:35,X:5},
];

WEAPON_INFO[8].HeatBlade = [
  {N:"砲撃LV1",Z:10},
  {N:"砲撃LV2",Z:12},
  {N:"砲撃LV3",Z:14},
  {N:"砲撃LV4",Z:16},
  {N:"砲撃LV5",Z:18},
  {N:"砲撃LV6",Z:20},
  {N:"砲撃LV7",Z:22},
  {N:"砲撃LV8",Z:24},
  {N:"砲撃LV9",Z:26},
];

WEAPON_INFO[9].Motion = [
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"抜刀攻撃",P:28,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"10"},N:"ﾀﾞｯｼｭ突き",P:12,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"10"},N:"ﾀﾞｯｼｭ突き",P:20,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"01"},N:"ﾀﾞｯｼｭ旋回",P:2,X:4,ZH:100,IH:100,R9:1,KH:1},
  {flg:{S:"1111",P:"11",C:"11",R:"01"},N:"ﾀﾞｯｼｭ旋回",P:10,X:2,ZH:100,IH:100,R9:1,KH:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"ﾀﾞｯｼｭ連携",P:[],R9K:[7,9,11],X:2,R9:1,NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"ﾀﾞｯｼｭ連携",P:12,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"ﾀﾞｯｼｭ連携",P:20,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"基本１",P:14,R9:1},
  {flg:{S:"1100",P:"11",C:"11",R:"11"},N:"基本２",P:11,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"溜め突き（溜１）",P:[11,12,13],ZH:[100,105,110],R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"溜め突き（溜２）",P:[38,41,42],ZH:[100,105,110],R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"溜め突き（溜３）",P:[58,62,65],ZH:[100,105,110],R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"EX追撃（溜１）",P:[],R9H:[8,9,10,11],ZH:0,IH:0,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"EX追撃（溜２）",P:[],R9H:[23,26,29,32],ZH:0,IH:0,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"EX追撃（溜３）",P:[],R9H:[33,38,43,48],ZH:0,IH:0,NKS:1,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"基本３",P:18,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"基本４",P:9,X:2,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"10"},N:"基本５（溜１）",P:[16,19,20],ZH:[100,105,110],R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"10"},N:"基本５（溜２）",P:[50,57,61],ZH:[100,105,110],R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"10"},N:"基本５（溜３）",P:[110,125,132],ZH:[100,105,110],R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"01"},N:"連続突き１",P:11,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"01"},N:"連突き１",P:12,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"01"},N:"連突き２",P:10,X:4,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"01"},N:"連突き３",P:40,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊１",P:[],R9K:[11,13,15],X:2,R9:1,NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊２",P:10,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊３",P:9,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊３",P:12,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊４",P:26,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊５",P:16,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊５",P:24,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊５",P:11,X:4,R9:1},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"特殊６",P:[],R9K:[19,23,27],X:2,R9:1,NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"JP回避",P:[],R9K:[5,6,7],X:2,NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"滞空１",P:15},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"滞空２",P:10,X:2},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"滞空３",P:[],R9K:[15,19,23],NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"滞空３",P:[],R9K:[16,20,24],NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"0110",P:"11",C:"11",R:"11"},N:"縦回転",P:12,X:2},
  {flg:{S:"1001",P:"11",C:"11",R:"10"},N:"縦回転",P:12,X:2},
  {flg:{S:"1001",P:"11",C:"11",R:"01"},N:"滑空蹴",P:[],R9K:[14,17,19],NK:1,PC:"<small>蹴</small>"},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"龍気穿撃（接触）",P:[],R9H:[0,8,10,15],X:2,R9:1,KRH:50},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"龍気穿撃（龍気）",P:40,ZH:0,IH:0,R9:1,NK:1,NKS:1,NCr:1,KRH:50},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"空中穿撃（接触）",P:[],R9H:[0,7,9,12],X:2,KRH:50},
  {flg:{S:"1111",P:"11",C:"11",R:"11"},N:"空中穿撃（龍気）",P:30,ZH:0,IH:0,NK:1,NKS:1,NCr:1,KRH:50},
  {flg:{S:"0101",P:"11",C:"11",R:"11"},N:"EX回避（前）",P:34,R9:1},
  {flg:{S:"0101",P:"11",C:"11",R:"11"},N:"EX回避（横）",P:20,X:2,R9:1},
  {flg:{S:"0101",P:"11",C:"11",R:"11"},N:"EX回避（後）",P:24,R9:1},
  {flg:{S:"0001",P:"11",C:"11",R:"11"},N:"空中EX回避",P:16,X:2},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極拳舞（1-4hit）",P:12,ZH:10,IH:10,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極拳舞（5-8hit）",P:14,ZH:10,IH:10,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極拳舞（9-12hit）",P:16,ZH:10,IH:10,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極拳舞（13hit-）",P:23,ZH:10,IH:10,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極解放",P:20,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極解放",P:[],R9H:[10,11,12,13],ZH:0,IH:0,NKS:1,R9:1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極・爆発（1-3hit）",P:[],M:50,T:-1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極・爆発（4-11hit）",P:[],M:100,T:-1},
  {flg:{S:"0011",P:"11",C:"11",R:"11"},N:"穿極・爆発（12hit-）",P:[],M:200,T:-1},
];

WEAPON_INFO[10].Motion = [
  {flg:{S:"1011",P:"11",C:"11",M:"10"},N:"縦斬り",P:46},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"縦斬り",P:46},
  {flg:{S:"1011",P:"11",C:"11",M:"10"},N:"横斬り",P:34},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"横斬り",P:34},
  {flg:{S:"1011",P:"11",C:"11",M:"10"},N:"斬上げ",P:35},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"斬上げ",P:35},
  {flg:{S:"1011",P:"11",C:"11",M:"10"},N:"突進突き",P:33},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"突進突き",P:33},
  {flg:{S:"1011",P:"11",C:"11",M:"10"},N:"振り回し",P:35},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"振り回し",P:35},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"溜め縦斬り",P:19},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"溜め縦斬り",P:19},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"縦斬り",P:44,R10:1},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"斬上げ",P:46,R10:1},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"横斬り",P:37,R10:1},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"解放突き（開始）",P:19,R10:1,KRH:50},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"解放突き（持続）",P:13,R10:1,KRH:50},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"解放突き（弱ﾌｨﾆｯｼｭ）",P:160,R10:1,NK:1,NKS:1,KRH:100},
  {flg:{S:"1000",P:"11",C:"11",M:"01"},N:"解放突き（ﾌｨﾆｯｼｭ）",P:270,R10:1,NK:1,NKS:1,KRH:100},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"ﾀﾞｯｼｭ回転斬り",P:32,R10:1},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"ﾀﾞｯｼｭ回転斬り",P:41},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ﾀﾞｯｼｭ回転斬り",P:32,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ﾀﾞｯｼｭ回転斬り",P:41},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"ﾀﾞｯｼｭ斬上げ",P:29,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ﾀﾞｯｼｭ斬上げ",P:29,R10:1},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"ｽﾗｯｼｭ回避",P:21,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｽﾗｯｼｭ回避",P:21,R10:1},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"溜め斬上げ",P:[75,81,83],ZH:[100,105,110],R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"溜め斬上げ",P:[75,81,83],ZH:[100,105,110],R10:1},
  {flg:{S:"0100",P:"11",C:"11",M:"11"},N:"無限乱斬",P:[33,35,37],ZH:[100*50/100,105*50/100,110*50/100],IH:50,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"無限乱斬",P:[33,35,37],ZH:[100*50/100,105*50/100,110*50/100],IH:50,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"縦斬り",P:46,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"斬上げ",P:48,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"横斬り",P:41,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ﾀﾞｯｼｭ回転斬り",P:33,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ﾀﾞｯｼｭ回転斬り",P:45,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ﾀﾞｯｼｭ斬上げ",P:31,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ｽﾗｯｼｭ回避",P:22,R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"溜め斬上げ",P:[79,85,87],ZH:[100,105,110],R10:1},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"無限乱斬",P:[35,37,39],ZH:[100*50/100,105*50/100,110*50/100],IH:50,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"連続斬り",P:53,X:2,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"連続斬ﾌｨﾆｯｼｭ",P:42,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"連続斬ﾌｨﾆｯｼｭ",P:73,R10:1},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"属性突き",P:19,R10:1,KRH:50},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"解放突き（持続）",P:13,R10:1,KRH:50},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"解放突き（弱ﾌｨﾆｯｼｭ）",P:160,R10:1,NK:1,NKS:1,KRH:100},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"解放突き（ﾌｨﾆｯｼｭ）",P:270,R10:1,NK:1,NKS:1,KRH:100},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"吸収大解放（持続）",P:13,X:3,R10:1,KRH:50},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"大解放ﾌｨﾆｯｼｭ（持続0ﾋｯﾄ）",P:9,X:2,R10:1,KRH:100},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"大解放ﾌｨﾆｯｼｭ（持続0ﾋｯﾄ）",P:125,R10:1,NK:1,NKS:1,KRH:100},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"大解放ﾌｨﾆｯｼｭ（持続1-2ﾋｯﾄ）",P:18,X:2,R10:1,KRH:100},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"大解放ﾌｨﾆｯｼｭ（持続1-2ﾋｯﾄ）",P:280,R10:1,NK:1,NKS:1,KRH:100},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"大解放ﾌｨﾆｯｼｭ（持続ﾌﾙﾋｯﾄ）",P:27,X:2,R10:1,KRH:100},
  {flg:{S:"0011",P:"11",C:"11",M:"01"},N:"大解放ﾌｨﾆｯｼｭ（持続ﾌﾙﾋｯﾄ）",P:375,R10:1,NK:1,NKS:1,KRH:100},
];

WEAPON_INFO[11].Motion = [
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"武器出し縦斬",P:61},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"縦斬り１",P:43},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"斬上げ",P:35},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"縦斬り２",P:46},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"横斬り１",P:56},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"横斬り２",P:46},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"横斬り３",P:64},
  {flg:{S:"0001",P:"11",C:"11",M:"10",R11MG:"11"},N:"ﾌｨﾆｯｼｭ斬り",P:120},
  {flg:{S:"0001",P:"11",C:"11",M:"10",R11MG:"01"},N:"ﾌｨﾆｯｼｭ斬り",P:10,ZH:0,NK:1,NKS:1,X:3},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（0回）",P:30},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（1回）",P:30},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（1回）",P:80,NK:1,NKS:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（2回）",P:30},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（2回）",P:95,NK:1,NKS:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（3回）",P:30},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"ｶｳﾝﾀｰ（3回）",P:120,NK:1,NKS:1},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"磁力二連斬",P:44},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"磁力二連斬",P:54},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"横磁回避斬上げ",P:55},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"下がり斬り",P:20,X:2},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"磁力強襲",P:80},
  {flg:{S:"0001",P:"11",C:"11",M:"10"},N:"垂直落下斬り",P:200},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"横振り１",P:44},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"横振り２",P:53},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"振り回し",P:100},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"振り下し",P:46},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"三連強打１",P:51},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"三連強打２",P:58},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"三連強打３",P:130},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"溜め強打",P:[338,363,373],ZH:[100,100,100]},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ﾊﾞｯｸｽﾀﾝﾌﾟ",P:96},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ﾊﾞｯｸｽﾀﾝﾌﾟ",P:121},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ｶﾞｰﾄﾞ強襲",P:73},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"ｶﾞｰﾄﾞ強襲",P:90},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁力二連振り",P:42},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁力二連振り",P:52},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁衝撃（空振）",P:75},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁衝撃（成功）",P:125},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁衝撃（成功）",P:5,ZH:0,NK:1,NKS:1,X:3},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁力強襲",P:40},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"磁力強襲",P:50},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"垂直落下振り",P:25},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"垂直落下振り",P:80},
  {flg:{S:"0001",P:"11",C:"11",M:"01"},N:"垂直落下振り",P:120},
  {flg:{S:"0001",P:"11",C:"11",M:"11"},N:"磁縛",P:1,T:1},
  {flg:{S:"0001",P:"11",C:"11",M:"11"},N:"磁縛ﾌｨﾆｯｼｭ",P:600,T:1,NK:1,NKS:1,R11F:1},
];

WEAPON_INFO[12].Bullet = {
  0: {N:"LV1通常弾",P:6},
  1: {N:"LV2通常弾",P:12},
  2: {N:"LV3通常弾",P:12,PC:"x<i>nHit(跳弾)</i>"},
  3: {N:"LV1貫通弾",P:10,PC:"x<i>3Hit</i>"},
  4: {N:"LV2貫通弾",P:9,PC:"x<i>4Hit</i>"},
  5: {N:"LV3貫通弾",P:7,PC:"x<i>6Hit</i>"},

  6: {N:"LV1散弾",P:5,ZT:2,ZP:5,PC:"x<i>3Hit</i>"},
  7: {N:"LV2散弾",P:5,ZT:2,ZP:4,PC:"x<i>4Hit</i>"},
  8: {N:"LV3散弾",P:5,ZT:2,ZP:4,PC:"x<i>5Hit</i>"},
  S6: {N:"LV1打撃弾",P:10,T:3,PC:"x<i>2Hit</i>"},
  S7: {N:"LV2打撃弾",P:9,T:3,PC:"x<i>3Hit</i>"},
  S8: {N:"LV3打撃弾",P:7,T:3,PC:"x<i>5Hit</i>"},

  9: {N:"LV1徹甲榴弾",P:3,BN:"爆破",BM:30,BFZ:[40,60,66,72]},
  10: {N:"LV2徹甲榴弾",P:3,BN:"爆破",BM:40,BFZ:[60,90,96,102]},
  11: {N:"LV3徹甲榴弾",P:3,BN:"爆破",BM:50,BFZ:[80,120,128,132]},
  12: {N:"LV1拡散弾",P:6,BN:"子拡散",BM:32,BFZ:2,BC:"x<i>3個</i>"},
  13: {N:"LV2拡散弾",P:6,BN:"子拡散",BM:32,BFZ:2,BC:"x<i>4個</i>"},
  14: {N:"LV3拡散弾",P:6,BN:"子拡散",BM:32,BFZ:2,BC:"x<i>5個</i>"},

  17: {N:"LV1毒弾",P:10,IT:1,IP:25},
  18: {N:"LV2毒弾",P:10,IT:1,IP:50},
  19: {N:"LV1麻痺弾",P:10,IT:2,IP:25},
  20: {N:"LV2麻痺弾",P:10,IT:2,IP:50},
  21: {N:"LV1睡眠弾",P:0,IT:3,IP:25},
  22: {N:"LV2睡眠弾",P:0,IT:3,IP:50},

  23: {N:"火炎弾",P:1,ZT:1,ZB:40},
  24: {N:"水冷弾",P:1,ZT:2,ZB:20,PC:"x<i>3Hit</i>"},
  25: {N:"雷撃弾",P:1,ZT:3.,ZB:20,PC:"x<i>3Hit</i>"},
  26: {N:"氷結弾",P:1,ZT:5,ZB:20,PC:"x<i>3Hit</i>"},
  27: {N:"滅龍弾",P:1,ZT:4,ZP:75,PC:"x<i>6Hit</i>"},

  28: {N:"強酸弾",P:1,PC:"斬打弾肉質+10"},
  29: {N:"属性酸弾",P:1,PC:"属性肉質+10"},
};

WEAPON_INFO[13].Bullet = {
  0: {N:"LV1通常弾",P:6,LN:[6,7,9,10,12,13]},
  1: {N:"LV2通常弾",P:12,LN:[6,7,9,10,12,13]},
  2: {N:"LV3通常弾",P:12,LN:[6,7,9,10,12,13],PC:"x<i>nHit(跳弾)</i>"},

  C0: {N:"LV1通常弾",PB:24,M:5},
  C1: {N:"LV2通常弾",PB:60,M:20},
  C2: {N:"LV3通常弾",PB:60,M:10,PC:"x<i>nHit(跳弾)</i>"},
  P0: {N:"LV1通常弾",PB:36,M:5},
  P1: {N:"LV2通常弾",PB:84,M:20},
  P2: {N:"LV3通常弾",PB:84,M:10,PC:"x<i>nHit(跳弾)</i>"},

  3: {N:"LV1貫通弾",P:12,LN:[2,3,4,5,6,7],PC:"x<i>3Hit</i>"},
  4: {N:"LV2貫通弾",P:11,LN:[2,3,4,5,6,7],PC:"x<i>4Hit</i>"},
  5: {N:"LV3貫通弾",P:9,LN:[2,3,4,5,6,7],PC:"x<i>6Hit</i>"},

  C3: {N:"LV1貫通弾",PB:50,M:20,PC:"x<i>3Hit</i>"},
  C4: {N:"LV2貫通弾",PB:45,M:20,PC:"x<i>4Hit</i>"},
  C5: {N:"LV3貫通弾",PB:35,M:20,PC:"x<i>6Hit</i>"},
  P3: {N:"LV1貫通弾",PB:70,M:20,PC:"x<i>3Hit</i>"},
  P4: {N:"LV2貫通弾",PB:63,M:20,PC:"x<i>4Hit</i>"},
  P5: {N:"LV3貫通弾",PB:49,M:20,PC:"x<i>6Hit</i>"},

  6: {N:"LV1散弾",P:5,ZT:2,ZP:5,LN:[2,3,4,5,6,7],PC:"x<i>3Hit</i>"},
  7: {N:"LV2散弾",P:5,ZT:2,ZP:4,LN:[2,3,4,5,6,7],PC:"x<i>4Hit</i>"},
  8: {N:"LV3散弾",P:5,ZT:2,ZP:4,LN:[2,3,4,5,6,7],PC:"x<i>5Hit</i>"},

  C6: {N:"LV1散弾",PB:30,M:5,ZT:2,ZB:5,PC:"x<i>3Hit</i>"},
  C7: {N:"LV2散弾",PB:30,M:5,ZT:2,ZB:4,PC:"x<i>4Hit</i>"},
  C8: {N:"LV3散弾",PB:30,M:5,ZT:2,ZB:4,PC:"x<i>5Hit</i>"},
  P6: {N:"LV1散弾",PB:40,M:5,ZT:2,ZB:5,PC:"x<i>3Hit</i>"},
  P7: {N:"LV2散弾",PB:40,M:5,ZT:2,ZB:4,PC:"x<i>4Hit</i>"},
  P8: {N:"LV3散弾",PB:40,M:5,ZT:2,ZB:4,PC:"x<i>5Hit</i>"},

  S6: {N:"LV1打撃弾",P:10,LN:[2,3,4,5,6,7],PC:"x<i>2Hit</i>"},
  S7: {N:"LV2打撃弾",P:9,LN:[2,3,4,5,6,7],PC:"x<i>3Hit</i>"},
  S8: {N:"LV3打撃弾",P:7,LN:[2,3,4,5,6,7],PC:"x<i>5Hit</i>"},

  CS6: {N:"LV1打撃弾",PB:50,M:20,PC:"x<i>2Hit</i>"},
  CS7: {N:"LV2打撃弾",PB:45,M:20,PC:"x<i>3Hit</i>"},
  CS8: {N:"LV3打撃弾",PB:35,M:20,PC:"x<i>5Hit</i>"},
  PS6: {N:"LV1打撃弾",PB:70,M:20,PC:"x<i>2Hit</i>"},
  PS7: {N:"LV2打撃弾",PB:63,M:20,PC:"x<i>3Hit</i>"},
  PS8: {N:"LV3打撃弾",PB:49,M:20,PC:"x<i>5Hit</i>"},

  9: {N:"LV1徹甲榴弾",P:3,BN:"爆破",BM:30,BFZ:[40,60,66,72],LN:[2,3,4]},
  10: {N:"LV2徹甲榴弾",P:3,BN:"爆破",BM:40,BFZ:[60,90,96,102],LN:[2,3,4]},
  11: {N:"LV3徹甲榴弾",P:3,BN:"爆破",BM:50,BFZ:[80,120,128,132],LN:[2,3,4]},

  C9: {N:"LV1徹甲榴弾",PB:15,M:20,BN:"爆破",BMB:24,BFZ:[40,60,66,72]},
  C10: {N:"LV2徹甲榴弾",PB:15,M:20,BN:"爆破",BMB:32,BFZ:[60,90,96,102]},
  C11: {N:"LV3徹甲榴弾",PB:15,M:20,BN:"爆破",BMB:40,BFZ:[80,120,128,132]},
  P9: {N:"LV1徹甲榴弾",PB:24,M:20,BN:"爆破",BMB:30,BFZ:[40,60,66,72]},
  P10: {N:"LV2徹甲榴弾",PB:24,M:20,BN:"爆破",BMB:40,BFZ:[60,90,96,102]},
  P11: {N:"LV3徹甲榴弾",PB:24,M:20,BN:"爆破",BMB:50,BFZ:[80,120,128,132]},

  12: {N:"LV1拡散弾",P:6,BN:"子拡散",BM:32,BFZ:2,BC:"x<i>3個</i>"},
  13: {N:"LV2拡散弾",P:6,BN:"子拡散",BM:32,BFZ:2,BC:"x<i>4個</i>"},
  14: {N:"LV3拡散弾",P:6,BN:"子拡散",BM:32,BFZ:2,BC:"x<i>5個</i>"},

  17: {N:"LV1毒弾",P:10,IT:1,IP:25,LN:[3,4,5]},
  18: {N:"LV2毒弾",P:10,IT:1,IP:50,LN:[2,3]},
  19: {N:"LV1麻痺弾",P:10,IT:2,IP:25,LN:[3,4,5]},
  20: {N:"LV2麻痺弾",P:10,IT:2,IP:50,LN:[2,3]},
  21: {N:"LV1睡眠弾",P:0,IT:3,IP:25,LN:[3,4,5]},
  22: {N:"LV2睡眠弾",P:0,IT:3,IP:50,LN:[2,3]},

  C17: {N:"LV1毒弾",PB:60,IT:1,IPB:20,LN:[3,4,5]},
  C18: {N:"LV2毒弾",PB:90,IT:1,IPB:40,LN:[2,3]},
  C19: {N:"LV1麻痺弾",PB:60,IT:2,IPB:20,LN:[3,4,5]},
  C20: {N:"LV2麻痺弾",PB:90,IT:2,IPB:40,LN:[2,3]},
  C21: {N:"LV1睡眠弾",PB:0,IT:3,IPB:20,LN:[3,4,5]},
  C22: {N:"LV2睡眠弾",PB:0,IT:3,IPB:40,LN:[2,3]},
  P17: {N:"LV1毒弾",PB:80,IT:1,IPB:25,LN:[3,4,5]},
  P18: {N:"LV2毒弾",PB:120,IT:1,IPB:50,LN:[2,3]},
  P19: {N:"LV1麻痺弾",PB:80,IT:2,IPB:25,LN:[3,4,5]},
  P20: {N:"LV2麻痺弾",PB:120,IT:2,IPB:50,LN:[2,3]},
  P21: {N:"LV1睡眠弾",PB:0,IT:3,IPB:25,LN:[3,4,5]},
  P22: {N:"LV2睡眠弾",PB:0,IT:3,IPB:50,LN:[2,3]},

  23: {N:"火炎弾",P:1,ZT:1,ZB:50,LN:[3,4,6,7]},
  24: {N:"水冷弾",P:1,ZT:2,ZB:25,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  25: {N:"雷撃弾",P:1,ZT:3,ZB:27,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  26: {N:"氷結弾",P:1,ZT:5,ZB:25,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  27: {N:"滅龍弾",P:1,ZT:4,ZP:90,LN:[2,3],PC:"x<i>6Hit</i>"},

  C23: {N:"火炎弾",PB:5,M:20,ZB:50,ZT:1,LN:[3,4,6,7]},
  C24: {N:"水冷弾",PB:5,M:20,ZB:25,ZT:2,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  C25: {N:"雷撃弾",PB:5,M:20,ZB:27,ZT:3,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  C26: {N:"氷結弾",PB:5,M:20,ZB:25,ZT:5,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  C27: {N:"滅龍弾",PB:5,M:20,ZB:90,ZT:4,LN:[2,3],PC:"x<i>6Hit</i>"},
  P23: {N:"火炎弾",PB:5,M:20,ZB:50,ZT:1,LN:[3,4,6,7]},
  P24: {N:"水冷弾",PB:5,M:20,ZB:25,ZT:2,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  P25: {N:"雷撃弾",PB:5,M:20,ZB:27,ZT:3,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  P26: {N:"氷結弾",PB:5,M:20,ZB:25,ZT:5,LN:[3,4,6,7],PC:"x<i>3Hit</i>"},
  P27: {N:"滅龍弾",PB:5,M:20,ZB:90,ZT:4,LN:[2,3],PC:"x<i>6Hit</i>"},

  28: {N:"排熱弾",R12H:[22,24,26,28],FZ:10,BC:"x<i>nHit</i>"},
  G28: {N:"砲熱照射",R12H:[50,55,60,65],FZ:10,BC:"x<i>90Hit</i>"},
};

WEAPON_INFO[14].Motion = [
  {flg:{S:"1000",P:"11",C:"11"},N:"薙ぎ払い",P:10,BA:2,ZH:50,T:1,S:-1},
  {flg:{S:"1000",P:"11",C:"11"},N:"縦斬り",P:18,BA:2,ZH:50,T:1,S:-1},
  {flg:{S:"0111",P:"10",C:"11"},N:"昇竜弓（開始）",P:12,BA:10,ZH:50,T:1,X:2,S:-1},
  {flg:{S:"0111",P:"01",C:"11"},N:"昇竜弓（開始）",P:17,BA:10,ZH:50,T:1,X:2,S:-1},
  {flg:{S:"0111",P:"10",C:"11"},N:"昇竜弓（上昇）",P:10,BA:10,ZH:50,T:1,X:2,S:-1},
  {flg:{S:"0111",P:"01",C:"11"},N:"昇竜弓（上昇）",P:15,BA:10,ZH:50,T:1,X:2,S:-1},
  {flg:{S:"0111",P:"10",C:"11"},N:"昇竜弓（頂点）",P:31,BA:10,ZH:50,T:1,S:-1},
  {flg:{S:"0111",P:"10",C:"11"},N:"昇竜弓（頂点）",P:10,BA:10,ZH:50,T:1,S:-1},
  {flg:{S:"0111",P:"01",C:"11"},N:"昇竜弓（頂点）",P:41,BA:10,ZH:50,T:1,S:-1},
  {flg:{S:"0111",P:"01",C:"11"},N:"昇竜弓（頂点）",P:15,BA:10,ZH:50,T:1,S:-1},
];

WEAPON_INFO[14].Bullet = {
  0: {N:"連射LV1",P:[14],BA:70,C:"　|14"},
  1: {N:"連射LV2",P:[14,6],BA:40,C:"　|14-6"},
  2: {N:"連射LV3",P:[14,6,5],BA:32,C:"　|14-6-5"},
  3: {N:"連射LV4",P:[14,6,5,3],BA:28,C:"　|14-6-5-3"},
  4: {N:"拡散LV1",P:[6,4],BA:26,C:"　|4-6-4"},
  5: {N:"拡散LV2",P:[7,6],BA:32,C:"　|6-7-6"},
  6: {N:"拡散LV3",P:[6,4],BA:22,C:"　|4-6-6-6-4"},
  7: {N:"拡散LV4",P:[7,6,4],BA:24,C:"　|4-6-7-6-4"},
  8: {N:"貫通LV1",P:[7],BA:28,C:"　|7x3Hit",PC:"x<i>3Hit</i>"},
  9: {N:"貫通LV2",P:[7],BA:28,C:"　|7x4Hit",PC:"x<i>4Hit</i>"},
  10: {N:"貫通LV3",P:[7],BA:28,C:"　|7x5Hit",PC:"x<i>5Hit</i>"},
  11: {N:"貫通LV4",P:[7],BA:28,C:"　|7x6Hit",PC:"x<i>6Hit</i>"},
  12: {N:"曲射：放散型",P:18,BA:26,C:"　|18x7Hit",PC:"x<i>7Hit</i>"},
  13: {N:"曲射：集中型",P:16,BA:28,C:"　|16x6Hit",PC:"x<i>6Hit</i>"},
  14: {N:"曲射：爆裂型",P:15,BA:50,M:19,C:"　|15+爆19"},
  15: {N:"曲射：切断型",P:12,BA:24,C:"　|12x7Hit",PC:"x<i>7Hit</i>"},
  16: {N:"ｵｰﾗｱﾛｰLV4",P:[12],BA:185,XB:5,C:"　　|12x5倍"},
  17: {N:"ｵｰﾗｱﾛｰLV5",P:[12],BA:185,XB:5,C:"　　|12x5倍"},
  S16: {N:"貫薙弓LV4",P:[10,25,10,5,4,2],XB:5,C:"　　|10x5倍-25-10-5-4-2"},
  S17: {N:"貫薙弓LV5",P:[10,25,10,5,4,2],XB:5,C:"　　|10x5倍-25-10-5-4-2"},
  18: {N:"昇天煌弓",P:4,BA:370,XB:10,C:"　　　|4x10倍"},
  19: {N:"昇天（溜め）",P:4,BA:370,XB:10,C:"　|4x10倍"},
};

var ZOKU_INFO = {
  "0": {Name:"無", Rate:[0,0,0,0,0,0]},
  "1": {Name:"火", Rate:[0,100,0,0,0,0]},
  "2": {Name:"水", Rate:[0,0,100,0,0,0]},
  "3": {Name:"雷", Rate:[0,0,0,100,0,0]},
  "4": {Name:"龍", Rate:[0,0,0,0,100,0]},
  "5": {Name:"氷", Rate:[0,0,0,0,0,100]},
  "6": {Name:"炎", Rate:[0,70,0,0,70,0]},
  "7": {Name:"光", Rate:[0,70,0,70,0,0]},
  "8": {Name:"雷極", Rate:[0,0,0,70,70,0]},
  "9": {Name:"天翔", Rate:[0,30,100,70,0,0]},
  "10": {Name:"熾凍", Rate:[0,80,0,0,40,80]},
  "11": {Name:"黒焔", Rate:[0,50,0,0,150,0]},
  "12": {Name:"奏", Rate:[0,0,100,0,0,100]},
  "13": {Name:"闇", Rate:[0,0,0,0,80,80]},
  "14": {Name:"紅魔", Rate:[0,150,0,0,50,0]},
  "15": {Name:"風", Rate:[0,0,0,80,0,80]},
  "16": {Name:"響", Rate:[0,0,100,0,100,0]},
  "17": {Name:"灼零", Rate:[0,125,0,0,0,125]},
  "18": {Name:"皇鳴", Rate:[0,0,0,150,50,0]},
  "99": {Name:"爆破", Rate:[0,0,0,0,0,0]}
};

var IJYOU_INFO = {
  "0": {Name: "無"},
  "1": {Name: "毒"},
  "2": {Name: "麻痺"},
  "3": {Name: "睡眠"},
  "4": {Name: "爆破"},
}

//-------------------------初期設定-------------------------
function init() {
  this.n_inputSelf = document.getElementById("n_inputSelf");
  this.n_inputList = document.getElementById("n_inputList");
  this.d_save = document.getElementById("d_save");
  this.d_load = document.getElementById("d_load");

  //モンスター
  this.c_nikuZan = document.getElementById("c_nikuZan");
  this.c_nikuDa = document.getElementById("c_nikuDa");
  this.c_nikuTama = document.getElementById("c_nikuTama");
  this.c_nikuF = document.getElementById("c_nikuF");
  this.c_nikuW = document.getElementById("c_nikuW");
  this.c_nikuT = document.getElementById("c_nikuT");
  this.c_nikuD = document.getElementById("c_nikuD");
  this.c_nikuI = document.getElementById("c_nikuI");
  this.m_classS = document.getElementById("m_classS");
  this.m_classL = document.getElementById("m_classL");
  this.m_enemy = document.getElementById("m_enemy");
  this.m_status = document.getElementById("m_status");
  this.m_angL = document.getElementById("m_angL");
  this.m_angS = document.getElementById("m_angS");
  this.m_hcL = document.getElementById("m_hcL");
  this.m_hcS = document.getElementById("m_hcS");
  this.m_defS = document.getElementById("m_defS");
  this.m_defL = document.getElementById("m_defL");
  this.m_enemy.selectedIndex = 0;
  this.enemy_gou = false;
  this.enemy_hc = false;

  //武器条件
  this.w_type = document.getElementById("w_type");
  this.s_srt = document.getElementById("s_srt");
  this.s_rare = document.getElementById("s_rare");
  this.s_slot = document.getElementById("s_slot");
  this.c_class0 = document.getElementById("c_class0");
  this.c_class1 = document.getElementById("c_class1");
  this.c_class2 = document.getElementById("c_class2");
  this.c_class3 = document.getElementById("c_class3");
  this.c_class4 = document.getElementById("c_class4");
  this.c_class5 = document.getElementById("c_class5");
  this.c_class6 = document.getElementById("c_class6");
  this.c_class7 = document.getElementById("c_class7");
  this.c_rep2 = document.getElementById("c_rep2");
  this.c_repm = document.getElementById("c_repm");
  this.c_repd = document.getElementById("c_repd");
  this.c_repi = document.getElementById("c_repi");
  this.c_repe = document.getElementById("c_repe");
  this.c_repr = document.getElementById("c_repr");
  this.c_rep3 = document.getElementById("c_rep3");
  this.c_repg = document.getElementById("c_repg");
  this.c_repk = document.getElementById("c_repk");
  this.c_repp = document.getElementById("c_repp");
  this.c_rep5 = document.getElementById("c_rep5");

  this.s_ken_G = document.getElementById("s_ken_G");
  this.s_zoku_ken = document.getElementById("s_zoku_ken");
  this.s_ijyou = document.getElementById("s_ijyou");
  this.s_ijyou = document.getElementById("s_ijyou");
  this.c_reach0 = document.getElementById("c_reach0");
  this.c_reach1 = document.getElementById("c_reach1");
  this.c_reach2 = document.getElementById("c_reach2");
  this.c_reach3 = document.getElementById("c_reach3");
  this.c_reach4 = document.getElementById("c_reach4");
  this.c_reach5 = document.getElementById("c_reach5");
  this.s_shelling = document.getElementById("s_shelling");
  this.s_music = document.getElementById("s_music");
  this.s_axeBin = document.getElementById("s_axeBin");

  this.s_yumi_G = document.getElementById("s_yumi_G");
  this.s_zoku_yumi = document.getElementById("s_zoku_yumi");
  this.s_tame = document.getElementById("s_tame");
  this.s_ya = document.getElementById("s_ya");
  this.s_kyoku = document.getElementById("s_kyoku");
  this.s_bin = document.getElementById("s_bin");

  this.s_gun_G = document.getElementById("s_gun_G");
  this.s_tama1 = document.getElementById("s_tama1");
  this.s_tama2 = document.getElementById("s_tama2");
  this.s_reload = document.getElementById("s_reload");
  this.s_kick = document.getElementById("s_kick");

  this.s_reach = document.getElementById("s_reach");
  this.s_teni = document.getElementById("s_teni");

  this.wp_hrClass = false;
  this.wp_sp = false;
  this.wp_hc = false;
  this.wp_Gosyu = false;
  this.wp_Tenran = false;
  this.wp_Resyu = false;
  this.wp_Teni = false;
  this.wp_Gclass = false;
  this.wp_sinka = false;
  this.wp_Bless = false;

  //武器選択
  this.s_wpBox = document.getElementById("s_wpBox");
  this.s_wp = document.getElementById("s_wp");
  this.c_gunLv = document.getElementById("c_gunLv");
  this.c_sinkaLv = document.getElementById("c_sinkaLv");
  this.c_GclassLv = document.getElementById("c_GclassLv");
  this.c_blessLabel = document.getElementById("c_blessLabel");
  this.c_blessing = document.getElementById("c_blessing");
  this.d_att = document.getElementById("d_att");
  this.d_zokuBox = document.getElementById("d_zokuBox");
  this.d_zoku = document.getElementById("d_zoku");
  this.d_kickBox = document.getElementById("d_kickBox");
  this.d_kick = document.getElementById("d_kick");
  this.d_reloadBox = document.getElementById("d_reloadBox");
  this.d_reload = document.getElementById("d_reload");
  this.d_slot = document.getElementById("d_slot");
  this.d_spec = document.getElementById("d_spec");
  this.d_hr = document.getElementById("d_hr");
  this.d_kaisin = document.getElementById("d_kaisin");
  this.d_def = document.getElementById("d_def");
  this.d_doc = document.getElementById("d_doc");
  this.d_class = document.getElementById("d_class");

  //武器性能
  this.d_specCng = document.getElementById("d_specCng");
  this.w_att = document.getElementById("w_att");
  this.z_typeBox = document.getElementById("z_typeBox");
  this.z_type = document.getElementById("z_type");
  this.w_zokuBox = document.getElementById("w_zokuBox");
  this.w_zoku = document.getElementById("w_zoku");
  this.i_typeBox = document.getElementById("i_typeBox");
  this.i_type = document.getElementById("i_type");
  this.w_ijyouBox = document.getElementById("w_ijyouBox");
  this.w_ijyou = document.getElementById("w_ijyou");

  //条件設定
  this.c_style = document.getElementById("c_style");
  this.c_ken_G = document.getElementById("c_ken_G");
  this.c_sharp = document.getElementById("c_sharp");
  this.c_kiri = document.getElementById("c_kiri");
  this.c_kenshou = document.getElementById("c_kenshou");
  this.c_gun_G = document.getElementById("c_gun_G");
  this.c_tama = document.getElementById("c_tama");
  this.c_barrel = document.getElementById("c_barrel");
  this.c_yumi_G = document.getElementById("c_yumi_G");
  this.c_tame = document.getElementById("c_tame");
  this.c_shoot = document.getElementById("c_shoot");
  this.c_ya = document.getElementById("c_ya");
  this.c_hrYumi = document.getElementById("c_hrYumi");

  //個別設定
  this.kobetu1 = document.getElementById("kobetu1");
  this.c_kobetu1 = document.getElementById("c_kobetu1");
  this.kobetu2 = document.getElementById("kobetu2");
  this.c_kobetu2 = document.getElementById("c_kobetu2");
  this.kobetu3 = document.getElementById("kobetu3");
  this.c_kobetu3 = document.getElementById("c_kobetu3");

  //砲撃
  this.shelling = document.getElementById("shelling");
  this.shelling1 = document.getElementById("shelling1");
  this.shellingType = document.getElementById("shellingType");
  this.shelling2 = document.getElementById("shelling2");
  this.shellingLv = document.getElementById("shellingLv");

  //アイテム、飯、旋律
  this.c_gohu = document.getElementById("c_gohu");
  this.c_tume = document.getElementById("c_tume");
  this.c_mesi = document.getElementById("c_mesi");
  this.c_fw = document.getElementById("c_fw");
  this.c_kariC = document.getElementById("c_kariC");
  this.c_trans = document.getElementById("c_trans");
  this.c_tane = document.getElementById("c_tane");
  this.c_honki = document.getElementById("c_honki");
  this.c_ItemZoku = document.getElementById("c_ItemZoku");
  this.c_hornAtUp = document.getElementById("c_hornAtUp");
  this.c_hornZokuUp = document.getElementById("c_hornZokuUp");
  this.c_hornIjyouUp = document.getElementById("c_hornIjyouUp");

  //スキル
  this.c_attUp = document.getElementById("c_attUp");
  this.c_soko = document.getElementById("c_soko");
  this.c_vampire = document.getElementById("c_vampire");
  this.c_kougeki = document.getElementById("c_kougeki");
  this.c_mousin = document.getElementById("c_mousin");
  this.c_siri = document.getElementById("c_siri");
  this.c_tonfaBuff = document.getElementById("c_tonfaBuff");
  this.c_lion = document.getElementById("c_lion");
  this.c_karyudo = document.getElementById("c_karyudo");
  this.c_hiden = document.getElementById("c_hiden");
  this.c_katsu = document.getElementById("c_katsu");
  this.c_iceField = document.getElementById("c_iceField");
  this.c_kizuna = document.getElementById("c_kizuna");
  this.c_sien = document.getElementById("c_sien");
  this.c_sendou = document.getElementById("c_sendou");
  this.c_wolf = document.getElementById("c_wolf");
  this.c_touha = document.getElementById("c_touha");
  this.c_hutai = document.getElementById("c_hutai");

  //会心
  this.c_criUp = document.getElementById("c_criUp");
  this.c_sen = document.getElementById("c_sen");
  this.c_senten = document.getElementById("c_senten");
  this.c_garou = document.getElementById("c_garou");
  this.c_maku = document.getElementById("c_maku");

  //肉質
  this.c_hit = document.getElementById("c_hit");
  this.c_adjust = document.getElementById("c_adjust");
  this.c_itten = document.getElementById("c_itten");
  this.c_tenrai = document.getElementById("c_tenrai");
  this.c_acid = document.getElementById("c_acid");
  this.c_sonicP = document.getElementById("c_sonicP");

  //武器別･共通
  this.c_houjyutu = document.getElementById("c_houjyutu");
  this.c_taijyutu = document.getElementById("c_taijyutu");
  this.c_zeigeki = document.getElementById("c_zeigeki");

  //武器別･剣士
  this.c_kenjyutu = document.getElementById("c_kenjyutu");
  this.c_tameAtUp = document.getElementById("c_tameAtUp");
  this.c_sihuku = document.getElementById("c_sihuku");
  this.c_reflect = document.getElementById("c_reflect");
  this.c_kouryuUp = document.getElementById("c_kouryuUp");

  //武器別･ガンナー
  this.c_tamaAtUp = document.getElementById("c_tamaAtUp");
  this.c_sniping = document.getElementById("c_sniping");
  this.c_kuugeki = document.getElementById("c_kuugeki");

  //属性
  this.c_zokuUpF = document.getElementById("c_zokuUpF");
  this.c_zokuUpW = document.getElementById("c_zokuUpW");
  this.c_zokuUpT = document.getElementById("c_zokuUpT");
  this.c_zokuUpD = document.getElementById("c_zokuUpD");
  this.c_zokuUpI = document.getElementById("c_zokuUpI");
  this.c_zokuUpA = document.getElementById("c_zokuUpA");
  this.c_zokuHit = document.getElementById("c_zokuHit");
  this.c_sonicZ = document.getElementById("c_sonicZ");

  //状態異常
  this.c_geki = document.getElementById("c_geki");
  this.c_hengeki = document.getElementById("c_hengeki");
  this.c_ijyouUp = document.getElementById("c_ijyouUp");
  this.c_pigIjyouUp = document.getElementById("c_pigIjyouUp");

  //狩煉道
  this.c_attUpL = document.getElementById("c_attUpL");
  this.c_singeki = document.getElementById("c_singeki");
  this.c_haisui = document.getElementById("c_haisui");
  this.c_attUpLSP = document.getElementById("c_attUpLSP");

  //極征
  this.c_kyokuAtt = document.getElementById("c_kyokuAtt");
  this.c_kyokuItemAtt = document.getElementById("c_kyokuItemAtt");

  //大討伐
  this.c_heatupG = document.getElementById("c_heatupG");

  //パートニャー
  this.c_catAtt = document.getElementById("c_catAtt");
  this.c_catKaisin = document.getElementById("c_catKaisin");
  this.c_catCheer = document.getElementById("c_catCheer");
  this.c_catKizuna = document.getElementById("c_catKizuna");
  this.c_catZokuUp = document.getElementById("c_catZokuUp");
  this.c_catActAtk = document.getElementById("c_catActAtk");

  //装備
  this.c_armor = document.getElementById("c_armor");
  this.c_armorKen = document.getElementById("c_armorKen");
  this.c_armorGun = document.getElementById("c_armorGun");

  //秘伝書
  this.c_srCri = document.getElementById("c_srCri");
  this.c_srAtt = document.getElementById("c_srAtt");
  this.c_srLmt = document.getElementById("c_attLmt");

  //シジル
  this.i_sizilatt = document.getElementById("i_sizilatt");
  this.i_sizilzoku = document.getElementById("i_sizilzoku");
  this.i_sizilkaisin = document.getElementById("i_sizilkaisin");
  this.i_sizilwpUp = document.getElementById("i_sizilwpUp");
  this.c_sizilMuUp = document.getElementById("c_sizilMuUp");
  this.c_sizilMotUp = document.getElementById("c_sizilMotUp");
  this.c_sizilMotCng = document.getElementById("c_sizilMotCng");
  this.c_sizilReachUp = document.getElementById("c_sizilReachUp");
  this.c_sizilIjyouUp = document.getElementById("c_sizilIjyouUp");
  this.i_sizilattTeni = document.getElementById("i_sizilattTeni");
  this.i_sizilzokuTeni = document.getElementById("i_sizilzokuTeni");
  this.i_sizilattRng = document.getElementById("i_sizilattRng");
  this.i_sizilattRngN = document.getElementById("i_sizilattRngN");
  this.i_sizilzokuRng = document.getElementById("i_sizilzokuRng");
  this.i_sizilzokuRngN = document.getElementById("i_sizilzokuRngN");
  this.i_sizilkaisinRng = document.getElementById("i_sizilkaisinRng");
  this.i_sizilkaisinRngN = document.getElementById("i_sizilkaisinRngN");
  this.c_sizilIjyouUpRng = document.getElementById("c_sizilIjyouUpRng");

  //表示
  this.g_att = document.getElementById("g_att");
  this.g_attB = document.getElementById("g_attB");
  this.e_att = document.getElementById("e_att");
  this.e_attB = document.getElementById("e_attB");
  this.h_zokuBox = document.getElementById("h_zokuBox");
  this.g_zokuBox = document.getElementById("g_zokuBox");
  this.g_zoku = document.getElementById("g_zoku");
  this.g_zokuF = document.getElementById("g_zokuF");
  this.g_zokuW = document.getElementById("g_zokuW");
  this.g_zokuT = document.getElementById("g_zokuT");
  this.g_zokuD = document.getElementById("g_zokuD");
  this.g_zokuI = document.getElementById("g_zokuI");
  this.h_ijyouBox = document.getElementById("h_ijyouBox");
  this.g_ijyouBox = document.getElementById("g_ijyouBox");
  this.g_ijyou = document.getElementById("g_ijyou");
  this.g_ijyouB = document.getElementById("g_ijyouB");
  this.g_kaisin = document.getElementById("g_kaisin");

  this.k_cri = document.getElementById("k_cri");
  this.k_motion = document.getElementById("k_motion");
  this.k_gou = document.getElementById("k_gou");

  this.damage = document.getElementById("damage");
  this.niku = document.getElementById("niku");

  this.w_type.selectedIndex =
  this.z_type.selectedIndex =
  this.i_type.selectedIndex = 0;

  this.s_srt_zoku = this.s_srt.options[3];
  this.s_srt_ijyou = this.s_srt.options[4];
}

function setSkill(wp_type, id, bk) {
  //不退と他スキルのオンオフ
  if (!this.c_hutai.checked) { //攻撃力プルダウンメニューの変更
    this.c_attUp.length = 12;
    this.c_attUp.options[0].text = "※攻撃力";
    this.c_attUp.options[0].value = 0;
    this.c_attUp.options[1].text = "攻撃小　|+5";
    this.c_attUp.options[1].value = 5;
    this.c_attUp.options[2].text = "攻撃中　|+10";
    this.c_attUp.options[2].value = 10;
    this.c_attUp.options[3].text = "攻撃大　|+20";
    this.c_attUp.options[3].value = 20;
    this.c_attUp.options[4].text = "攻撃特　|+30";
    this.c_attUp.options[4].value = 30;
    this.c_attUp.options[5].text = "攻撃絶　|+50";
    this.c_attUp.options[5].value = 50;
    this.c_attUp.options[6].text = "剛撃+1　|+20";
    this.c_attUp.options[6].value = 20;
    this.c_attUp.options[7].text = "剛撃+2　|+35";
    this.c_attUp.options[7].value = 35;
    this.c_attUp.options[8].text = "剛撃+3　|+50";
    this.c_attUp.options[8].value = 50;
    this.c_attUp.options[9].text = "剛撃+4　|+80";
    this.c_attUp.options[9].value = 80;
    this.c_attUp.options[10].text = "剛撃+5　|+150";
    this.c_attUp.options[10].value = 150;
    this.c_attUp.options[11].text = "剛撃+6　|+200";
    this.c_attUp.options[11].value = 200;
    if (bk !== undefined && id === "attUp") this.c_attUp.selectedIndex = bk ? bk+9 : 0;

    disabled("c_criUp", false);
    disabled("c_sen", false);
    disabled("c_hit", false);
    disabled("c_zokuHit", false);
    disabled("c_sniping", false);
  }
  else {
    this.c_attUp.length = 3;
    this.c_attUp.options[0].text = "不退　　|+100";
    this.c_attUp.options[0].value = 100;
    this.c_attUp.options[1].text = "剛撃+5　|+150";
    this.c_attUp.options[1].value = 150;
    this.c_attUp.options[2].text = "剛撃+6　|+200";
    this.c_attUp.options[2].value = 200;
    if (bk !== undefined && id === "attUp") this.c_attUp.selectedIndex = bk > 9 ? bk-9 : 0;

    disabled("c_criUp", true);
    disabled("c_sen", true);
    disabled("c_hit", true);
    disabled("c_zokuHit", true);
    disabled("c_sniping", true);
  }

  //属性強化薬と本気飲料は併用不可
  if (this.c_ItemZoku.checked) {
    this.c_honki.length = 2;
  }
  else {
    this.c_honki.length = 7;
    this.c_honki.options[2].text = "本気［火］　　|1.1倍";
    this.c_honki.options[2].value = 11;
    this.c_honki.options[3].text = "本気［水］　　|1.1倍";
    this.c_honki.options[3].value = 11;
    this.c_honki.options[4].text = "本気［雷］　　|1.1倍";
    this.c_honki.options[4].value = 11;
    this.c_honki.options[5].text = "本気［龍］　　|1.1倍";
    this.c_honki.options[5].value = 11;
    this.c_honki.options[6].text = "本気［氷］　　|1.1倍";
    this.c_honki.options[6].value = 11;
  }

  //攻撃旋律セット
  this.c_hornAtUp.length = 5;
  this.c_hornAtUp.options[1].text = "攻小(G)　　|1.10倍";
  this.c_hornAtUp.options[1].value = 110;
  this.c_hornAtUp.options[2].text = "攻追小(G)　|1.15倍";
  this.c_hornAtUp.options[2].value = 115;
  this.c_hornAtUp.options[3].text = "攻大(G)　　|1.15倍";
  this.c_hornAtUp.options[3].value = 115;
  this.c_hornAtUp.options[4].text = "攻追大(G)　|1.20倍";
  this.c_hornAtUp.options[4].value = 120;
  if (mos_class < 2) {
    this.c_hornAtUp.options[1].text = "攻小(HR)　　|1.15倍";
    this.c_hornAtUp.options[1].value = 115;
    this.c_hornAtUp.options[2].text = "攻追小(HR)　|1.20倍";
    this.c_hornAtUp.options[2].value = 120;
    this.c_hornAtUp.options[3].text = "攻大(HR)　　|1.20倍";
    this.c_hornAtUp.options[3].value = 120;
    this.c_hornAtUp.options[4].text = "攻追大(HR)　|1.30倍";
    this.c_hornAtUp.options[4].value = 130;
  }

  //秘伝スキルセット
  this.c_hiden.length = 5;
  this.c_hiden.options[1].text = "未熟　　|0.8倍";
  this.c_hiden.options[1].value = 8;
  this.c_hiden.options[2].text = "皆伝　　|1.1倍";
  this.c_hiden.options[2].value = 11;

  switch (wp_type) {
    case 12:
    case 13:
    case 14:
      this.c_hiden.options[3].text = WEAPON_INFO[wp_type].Hiden + "　|1.3倍";
      this.c_hiden.options[3].value = 13;
      this.c_hiden.options[4].text = "大" + WEAPON_INFO[wp_type].Hiden + "　|1.4倍";
      this.c_hiden.options[4].value = 14;
      break;
    case 1:
      this.c_hiden.options[3].text = WEAPON_INFO[wp_type].Hiden + "　|1.3倍";
      this.c_hiden.options[3].value = 13;
      this.c_hiden.options[4].text = "大" + WEAPON_INFO[wp_type].Hiden + "　|1.3倍";
      this.c_hiden.options[4].value = 13;
      break;
    default:
      this.c_hiden.options[3].text = WEAPON_INFO[wp_type].Hiden + "　　|1.2倍";
      this.c_hiden.options[3].value = 12;
      this.c_hiden.options[4].text = "大" + WEAPON_INFO[wp_type].Hiden + "　|1.2倍";
      this.c_hiden.options[4].value = 12;
      break;
  }

  //火事場+2の個別設定
  if (wp_type === 12 || wp_type === 13) {
    this.c_soko.options[3].text = "火事場+2　　|1.3倍";
    this.c_soko.options[3].value = 130;
  }
  else {
    this.c_soko.options[3].text = "火事場+2　　|1.5倍";
    this.c_soko.options[3].value = 150;
  }

  //雌伏の個別設定
  switch (wp_type) { //雌伏の個別設定
    case 1:
    case 7:
    case 8:
    case 9:
      disabled("c_sihuku", false);
      this.c_sihuku.length = 2;
      this.c_sihuku.options[1].text = "MAX　|+300";
      this.c_sihuku.options[1].value = 300;
      break;
    case 3:
    case 10:
    case 11:
      disabled("c_sihuku", false);
      this.c_sihuku.length = 2;
      this.c_sihuku.options[1].text = "MAX　|+225";
      this.c_sihuku.options[1].value = 225;
      break;
    case 4:
      disabled("c_sihuku", false);
      this.c_sihuku.length = 2;
      this.c_sihuku.options[1].text = "MAX　|+150";
      this.c_sihuku.options[1].value = 150;
      break;
    default:
      disabled("c_sihuku", true);
      this.c_sihuku.length = 1;
      break;
  }

  //属撃の個別設定
  switch (wp_type) {
    case 9:
    case 13:
    case 14:
      this.c_zokuHit.options[1].text = "属性特効　|+5";
      this.c_zokuHit.options[1].value = 5;
      break;
    case 2:
    case 8:
    case 12:
      this.c_zokuHit.options[1].text = "属性特効　|+10";
      this.c_zokuHit.options[1].value = 10;
      break;
    default:
      this.c_zokuHit.options[1].text = "属性特効　|+15";
      this.c_zokuHit.options[1].value = 15;
      break;
  }

  //反射の個別設定
  switch (wp_type) { //反射の個別設定
    case 1:
    case 3:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      disabled("c_reflect", false);
      break;
    case 4:
      if (+getVal("c_style") === 3)
        disabled("c_reflect", false);
      else {
        this.c_reflect.selectedIndex = 0;
        disabled("c_reflect", true);
      }
      break;
    default:
      this.c_reflect.selectedIndex = 0;
      disabled("c_reflect", true);
      break;
  }

  if (wp_type === 7 && this.c_fw.checked) {
    this.c_reflect.length = 4;
    this.c_reflect.options[0].text = "反射+3";
    this.c_reflect.options[0].value = 48;
    this.c_reflect.options[1].text = "反射+3強化";
    this.c_reflect.options[1].value = 68;
    this.c_reflect.options[2].text = "刹那大";
    this.c_reflect.options[2].value = 72;
    this.c_reflect.options[3].text = "刹那大強化";
    this.c_reflect.options[3].value = 92;
    if (bk !== undefined && id === "reflect") this.c_reflect.selectedIndex = bk > 2 ? bk-3 : 0;
  }
  else {
    this.c_reflect.length = 7;
    this.c_reflect.options[0].text = "※反射＆刹那";
    this.c_reflect.options[0].value = 0;
    this.c_reflect.options[1].text = "反射+1";
    this.c_reflect.options[1].value = 24;
    this.c_reflect.options[2].text = "反射+2";
    this.c_reflect.options[2].value = 36;
    this.c_reflect.options[3].text = "反射+3";
    this.c_reflect.options[3].value = 48;
    this.c_reflect.options[4].text = "反射+3強化";
    this.c_reflect.options[4].value = 68;
    this.c_reflect.options[5].text = "刹那大";
    this.c_reflect.options[5].value = 72;
    this.c_reflect.options[6].text = "刹那大強化";
    this.c_reflect.options[6].value = 92;
    if (wp_type === 7 && bk !== undefined && id === "reflect") this.c_reflect.selectedIndex = bk > 0 ? bk+3 : 0;
  }
}
//-------------------------武器個別データ記入-------------------------
function setWpSpec(wp_type, SLv) {
  if (this.s_wp.value)
    var eq = eq_data[WEAPON_INFO[wp_type].Id][this.s_wp.value];

  switch (wp_type) {
    case 8:
      if (!this.s_wp.value || this.d_specCng.style.backgroundColor) {
        this.shellingType.length = 3;
        this.shellingType.options[0].text = "通常型";
        this.shellingType.options[0].value = 0;
        this.shellingType.options[1].text = "拡散型";
        this.shellingType.options[1].value = 1;
        this.shellingType.options[2].text = "放射型";
        this.shellingType.options[2].value = 2;

        this.shellingLv.length = 9;
        this.shellingLv.options[0].text = "LV1";
        this.shellingLv.options[0].value = 1;
        this.shellingLv.options[1].text = "LV2";
        this.shellingLv.options[1].value = 2;
        this.shellingLv.options[2].text = "LV3";
        this.shellingLv.options[2].value = 3;
        this.shellingLv.options[3].text = "LV4";
        this.shellingLv.options[3].value = 4;
        this.shellingLv.options[4].text = "LV5";
        this.shellingLv.options[4].value = 5;
        this.shellingLv.options[5].text = "LV6";
        this.shellingLv.options[5].value = 6;
        this.shellingLv.options[6].text = "LV7";
        this.shellingLv.options[6].value = 7;
        this.shellingLv.options[7].text = "LV8";
        this.shellingLv.options[7].value = 8;
        this.shellingLv.options[8].text = "LV9";
        this.shellingLv.options[8].value = 9;
      }
      else {
        this.shellingType.length = 1;
        this.shellingType.options[0].text = eq[I_aREACH].substr(0,3);
        this.shellingType.options[0].value = +SHELLINGNAME[eq[I_aREACH].substr(0,3)];

        this.shellingLv.length = 1;
        this.shellingLv.options[0].text = "LV" + (SLv ? SLv : eq[I_aREACH].substr(-1));
        this.shellingLv.options[0].value = (SLv ? SLv : +eq[I_aREACH].substr(-1));
        cngKobetu(wp_type);
      }
      break;
    case 10:
      if (!this.s_wp.value || this.d_specCng.style.backgroundColor) {
        this.c_kobetu2.length = 4;
        this.c_kobetu2.options[0].text = "スタンビン";
        this.c_kobetu2.options[0].value = "";
        this.c_kobetu2.options[1].text = "強撃ビン";
        this.c_kobetu2.options[1].value = "KG";
        this.c_kobetu2.options[2].text = "強属性ビン";
        this.c_kobetu2.options[2].value = "KZ";
        this.c_kobetu2.options[3].text = "強異常ビン";
        this.c_kobetu2.options[3].value = "KI";
      }
      else {
        var eq_axebin = eq[I_aREACH];
        this.c_kobetu2.length = 1;
        this.c_kobetu2.options[0].text = eq_axebin;
        this.c_kobetu2.options[0].value = AXEBINNAME[eq_axebin];
      }
      break;
    case 12:
    case 13:
      var df = document.createDocumentFragment(), o = document.createElement("option");
      if (!this.s_wp.value || this.d_specCng.style.backgroundColor) {
        for (var i = 0; i < 28; i++) { //弾名記入
          if (WEAPON_INFO[wp_type].Bullet[i]) {
            o.setAttribute("value", i);
            df.appendChild(o.cloneNode(false));
            df.lastChild.appendChild(document.createTextNode(WEAPON_INFO[wp_type].Bullet[i].N))
          }
        }
      }
      else {
        for (var i = 0; i < 28; i++) { //弾名記入
          if (WEAPON_INFO[wp_type].Bullet[i] && +eq[I_aGUN + i] !== 0) {
            o.setAttribute("value", i);
            df.appendChild(o.cloneNode(false));
            if (+eq[I_aGUN + i] < 0)
              df.lastChild.style.backgroundColor = "lightpink";
            df.lastChild.appendChild(document.createTextNode(WEAPON_INFO[wp_type].Bullet[i].N))
          }
        }
      }
      this.c_tama.length = 0, this.c_tama.appendChild(df);
      cngGunMotion(+this.w_type.value);
      break;
    case 14:
      var tameIdx = this.c_tame.selectedIndex;
      if (this.c_tame.options[tameIdx].text.substr(0,2) === "タメ") {
        if (!this.s_wp.value || this.d_specCng.style.backgroundColor) {
          this.c_shoot.length = 12;
          for (var i = 0, j = 0; i < 12; i++, j++) { //弾名記入
            this.c_shoot.options[j].text = WEAPON_INFO[wp_type].Bullet[i].N + WEAPON_INFO[wp_type].Bullet[i].C;
            this.c_shoot.options[j].value = i;
          }
        }
        else {
          var eq_ya = eq[I_aYA].split(":"), eq_yn = YANAME[eq_ya[tameIdx-2]];
          this.c_shoot.length = 1;
          this.c_shoot.options[0].text = WEAPON_INFO[wp_type].Bullet[eq_yn].N + WEAPON_INFO[wp_type].Bullet[eq_yn].C;
          this.c_shoot.options[0].value = eq_yn;
        }
      }
      else if (this.c_tame.options[tameIdx].text === "曲射") {
        if (!this.s_wp.value || this.d_specCng.style.backgroundColor) {
          this.c_shoot.length = 4;
          for (var i = 12, j = 0; i < 16; i++, j++) { //曲射弾名記入
            this.c_shoot.options[j].text = WEAPON_INFO[wp_type].Bullet[i].N + WEAPON_INFO[wp_type].Bullet[i].C;
            this.c_shoot.options[j].value = i;
          }
        }
        else {
          var eq_yn = +eq[I_aKYOKUSYA] + 12;
          this.c_shoot.length = 1;
          this.c_shoot.options[0].text = WEAPON_INFO[wp_type].Bullet[eq_yn].N + WEAPON_INFO[wp_type].Bullet[eq_yn].C;
          this.c_shoot.options[0].value = eq_yn;
        }
      }
      else if (this.c_tame.options[tameIdx].text === "近接") {
        this.c_shoot.length = 1;
        this.c_shoot.options[0].text = "-----";
        this.c_shoot.options[0].value = "";
      }
      else {
        this.c_shoot.length = 0;
        if (+this.c_style.value < 2) {
          this.c_shoot.length = 1;
          this.c_shoot.options[0].text = "-----";
          this.c_shoot.options[0].value = "";
        }
        else {
          if (this.c_kobetu2.selectedIndex) {
            for (var i = 16; i < 18; i++) {
              let eleOp = document.createElement("option");
              eleOp.text = WEAPON_INFO[wp_type].Bullet[i].N + WEAPON_INFO[wp_type].Bullet[i].C;
              eleOp.value = i;
              this.c_shoot.appendChild(eleOp);
            }
            cngGunMotion(+this.w_type.value);
          }
          if (+this.c_style.value === 3) {
            for (var i = 18; i < 20; i++) {
              let eleOp = document.createElement("option");
              eleOp.text = WEAPON_INFO[wp_type].Bullet[i].N + WEAPON_INFO[wp_type].Bullet[i].C;
              eleOp.value = i;
              this.c_shoot.appendChild(eleOp);
            }
          }
        }
      }
      //ビン個別設定
      if (!this.s_wp.value || this.d_specCng.style.backgroundColor) {
        this.c_kobetu1.length = 5;
        this.c_kobetu1.options[1].text = "強撃ビン";
        this.c_kobetu1.options[1].value = "KG";
        this.c_kobetu1.options[2].text = "異常ビン";
        this.c_kobetu1.options[2].value = "IJ";
        this.c_kobetu1.options[3].text = "爆撃ビン";
        this.c_kobetu1.options[3].value = "BA";
        this.c_kobetu1.options[4].text = "打撃ビン";
        this.c_kobetu1.options[4].value = "DA";
      }
      else {
        var eq_bin = eq[I_aBIN].split(":");
        var df = document.createDocumentFragment(), o = document.createElement("option");
        for (var i = 0; i < eq_bin.length; i++) {
          switch (eq_bin[i].substr(0,1)) {
            case "強":
              o.setAttribute("value", "KG");
              df.appendChild(o.cloneNode(false));
              df.lastChild.appendChild(document.createTextNode("強撃ビン"));
              break;
            case "毒":
            case "麻":
            case "睡":
              if (i > 0 && (eq_bin[i-1].substr(0,1) === "毒" || eq_bin[i-1].substr(0,1) === "麻" || eq_bin[i-1].substr(0,1) === "睡")) break;
              o.setAttribute("value", "IJ");
              df.appendChild(o.cloneNode(false));
              df.lastChild.appendChild(document.createTextNode("異常ビン"));
              break;
            case "爆":
              o.setAttribute("value", "BA");
              df.appendChild(o.cloneNode(false));
              df.lastChild.appendChild(document.createTextNode("爆撃ビン"));
              break;
            case "打":
              o.setAttribute("value", "DA");
              df.appendChild(o.cloneNode(false));
              df.lastChild.appendChild(document.createTextNode("打撃ビン"));
              break;
          }
        }
        this.c_kobetu1.length = 1, this.c_kobetu1.appendChild(df);
      }
      break;
  }
}
//-------------------------攻撃力計算-------------------------
function calcAtk(wp_type) {
  //表示会心
  kaisin_rslt = 0;
  var w_kaisin = +this.w_kaisin.value;
  var senCri = 0;
  var criUp = 0;
  var sharpCri = 0;
  var senten = this.c_senten.selectedIndex ? 30 : 0;
  var garouCri = this.c_garou.selectedIndex ? 50 : 0;
  var makuCri = 0;
  var srCri = +this.c_srCri.value;
  var sizilkaisin = +this.i_sizilkaisin.value + +this.i_sizilwpUp.value;
  var sizilkaisinRng = 0;
  var kaisinItem = this.c_honki.selectedIndex === 1 ? +this.c_honki.value : 0;
  var lionKaisin = [0,10,25,40][this.c_lion.selectedIndex];

  //範囲辿異シジル
  if (+this.i_sizilkaisinRng.value && +this.i_sizilkaisinRngN.value) {
    if (+this.i_sizilkaisinRngN.value > +this.i_sizilkaisinRng.value)
      this.i_sizilkaisinRng.value = this.i_sizilkaisinRngN.value
    sizilkaisinRng = +this.i_sizilkaisinRng.value * 2 + +this.i_sizilkaisinRngN.value * 20;
  }

  if (!this.c_hutai.checked) { //見切、一点と不退
    criUp = +this.c_criUp.value;
    switch (+this.c_sen.value) {
      case 1:
      senCri = 5;
      break;
      case 2:
      senCri = 10;
      break;
      case 3:
      senCri = 20;
      break;
    }
  }
  else
    criUp = 100;

  switch (+this.c_maku.value) { //幕無会心
    case 1:
      makuCri = 35;
      break;
    case 2:
      makuCri = 50;
      break;
    case 3:
      makuCri = 60;
      break;
    default:
      makuCri = 0;
      break;
  }

  var haisuiAtt = 0, haisuiCri = 0;
  switch (+this.c_haisui.value) { //背水の心得
    case 1:
      haisuiAtt = 80;
      haisuiCri = 30;
      break;
    case 2:
      haisuiAtt = 120;
      haisuiCri = 50;
      break;
    default:
      haisuiAtt = 0;
      haisuiCri = 0;
      break;
  }

  //会心の調べ
  var catKaisin = +this.c_catKaisin.value;

  kaisin_rslt = w_kaisin
              + kaisinItem //本気飲料
              + criUp //見切
              + senCri //一閃
              + senten //閃転
              + garouCri //餓狼
              + makuCri //幕無
              + srCri //秘伝書会心
              + sizilkaisin + sizilkaisinRng //シジル
              + haisuiCri //背水の心得
              + catKaisin //会心の調べ
              + lionKaisin; //会心の調べ

  if (kaisin_rslt > 0 && wp_type < 12) { //切れ味の会心補正
    switch (+this.c_sharp.value) {
      case 4:
        sharpCri = 5;
        break;
      case 5:
      case 6:
      case 7:
        sharpCri = 10;
        break;
      default:
        sharpCri = 0;
        break;
    }
    kaisin_rslt += sharpCri;
  }

  //HC武器補正
  var wphcCri = 0;
  if (wp_type > 11 && (this.enemy_hc && this.wp_hc)) wphcCri = 40;
  kaisin_rslt += wphcCri;

  //SP武器補正
  var wpspCri = 0;
  if (((this.n_inputList.checked && this.m_classL.selectedIndex) || (this.n_inputSelf.checked && this.m_classS.selectedIndex)) && this.wp_sp) wpspCri = 20;
  kaisin_rslt += wpspCri;

  var taiken_fw = (wp_type === 3 && this.c_fw.checked) ? 1 : 0; //大剣フィーチャー
  if (taiken_fw)
    kaisin_rslt += 100;

  if (!(this.c_senten.selectedIndex || taiken_fw) && kaisin_rslt > 100) //閃転無しの場合会心100以上にならない
    kaisin_rslt = 100;

  if (kaisin_rslt < -100)
    kaisin_rslt = -100;

  //ヒートブレード発動時会心100%未満だったら100%に固定(ランクアップ後黄ゲージなら効果無し)
  if (wp_type === 8 && this.c_kobetu3.selectedIndex && +this.c_sharp.value > 2 && kaisin_rslt < 100) {
    kaisin_rslt = 100;
  }
  setIHtml("g_kaisin", kaisin_rslt + "%"); //会心表示

  //表示異常値
  var ijyou_type = +this.i_type.value;
  var w_ijyouB = floor(+this.w_ijyou.value / 10);
  var n_ijyou = 0;
  eq_ijyou = kenshou_ijyou = 0;
  display("w_ijyouBox", ijyou_type, "");
  calcIjyou();
  eq_ijyou = n_ijyou;

  //表示攻撃力
  g_attB_rslt = 0;
  e_attB_rslt = 0;
  var gohu = this.c_gohu.checked ? 6 : 0;
  var tume = this.c_tume.checked ? 9 : 0;
  var mesi = +this.c_mesi.value;
  var tane = +this.c_tane.value;
  var attUp = +this.c_attUp.value;
  var vampire = +this.c_vampire.value;
  var soko = +this.c_soko.value;
  var sien = this.c_sien.checked ? 20 : 0;
  var karyudo_b = +this.c_karyudo.value;
  var touha = this.c_touha.checked ? 12 : 10;
  var armor = this.c_armor.checked ? 30 : 0;
  var srAtt = +this.c_srAtt.value;
  var kyokuAtt = +this.c_kyokuAtt.value;
  var sizilatt = +this.i_sizilatt.value + +this.i_sizilwpUp.value;
  var sizilattTeni = +this.i_sizilattTeni.value ? +this.i_sizilattTeni.value * 20 + 30 : 0;
  var sizilattRng = 0;
  var hiden = +this.c_hiden.value;
  var sihuku = +this.c_sihuku.value;
  var kougeki = +this.c_kougeki.value;
  var mousin = +this.c_mousin.value;
  var siri = +this.c_siri.value;
  var tonfaBuff = +this.c_tonfaBuff.value;
  var lionAtk = [0,70,100,180][this.c_lion.selectedIndex];
  var sendou = this.c_sendou.checked ? 40 : 0;
  var wolf = this.c_wolf.checked ? 100 : 0;
  var katsu = +this.c_katsu.value;
  var kizuna = this.c_kizuna.checked ? 5 : 0;
  var hornAtUp = +this.c_hornAtUp.value;
  var ReachUp = this.c_sizilReachUp.checked ? -25 : 0;
  var heatupG = +this.c_heatupG.value;
  var lanceStock = (wp_type === 7 && +this.c_style.value === 3) ? +this.c_kobetu1.value : 0;

  var attUpL = +this.c_attUpL.value;
  var attUpLSP = +this.c_attUpLSP.value;
  var singeki = +this.c_singeki.value;

  var w_att = +this.w_att.value; //武器攻撃力
  var attB = ceil(w_att * 10 / WEAPON_INFO[wp_type].Ratio) + ReachUp;  //武器攻撃倍率

  //範囲辿異シジル
  if (+this.i_sizilattRng.value && +this.i_sizilattRngN.value) {
    if (+this.i_sizilattRngN.value > +this.i_sizilattRng.value)
      this.i_sizilattRng.value = this.i_sizilattRngN.value
    sizilattRng = +this.i_sizilattRng.value * 5 + +this.i_sizilattRngN.value * 25;
  }

  if (this.c_kyokuItemAtt.checked) { //極征攻撃薬は種丸薬と同じ分類
    this.c_tane.selectedIndex = 0;
    disabled("c_tane", true);
    tane = 100;
  }
  else
    disabled("c_tane", false);

  var karyudoAtt = floor(attB * karyudo_b / 1000);
  if (this.c_karyudo.selectedIndex === 4) { //ガンナー以外暴れ撃ち無効
    switch (wp_type) {
      case 12:
      case 13:
      case 14:
        break;
      default:
        karyudoAtt = 0;
        break;
    }
  }

  var kekkiUp = 0;
  if (this.c_soko.selectedIndex === 2) { //血気強化
    switch (wp_type) {
      case 12:
      case 13:
      case 14:
        kekkiUp = 50;
        break;
      default:
        kekkiUp = 100;
        break;
    }
  }

  var zeigeki = 0;
  switch (wp_type) { //消費特効
    case 12:
    case 13:
    case 14:
      zeigeki = 0;
      break;
    default:
      zeigeki = this.c_zeigeki.checked ? 100 : 0;
      break;
  }

  var senAtt = senAtt_fw = senUpAtt = 0;
  if (kaisin_rslt > 100) { //閃転の攻撃力上昇
    senAtt = floor(floor(Math.sqrt(kaisin_rslt - 100) * 100) * 7 / 100);
    senAtt_fw = senAtt;
    if (taiken_fw && kaisin_rslt > 200) {
      senAtt = floor(floor(Math.sqrt(kaisin_rslt - 200) * 100) * 7 / 100);
    }
  }

  if (w_kaisin > 0) { //閃転強化の攻撃力上昇
    switch (+this.c_senten.value) {
      case 2:
        senUpAtt = floor(floor(Math.sqrt(w_kaisin) * 100) * 5 / 100);
        break;
      case 3:
        senUpAtt = floor(floor(Math.sqrt(w_kaisin) * 100) * 10 / 100);
        break;
      default:
        senUpAtt = 0;
        break;
    }
  }

  var gekiAtt = 0;
  if (eq_ijyou && this.c_geki.selectedIndex) {
    gekiAtt = floor(eq_ijyou * 658 / 1000); //劇物の攻撃力上昇
    if (gekiAtt < 1) gekiAtt = 1;
  }

  //鬼人笛の術（パートニャー）
  var catAtt = 0;
  if (this.c_catActAtk.checked) {
    catAtt = [10,20,40][this.c_catAtt.selectedIndex];
  }
  else {
    catAtt = [0,10,20][this.c_catAtt.selectedIndex];
  }
  catAtt += (this.c_catActAtk.checked || this.c_catAtt.selectedIndex) ? +this.c_catCheer.value : 0;

  //絆術（パートニャー）
  var catKizuna = +this.c_catKizuna.value;

  //武器個別補正
  var hosei_At = 100
  switch (wp_type) {
    case 2:　//刃打
      hosei_At = +this.c_kobetu2.value;
      break;
    case 4:　//気刃状態
      if (this.c_kobetu2.selectedIndex) {
        hosei_At = 123.75;
        if (this.c_fw.checked)
          tane = tane > 40 ? tane : 40;
        else
          tane = tane > 10 ? tane : 10;
      }
      break;
    case 5:　//瞬撃
      hosei_At = +this.c_kobetu1.value;
      break;
    case 9:　//コンボゲージ
      hosei_At = +this.c_kobetu2.value;
      break;
    case 10:  //斬将追加補正
      hosei_At = +this.c_kobetu3.value;
      break;
    case 11:  //磁星追加補正
      hosei_At = +this.c_kobetu3.value;
      break;
  }

  var sisyuAtk = 0;
  if (wp_type > 11) {
    if (this.c_armorGun.selectedIndex > 1)
      sisyuAtk = [0,20,40,60,80,110][this.c_armorGun.selectedIndex-1];
  }
  else
    sisyuAtk = [0,20,40,60,80,110][this.c_armorKen.selectedIndex];

  sisyuAtk = (this.wp_Gosyu && this.enemy_gou) ? sisyuAtk : 0;

  //SP武器補正
  var wpspAtk = 0;
  if (((this.n_inputList.checked && this.m_classL.selectedIndex) || (this.n_inputSelf.checked && this.m_classS.selectedIndex)) && this.wp_sp) wpspAtk = 10;

  //攻撃力計算
  switch (wp_type) {
    case 3: //大剣
      g_attB_noHosei = //フィーチャー無しの攻撃力
        floor(
          floor(
            floor(
              (
                floor(
                  (attB //基本武器倍率
                    + (gohu + tume + mesi + tane) //護符爪、食事、種薬
                    + karyudoAtt //狩人珠
                    + attUp //攻撃、剛撃
                    + siri //尻上がり
                    + tonfaBuff //龍気放出
                    + zeigeki //消費特効
                    + wolf //一匹狼
                    + gekiAtt //劇物
                    + catAtt //猫鬼人笛術
                    + sizilatt //シジル
                    + (srAtt + kyokuAtt) //秘伝書
                    + (attUpL + attUpLSP + singeki + haisuiAtt) //道スキル
                    + heatupG //ヒートアップゲージ
                    + wpspAtk //SP武器補正
                  )
                  * hornAtUp / 100) //笛攻撃旋律
                + (senAtt + senUpAtt) //閃転、閃転強化
                + vampire //吸血
                + kougeki //巧撃
                + mousin //猛進
                + kekkiUp //血気強化
                + sihuku //雌伏
                + sendou //煽動
                + lionAtk //獅子奮迅
                + catKizuna //猫絆術
                + sizilattTeni + sizilattRng //辿異シジル
              )
              * touha / 10) //闘覇
            * soko / 100) //火事場
          * hiden / 10) //秘伝技
        + (sien + armor + katsu + kizuna + sisyuAtk); //乗算無効要素

      g_attB_rslt = //フィーチャー時の攻撃力
        floor(
          floor(
            floor(
              (
                floor(
                  (attB //基本武器倍率
                    + (gohu + tume + mesi + tane) //護符爪、食事、種薬
                    + karyudoAtt //狩人珠
                    + attUp //攻撃、剛撃
                    + siri //尻上がり
                    + tonfaBuff //龍気放出
                    + zeigeki //消費特効
                    + wolf //一匹狼
                    + gekiAtt //劇物
                    + catAtt //猫鬼人笛術
                    + sizilatt //シジル
                    + (srAtt + kyokuAtt) //秘伝書
                    + (attUpL + attUpLSP + singeki + haisuiAtt) //道スキル
                    + heatupG //ヒートアップゲージ
                    + wpspAtk //SP武器補正
                  )
                  * hornAtUp / 100) //笛攻撃旋律
                + (senAtt_fw + senUpAtt) //閃転、閃転強化
                + vampire //吸血
                + kougeki //巧撃
                + mousin //猛進
                + kekkiUp //血気強化
                + sihuku //雌伏
                + sendou //煽動
                + lionAtk //獅子奮迅
                + catKizuna //猫絆術
                + sizilattTeni + sizilattRng //辿異シジル
              )
              * touha / 10) //闘覇
            * soko / 100) //火事場
          * hiden / 10) //秘伝技
        + (sien + armor + katsu + kizuna + sisyuAtk); //乗算無効要素

      break;
    case 5: //ハンマー
      g_attB_noHosei = //ハンマー瞬撃無しの攻撃力
        floor(
          floor(
            floor(
              (
                floor(
                  (attB //基本武器倍率
                    + (gohu + tume + mesi + tane) //護符爪、食事、種薬
                    + karyudoAtt //狩人珠
                    + attUp //攻撃、剛撃
                    + siri //尻上がり
                    + tonfaBuff //龍気放出
                    + zeigeki //消費特効
                    + wolf //一匹狼
                    + gekiAtt //劇物
                    + catAtt //猫鬼人笛術
                    + sizilatt //シジル
                    + (srAtt + kyokuAtt) //秘伝書
                    + (attUpL + attUpLSP + singeki + haisuiAtt) //道スキル
                    + heatupG //ヒートアップゲージ
                    + wpspAtk //SP武器補正
                  )
                  * hornAtUp / 100) //笛攻撃旋律
                + (senAtt + senUpAtt) //閃転、閃転強化
                + vampire //吸血
                + kougeki //巧撃
                + mousin //猛進
                + kekkiUp //血気強化
                + sihuku //雌伏
                + sendou //煽動
                + lionAtk //獅子奮迅
                + catKizuna //猫絆術
                + sizilattTeni + sizilattRng //辿異シジル
              )
              * touha / 10) //闘覇
            * soko / 100) //火事場
          * hiden / 10) //秘伝技
        + (sien + armor + katsu + kizuna + sisyuAtk); //乗算無効要素

      g_attB_rslt =
        floor(
          floor(
            floor(
              floor(
                (
                  floor(
                    (attB //基本武器倍率
                      + (gohu + tume + mesi + tane) //護符爪、食事、種薬
                      + karyudoAtt //狩人珠
                      + attUp //攻撃、剛撃
                      + siri //尻上がり
                      + tonfaBuff //龍気放出
                      + zeigeki //消費特効
                      + wolf //一匹狼
                      + gekiAtt //劇物
                      + catAtt //猫鬼人笛術
                      + sizilatt //シジル
                      + (srAtt + kyokuAtt) //秘伝書
                      + (attUpL + attUpLSP + singeki + haisuiAtt) //道スキル
                      + heatupG //ヒートアップゲージ
                      + wpspAtk //SP武器補正
                    )
                    * hornAtUp / 100) //笛攻撃旋律
                  + (senAtt + senUpAtt) //閃転、閃転強化
                  + vampire //吸血
                  + kougeki //巧撃
                  + mousin //猛進
                  + kekkiUp //血気強化
                  + sihuku //雌伏
                  + sendou //煽動
                  + lionAtk //獅子奮迅
                  + catKizuna //猫絆術
                  + sizilattTeni + sizilattRng //辿異シジル
                )
                * touha / 10) //闘覇
              * soko / 100) //火事場
            * hiden / 10) //秘伝技
          * hosei_At / 100) //瞬撃補正
        + (sien + armor + katsu + kizuna + sisyuAtk); //乗算無効要素

      break;
    case 11: //マグネットスパイク
      g_attB_rslt =
        floor(
          floor(
            floor(
              floor(
                (
                  floor(
                    (attB //基本武器倍率
                      + (gohu + tume + mesi + tane) //護符爪、食事、種薬
                      + karyudoAtt //狩人珠
                      + attUp //攻撃、剛撃
                      + siri //尻上がり
                      + tonfaBuff //龍気放出
                      + zeigeki //消費特効
                      + wolf //一匹狼
                      + gekiAtt //劇物
                      + catAtt //猫鬼人笛術
                      + sizilatt //シジル
                      + (srAtt + kyokuAtt) //秘伝書
                      + (attUpL + attUpLSP + singeki + haisuiAtt) //道スキル
                      + heatupG //ヒートアップゲージ
                      + wpspAtk //SP武器補正
                      + lanceStock //ガードストック（ランス）
                    )
                    * hornAtUp / 100) //笛攻撃旋律
                  + (senAtt + senUpAtt) //閃転、閃転強化
                  + vampire //吸血
                  + kougeki //巧撃
                  + mousin //猛進
                  + kekkiUp //血気強化
                  + sihuku //雌伏
                  + sendou //煽動
                  + lionAtk //獅子奮迅
                  + catKizuna //猫絆術
                  + sizilattTeni + sizilattRng //辿異シジル
                )
                * touha / 10) //闘覇
              * soko / 100) //火事場
            * hosei_At / 100) //磁星補正
          * hiden / 10) //秘伝技
        + (sien + armor + katsu + kizuna + sisyuAtk); //乗算無効要素

      g_attB_noHosei = g_attB_rslt;
      break;
    default:
      g_attB_rslt =
        floor(
          floor(
            floor(
              floor(
                (
                  floor(
                    (attB //基本武器倍率
                      + (gohu + tume + mesi + tane) //護符爪、食事、種薬
                      + karyudoAtt //狩人珠
                      + attUp //攻撃、剛撃
                      + siri //尻上がり
                      + tonfaBuff //龍気放出
                      + zeigeki //消費特効
                      + wolf //一匹狼
                      + gekiAtt //劇物
                      + catAtt //猫鬼人笛術
                      + sizilatt //シジル
                      + (srAtt + kyokuAtt) //秘伝書
                      + (attUpL + attUpLSP + singeki + haisuiAtt) //道スキル
                      + heatupG //ヒートアップゲージ
                      + wpspAtk //SP武器補正
                      + lanceStock //ガードストック（ランス）
                    )
                    * hornAtUp / 100) //笛攻撃旋律
                  + (senAtt + senUpAtt) //閃転、閃転強化
                  + vampire //吸血
                  + kougeki //巧撃
                  + mousin //猛進
                  + kekkiUp //血気強化
                  + sihuku //雌伏
                  + sendou //煽動
                  + lionAtk //獅子奮迅
                  + catKizuna //猫絆術
                  + sizilattTeni + sizilattRng //辿異シジル
                )
                * touha / 10) //闘覇
              * soko / 100) //火事場
            * hiden / 10) //秘伝技
          * (hosei_At * 100) / 100 / 100) //刃打、気刃、斬将補正
        + (sien + armor + katsu + kizuna + sisyuAtk); //乗算無効要素

      g_attB_noHosei = g_attB_rslt;
      break;
  }

  e_attB_rslt = attB + sizilatt + srAtt + armor + sisyuAtk + wpspAtk;

  //攻撃上限設定&表示
  var att_lmt = +this.c_attLmt.value;
  if (g_attB_rslt >= att_lmt)
    g_attB_rslt = att_lmt;
  if (g_attB_noHosei >= att_lmt)
    g_attB_noHosei = att_lmt;
  if (e_attB_rslt >= att_lmt)
    e_attB_rslt = att_lmt;

  this.g_attB.style.color = g_attB_rslt >= att_lmt ? "red" : "black";
  this.e_attB.style.color = e_attB_rslt >= att_lmt ? "red" : "black";

  var g_att_rslt = floor(g_attB_rslt * WEAPON_INFO[wp_type].Ratio / 10);
  var e_att_rslt = floor(e_attB_rslt * WEAPON_INFO[wp_type].Ratio / 10);

  display("g_att", wp_type, "inline");
  display("g_attB", wp_type, "inline");
  display("e_att", wp_type, "inline");
  display("e_attB", wp_type, "inline");
  setIHtml("g_att", g_att_rslt);
  setIHtml("g_attB", "（" + g_attB_rslt + "）");
  setIHtml("e_att", e_att_rslt);
  setIHtml("e_attB", "（" + e_attB_rslt + "）");

  //武器属性
  var zoku_type = this.z_type.value;
  var w_zokuB = floor(+this.w_zoku.value / 10);
  eq_zoku = kenshou_zoku = [];
  display("w_zokuBox", zoku_type, "");
  calcZoku();
  eq_zoku = n_zoku.slice();

  if (this.c_kenshou.value.charAt(0) === "Z") { //属性剣晶装填
    zoku_type = +this.c_kenshou.value.charAt(1);
    w_zokuB = WEAPON_INFO[wp_type].ZokuKen[this.c_kenshou.value.charAt(2)];
    calcZoku();
    kenshou_zoku = n_zoku.slice();
  }
  else if (this.c_kenshou.value.charAt(0) === "I") { //異常剣晶装填
    ijyou_type = +this.c_kenshou.value.charAt(1);
    w_ijyouB = WEAPON_INFO[wp_type].IjyouKen[ijyou_type-1][+this.c_kenshou.value.charAt(2)];
    calcIjyou();
    kenshou_ijyou = n_ijyou;
  }
  else if (this.c_kenshou.value.charAt(0) === "B") { //爆撃剣晶装填
    zoku_type = 0;
    calcZoku();
  }

  function calcIjyou() {
    if (!ijyou_type) {
      display("g_ijyou", ijyou_type, "block");
      display("g_ijyouB", ijyou_type, "block");
      return;
    }
    var ijyou_name = IJYOU_INFO[ijyou_type].Name;

    var ijyouUp = this.c_ijyouUp.checked ? 1125 : 1000;
    var pigIjyouUp = this.c_pigIjyouUp.checked ? 1125 : 1000;
    var sizilIjyouUp = this.c_sizilIjyouUp.checked ? 11 : 10;
    var sizilIjyouUpRng = this.c_sizilIjyouUpRng.checked ? 15 : 10;
    var hornIjyouUp = this.c_hornIjyouUp.checked ? 1125 : 1000;
    var sisyuIjyou = wp_type > 11 ? 100 + +getVal("c_armorGun") : 100 + +getVal("c_armorKen");
    var lionIjyou = [100,105,110,120][this.c_lion.selectedIndex];
    sisyuIjyou = (this.wp_Gosyu && this.enemy_gou) ? sisyuIjyou : 100;

    var geki = (+this.w_ijyou.value && !eq_ijyou) ? +this.c_geki.value : 100; //異常剣晶計算時は劇物補正無し

    n_ijyou = floor(
                (
                  (
                    (
                      (
                        (
                          (w_ijyouB * ijyouUp / 1000)
                          * pigIjyouUp / 1000)
                          * sizilIjyouUp / 10)
                          * sizilIjyouUpRng / 10)
                          * sisyuIjyou / 100)
                          * lionIjyou / 100)
                          * hornIjyouUp / 1000);

    var g_ijyou = n_ijyou * 10; //表示異常値

    n_ijyou = floor(n_ijyou * geki / 100);
    if (+this.w_ijyou.value && n_ijyou < 1) {
      n_ijyou = 1; //最低保障異常蓄積値
    }

    display("g_ijyou", ijyou_type, "block");
    setIHtml("g_ijyou", ijyou_name + "：" + g_ijyou);
    display("g_ijyouB", ijyou_type, "block");
    setIHtml("g_ijyouB", "（" + ijyou_name + "：" + n_ijyou + "）");
  }

  function calcZoku() {
    var zoku_name = ZOKU_INFO[zoku_type].Name;
    var sizilzoku = +this.i_sizilzoku.value + +this.i_sizilwpUp.value;
    var sizilzokuTeni = +this.i_sizilzokuTeni.value ? +this.i_sizilzokuTeni.value + 13 : 10;
    var sizilzokuRng = 0;

    //範囲辿異シジル
    if (+this.i_sizilzokuRng.value && +this.i_sizilzokuRngN.value) {
      if (+this.i_sizilzokuRngN.value > +this.i_sizilzokuRng.value)
        this.i_sizilzokuRng.value = this.i_sizilzokuRngN.value
      sizilzokuRng = +this.i_sizilzokuRng.value ? +this.i_sizilzokuRng.value * 5 + +this.i_sizilzokuRngN.value * 5 : 0;
    }

    sisyuZoku = wp_type > 11 ? 100 + +getVal("c_armorGun") : 100 + +getVal("c_armorKen");
    sisyuZoku = (this.wp_Gosyu && this.enemy_gou) ? sisyuZoku : 100;
    lionZoku = [100,105,110,120][this.c_lion.selectedIndex];

    zokuUpA = +this.c_zokuUpA.value;

    zokuUp = [0,
                  +this.c_zokuUpF.value,
                  +this.c_zokuUpW.value,
                  +this.c_zokuUpT.value,
                  +this.c_zokuUpD.value,
                  +this.c_zokuUpI.value
                ];

    zokuItem = [0,10,10,10,10,10];
    if (this.c_ItemZoku.checked)
      zokuItem = [0,11,11,11,11,11];
    else {
      var honki = this.c_honki.selectedIndex;
      if (honki > 1)
        zokuItem[honki-1] = 11;
    };

    n_zoku = [0,0,0,0,0,0];
    zokuB = (w_zokuB //武器属性
            + sizilzoku //シジル
            + sizilzokuRng //範囲属性シジル
            );

    for (var i = 1; i < 6; i++) {
      n_zoku[i] = floor(
                    floor(
                      floor(
                        floor(
                          floor(
                            floor(
                              floor(
                                (
                                  w_zokuB + sizilzoku + sizilzokuRng
                                )
                                * ZOKU_INFO[zoku_type].Rate[i] / 100)
                                * lionZoku / 100)
                                * zokuUp[i] / 10)
                                * zokuUpA / 10)
                                * zokuItem[i] / 10)
                                * sizilzokuTeni / 10)
                                * sisyuZoku / 100);
    }

    g_zoku = 0;
    if (+zoku_type < 6) //単属性表示
      g_zoku = n_zoku[+zoku_type] * 10;
    else  //複属性表示
      g_zoku = floor(
                floor(
                  floor(
                    floor(
                      floor(
                        (
                          w_zokuB + sizilzoku + sizilzokuRng
                        )
                        * lionZoku / 100)
                        * zokuUpA / 10)
                        * (this.c_ItemZoku.checked ? 11 : 10) / 10)
                        * sizilzokuTeni / 10)
                        * sisyuZoku / 100) * 10;

    display("g_zoku", zoku_type, "block");
    setIHtml("g_zoku", zoku_name + "：" + g_zoku);

    var g_zokuX = ["", "g_zokuF", "g_zokuW", "g_zokuT", "g_zokuD", "g_zokuI"];

    for (var i = 1; i < 6; i++) {
      display(g_zokuX[i], ZOKU_INFO[zoku_type].Rate[i], "block");
      setIHtml(g_zokuX[i], "（" + ZOKU_INFO[i].Name + "：" + n_zoku[i] + "）");
    }
  }
}

function setWeapon(wp_type) {
  WP_Info = WEAPON_INFO[wp_type];

  //表示項目のオンオフ
  switch (wp_type) {
    case 0: //未選択
      setInit();
      this.z_type.selectedIndex =
      this.i_type.selectedIndex =
      this.c_kenshou.selectedIndex = 0;
      this.w_zoku.value =
      this.w_ijyou.value = 0;
      initKobetu ();

      display("s_ken_G", 0, "");
      display("s_gun_G", 0, "");
      display("s_yumi_G", 0, "");
      display("s_reach", 0, "");
      display("s_teni", 0, "");

      display("d_zokuBox", 1, "");
      display("d_zoku", 1, "");
      display("d_kickBox", 0, "");
      display("d_kick", 0, "");
      display("d_reloadBox", 0, "");
      display("d_reload", 0, "");

      display("c_ken_G", 0, "");
      display("c_gun_G", 0, "");
      display("c_yumi_G", 0, "");
      display("c_armorKen", 0, "");
      display("c_armorGun", 0, "");
      break;

    case 12: //ライトボウガン
    case 13: //ヘビィボウガン
      setInit();
      this.z_type.selectedIndex =
      this.i_type.selectedIndex =
      this.c_kenshou.selectedIndex = 0;
      this.w_zoku.value =
      this.w_ijyou.value = 0;
      this.s_srt.length = 3;
      initKobetu ();

      display("s_ken_G", 0, "");
      display("s_yumi_G", 0, "");
      display("s_gun_G", 1, "");
      display("s_reach", 0, "");
      display("s_teni", 1, "");

      display("d_zokuBox", 0, "");
      display("d_zoku", 0, "");
      display("d_kickBox", 1, "");
      display("d_kick", 1, "");
      display("d_reloadBox", 1, "");
      display("d_reload", 1, "");

      display("c_ken_G", 0, "");
      display("c_yumi_G", 0, "");
      display("c_gun_G", 1, "inline");
      display("z_typeBox", 0, "");
      display("i_typeBox", 0, "");
      display("w_zokuBox", 0, "");
      display("w_ijyouBox", 0, "");
      display("c_armorKen", 0, "");
      display("c_armorGun", 1, "");

      setWpSpec(wp_type);

      this.c_kenjyutu.selectedIndex =
      this.c_geki.selectedIndex =
      this.c_armorKen.selectedIndex = 0;

      this.c_zeigeki.checked =
      this.c_kouryuUp.checked =
      this.c_hengeki.checked = false;

      disabled("c_tamaAtUp", false);
      disabled("c_sniping", this.c_hutai.checked);
      disabled("c_kuugeki", false);
      break;

    case 14: //弓
      setInit();
      this.i_type.selectedIndex =
      this.c_kenshou.selectedIndex = 0;
      this.w_ijyou.value = 0;
      this.s_srt.length = 4;
      this.s_srt.options[3] = this.s_srt_zoku;
      initKobetu ();

      display("s_ken_G", 0, "");
      display("s_gun_G", 0, "");
      display("s_yumi_G", 1, "");
      display("s_reach", 0, "");
      display("s_teni", 1, "");

      display("d_zokuBox", 1, "");
      display("d_zoku", 1, "");
      display("d_kickBox", 0, "");
      display("d_kick", 0, "");
      display("d_reloadBox", 0, "");
      display("d_reload", 0, "");

      display("c_ken_G", 0, "");
      display("c_gun_G", 0, "");
      display("c_yumi_G", 1, "inline");
      display("i_typeBox", 0, "");
      display("w_ijyouBox", 0, "");
      display("c_armorKen", 0, "");
      display("c_armorGun", 1, "");
      disabled("c_geki", false);

      this.c_tame.length = 6;
      this.c_tame.options[0].text = "近接";
      this.c_tame.options[1].text = "曲射";
      this.c_tame.options[2].text = "タメ１";
      this.c_tame.options[3].text = "タメ２";
      this.c_tame.options[4].text = "タメ３";
      this.c_tame.options[5].text = "タメ４";
      this.c_tame.selectedIndex = 4;

      this.c_shoot.length = 0;
      setWpSpec(wp_type);

      this.c_kenjyutu.selectedIndex =
      this.c_armorKen.selectedIndex = 0;

      this.c_kouryuUp.checked =
      this.c_hengeki.checked = false;


      disabled("c_zeigeki", false);
      disabled("c_tamaAtUp", false);
      disabled("c_sniping", this.c_hutai.checked);
      disabled("c_kuugeki", false);
      break;

    default:  //剣士用
      setInit();
      this.s_srt.length = 4;
      this.s_srt.options[3] = this.s_srt_zoku;
      this.s_srt.options[4] = this.s_srt_ijyou;
      initKobetu ();

      display("s_ken_G", 1, "");
      display("s_gun_G", 0, "");
      display("s_yumi_G", 0, "");

      display("d_zokuBox", 1, "");
      display("d_zoku", 1, "");
      display("d_kickBox", 0, "");
      display("d_kick", 0, "");
      display("d_reloadBox", 0, "");
      display("d_reload", 0, "");

      display("s_shelling", 0, "");
      display("s_music", 0, "");
      display("s_axeBin", 0, "");
      display("s_reach", 0, "");
      display("s_teni", 1, "");

      display("c_gun_G", 0, "");
      display("c_yumi_G", 0, "");
      display("c_ken_G", 1, "inline");
      display("c_armorKen", 1, "");
      display("c_armorGun", 0, "");

      disabled("c_zeigeki", false);
      disabled("c_kenjyutu", false);
      disabled("c_kouryuUp", false);
      disabled("c_geki", false);
      disabled("c_hengeki", false);

      setWpSpec(wp_type);

      this.c_tamaAtUp.checked =
      this.c_sniping.checked =
      this.c_kuugeki.checked = false;

      this.c_armorGun.selectedIndex = 0;
      break;
  }

  //武器毎の表記セット
  switch (wp_type) {
    case 0: //未選択
      break;
    case 1: //片手剣
      display("s_reach", 1, "");

      disabled("c_sizilMuUp", false);
      disabled("c_sizilMotUp", false);
      disabled("c_sizilMotCng", false);
      disabled("c_sizilReachUp", false);

      break;

    case 2: //双剣
      display("s_reach", 1, "");

      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "鬼人：";
      this.c_kobetu1.length = 3;
      this.c_kobetu1.options[1].text = "鬼人化";
      this.c_kobetu1.options[2].text = "真鬼人解放";

      display("c_kobetu2", 1, "inline");
      this.kobetu2.firstChild.nodeValue = "刃打ち：";
      this.c_kobetu2.length = 5;
      this.c_kobetu2.options[0].value = 100;
      this.c_kobetu2.options[1].text = "１回";
      this.c_kobetu2.options[1].value = 105;
      this.c_kobetu2.options[2].text = "２回";
      this.c_kobetu2.options[2].value = 110;
      this.c_kobetu2.options[3].text = "３回";
      this.c_kobetu2.options[3].value = 115;
      this.c_kobetu2.options[4].text = "４回";
      this.c_kobetu2.options[4].value = 120;

      display("c_kobetu3", 1, "inline");
      this.kobetu3.firstChild.nodeValue = "ゲージ：";
      this.c_kobetu3.length = 1;

      disabled("c_sizilMotUp", false);
      disabled("c_sizilReachUp", false);
      break;

    case 3: //大剣
      display("s_reach", 1, "");

      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "刃部：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[1].text = "中腹";

      disabled("c_tameAtUp", false);

      disabled("c_sizilMotUp", false);
      disabled("c_sizilReachUp", false);
      break;

    case 4: //太刀
      display("s_reach", 1, "");

      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "刃部：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[1].text = "中腹";

      display("c_kobetu2", 1, "inline");
      this.kobetu2.firstChild.nodeValue = "気刃：";
      this.c_kobetu2.length = 2;
      this.c_kobetu2.options[1].text = "発動";

      disabled("c_tameAtUp", false);

      disabled("c_sizilMotUp", false);
      disabled("c_sizilReachUp", false);
      break;

    case 5: //ハンマー
      display("s_reach", 1, "");

      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "瞬撃：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[0].value = 100;
      this.c_kobetu1.options[1].text = "発動";
      this.c_kobetu1.options[1].value = 130;

      disabled("c_tameAtUp", false);

      disabled("c_sizilMotUp", false);
      disabled("c_sizilReachUp", false);
      break;

    case 6: //狩猟笛
      display("s_music", 1, "");

      disabled("c_sizilMotUp", false);
      break;


    case 7: //ランス
      display("s_reach", 1, "");

      disabled("c_tameAtUp", false);

      disabled("c_sizilMotUp", false);
      disabled("c_sizilMotCng", false);
      disabled("c_sizilReachUp", false);
      break;

    case 8: //ガンランス
      display("s_shelling", 1, "");
      display("shelling", 1, "inline");
      this.shelling1.firstChild.nodeValue = "砲撃ﾀｲﾌﾟ：";
      this.shelling2.firstChild.nodeValue = "砲撃ﾚﾍﾞﾙ：";

      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "Ｑリロ：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[0].value = 10;
      this.c_kobetu1.options[1].text = "あり";
      this.c_kobetu1.options[1].value = 15;

      this.c_kobetu3.length = 2;
      this.c_kobetu3.options[1].text = "発動";
      this.c_kobetu3.selectedIndex = 1;

      disabled("c_houjyutu", false);

      disabled("c_sizilMotUp", false);
      break;

    case 9: //穿龍棍
      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "リーチ：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[0].text = "長";
      this.c_kobetu1.options[1].text = "短";

      disabled("c_houjyutu", false);
      disabled("c_tameAtUp", false);
      disabled("c_taijyutu", false);
      break;

    case 10: //スラッシュアックスF
      display("s_axeBin", 1, "");

      display("c_kobetu2", 1, "inline");
      this.kobetu2.firstChild.nodeValue = "ビン：";

      display("c_kobetu3", 1, "inline");
      this.kobetu3.firstChild.nodeValue = "斬将追加効果：";
      this.c_kobetu3.length = 2;
      this.c_kobetu3.options[0].value = 100;
      this.c_kobetu3.options[1].text = "有り";
      this.c_kobetu3.options[1].value = 105;

      disabled("c_tameAtUp", false);
      break;

    case 11: //マグネットスパイク
      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "モード：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[0].text = "斬";
      this.c_kobetu1.options[1].text = "打";

      display("c_kobetu2", 1, "inline");
      this.kobetu2.firstChild.nodeValue = "磁纏強化：";
      this.c_kobetu2.length = 2;
      this.c_kobetu2.options[1].text = "有り";

      display("c_kobetu3", 1, "inline");
      this.kobetu3.firstChild.nodeValue = "磁星追加効果：";
      this.c_kobetu3.length = 2;
      this.c_kobetu3.options[0].value = 100;
      this.c_kobetu3.options[1].text = "有り";
      this.c_kobetu3.options[1].value = 103;

      disabled("c_tameAtUp", false);
      break;

    case 12: //ライトボウガン
      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "Ｊショット：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[0].value = 100;
      this.c_kobetu1.options[1].text = "Ｊショット";
      this.c_kobetu1.options[1].value = 130;

      disabled("c_houjyutu", false);

      disabled("c_sizilMotCng", false);
      break;

    case 13: //ヘビィボウガン
      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "圧縮リロ：";
      this.c_kobetu1.length = 2;
      this.c_kobetu1.options[1].text = "圧縮";

      display("c_kobetu2", 1, "inline");
      this.kobetu2.firstChild.nodeValue = "装填数：";
      this.c_kobetu2.length = 1;

      disabled("c_houjyutu", false);

      disabled("c_sizilMotCng", false);
      break;

    case 14: //弓
      display("c_kobetu1", 1, "inline");
      this.kobetu1.firstChild.nodeValue = "ビン：";

      this.c_kobetu2.length = 2;
      this.c_kobetu2.options[1].text = "しゃがみ";

      disabled("c_sizilMuUp", false);
      disabled("c_sizilMotUp", false);
      disabled("c_sizilMotCng", false);
      break;
  }
}

function cngKobetu(wp_type) {
  switch (wp_type) {
    case 2: //双剣
      switch (+this.c_style.value) { //極鬼人の選択条件
        case 3:
          this.c_kobetu1.length = 4;
          this.c_kobetu1.options[3].text = "極鬼人解放";
          break;
        default:
          this.c_kobetu1.length = 3;
          break;
      }

      switch (this.c_kobetu1.selectedIndex) { //真・極鬼人以外ゲージ選択不可
        case 0:
        case 1:
          this.c_kobetu3.length = 1;
          break;
        default:
          this.c_kobetu3.length = 2;
          this.c_kobetu3.options[1].text = "MAX";
          break;
      }
      break;

    case 5:
      if (+this.c_hiden.value < 12) { //秘伝じゃないと瞬撃オフ
        this.c_kobetu1.selectedIndex = 0;
        disabled("c_kobetu1", true);
      }
      else
        disabled("c_kobetu1", false);
      break;

    case 7: //ランス
      if (+this.c_style.value === 3) {
        display("c_kobetu1", 1, "inline");
        this.kobetu1.firstChild.nodeValue = "ｶﾞｰﾄﾞｽﾄｯｸ：";
        this.c_kobetu1.length = 2;
        this.c_kobetu1.options[1].text = "LV3（赤）";
        this.c_kobetu1.options[1].value = 50;
      }
      break;

    case 8: //ガンランス
      var shellingType = +getVal("shellingType");

      switch (+this.c_style.value) {　//ヒートブレード表示条件
        case 1:
        case 2:
        case 3:
          display("c_kobetu3", 1, "inline");
          this.kobetu3.firstChild.nodeValue = "ＨＢ：";
          break;

        default:
          display("c_kobetu3", 0, "");
          this.kobetu3.firstChild.nodeValue = "";
          this.c_kobetu3.selectedIndex = 0;
          break;
      }

      //ヒートブレード時赤ゲージ選択不可
      if (this.c_kobetu3.selectedIndex) {
        this.c_sharp.length = 7
      }
      else {
        this.c_sharp.length = 8
        this.c_sharp.options[7].text = "赤：0.6倍";
        this.c_sharp.options[7].value = 0;
      }

      switch (+this.c_style.value) {　//爆竜追加装填条件&内容
        case 0:
        case 3:
          display("c_kobetu2", 1, "inline");
          this.kobetu2.firstChild.nodeValue = "爆竜追加：";
          this.c_kobetu2.length = 8;
          this.c_kobetu2.options[0].text = "1発";
          this.c_kobetu2.options[1].text = "2発";
          this.c_kobetu2.options[2].text = "3発";
          this.c_kobetu2.options[3].text = "4発";
          this.c_kobetu2.options[4].text = "5発";
          this.c_kobetu2.options[5].text = "6発";
          this.c_kobetu2.options[6].text = "7発";
          this.c_kobetu2.options[7].text = "8発";

          switch (shellingType) {
            case 0: //通常型
              this.c_kobetu2.length = 8;
              this.c_kobetu2.options[0].value = 315;
              this.c_kobetu2.options[1].value = 340;
              this.c_kobetu2.options[2].value = 365;
              this.c_kobetu2.options[3].value = 390;
              this.c_kobetu2.options[4].value = 415;
              this.c_kobetu2.options[5].value = 430;
              this.c_kobetu2.options[6].value = 445;
              this.c_kobetu2.options[7].value = 470;
              if (+this.c_hiden.value < 12) { //秘伝じゃないと装填数減
                this.c_kobetu2.length = 6;
              }
              break;
            case 1: //拡散型
              this.c_kobetu2.length = 4;
              this.c_kobetu2.options[0].value = 315;
              this.c_kobetu2.options[1].value = 415;
              this.c_kobetu2.options[2].value = 440;
              this.c_kobetu2.options[3].value = 470;
              if (+this.c_hiden.value < 12) { //秘伝じゃないと装填数減
                this.c_kobetu2.length = 3;
              }
              break;

            case 2: //放射型
              this.c_kobetu2.length = 5;
              this.c_kobetu2.options[0].value = 320;
              this.c_kobetu2.options[1].value = 370;
              this.c_kobetu2.options[2].value = 425;
              this.c_kobetu2.options[3].value = 450;
              this.c_kobetu2.options[4].value = 480;
              if (+this.c_hiden.value < 12) { //秘伝じゃないと装填数減
                this.c_kobetu2.length = 4;
              }
              break;
          }
          break;
        default:
          display("c_kobetu2", 0, "");
          this.kobetu2.firstChild.nodeValue = "";
          break;
      }
      break;

    case 9: //穿龍棍
      switch (+this.c_style.value) { //Cゲージ
        case 0:
        case 3:
          display("c_kobetu2", 1, "inline");

          this.kobetu2.firstChild.nodeValue = "Ｃゲージ：";
          this.c_kobetu2.length = 7;
          this.c_kobetu2.options[0].value = 100;

          this.c_kobetu2.options[1].text = "１";
          this.c_kobetu2.options[1].value = 110;
          this.c_kobetu2.options[2].text = "２";
          this.c_kobetu2.options[2].value = 120;
          this.c_kobetu2.options[3].text = "３";
          this.c_kobetu2.options[3].value = 130;
          this.c_kobetu2.options[4].text = "４";
          this.c_kobetu2.options[4].value = 140;
          this.c_kobetu2.options[5].text = "５";
          this.c_kobetu2.options[5].value = 150;
          this.c_kobetu2.options[6].text = "６";
          this.c_kobetu2.options[6].value = 160;

          if (+this.c_hiden.value < 12) //非秘伝コンボゲージ
            this.c_kobetu2.length = 6;
          break;

        default:
          display("c_kobetu2", 0, "");
          this.kobetu2.firstChild.nodeValue = "";
          break;
      }

      switch (+this.c_style.value) {　//EX回避補正
        case 1:
        case 3:
          display("c_kobetu3", 1, "inline");

          this.kobetu3.firstChild.nodeValue = "ＥＸ回避：";
          this.c_kobetu3.length = 2;
          this.c_kobetu3.options[0].value = 100;
          this.c_kobetu3.options[1].text = "発動";
          this.c_kobetu3.options[1].value = 105;
          break;

        default:
          display("c_kobetu3", 0, "");
          this.kobetu3.firstChild.nodeValue = "";
          break;
      }

      break;

    case 10: //スラッシュアックスF
      switch (+this.c_style.value) {
        case 0:
          display("c_kobetu1", 1, "inline");
          this.kobetu1.firstChild.nodeValue = "モード：";
          this.c_kobetu1.length = 2;
          this.c_kobetu1.options[0].text = "斧";
          this.c_kobetu1.options[1].text = "剣";
          break;

        case 2:
        case 3:
          display("c_kobetu1", 1, "inline");
          this.kobetu1.firstChild.nodeValue = "モード：";
          this.c_kobetu1.length = 2;
          this.c_kobetu1.options[0].text = "斧";
          this.c_kobetu1.options[1].text = "光剣";
          break

        default:
          display("c_kobetu1", 0, "");
          this.kobetu1.firstChild.nodeValue = "";
          break
        }

      if (+this.c_hiden.value < 12) { //秘伝じゃないと追加効果オフ
        this.c_kobetu3.selectedIndex = 0;
        disabled("c_kobetu3", true);
      }
      else
        disabled("c_kobetu3", false);
      break;

    case 12: //ライトボウガン
    case 13: //ヘビィボウガン
      if (wp_type === 12) {
        if (+this.c_hiden.value > 11) { //秘伝じゃないとPJS使用不可
          this.c_kobetu1.length = 3;
          this.c_kobetu1.options[2].text = "Ｐショット";
          this.c_kobetu1.options[2].value = 140;
        }
        else {
          this.c_kobetu1.length = 2;
        }

        switch (+this.c_style.value) {
          case 2: //嵐ノ型
            display("c_kobetu2", 1, "inline");
            this.kobetu2.firstChild.nodeValue = "ステップ：";
            this.c_kobetu2.length = 2;
            this.c_kobetu2.options[1].text = "有り";

            if (this.c_kobetu2.selectedIndex) { //ステップ撃ちとJSは併用不可
              this.c_kobetu1.selectedIndex = 0;
            }
            disabled("c_kobetu1", this.c_kobetu2.selectedIndex);
            break;
          case 3: //極ノ型
            display("c_kobetu2", 1, "inline");
            this.kobetu2.firstChild.nodeValue = "派生ショット：";
            this.c_kobetu2.length = 3;
            this.c_kobetu2.options[0].value = 10;
            this.c_kobetu2.options[1].text = "回避撃ち";
            this.c_kobetu2.options[1].value = 6;
            this.c_kobetu2.options[2].text = "ﾌｨﾆｯｼｭ撃ち";
            this.c_kobetu2.options[2].value = 20;

            if (!this.c_kobetu1.selectedIndex) {  //派生ショットはJSかPJS限定
              this.c_kobetu2.selectedIndex = 0;
            }
            disabled("c_kobetu2", !this.c_kobetu1.selectedIndex);
            break;
        }
      }
      else {
        if (+this.c_hiden.value > 11) { //秘伝じゃないとP圧縮使用不可
          this.c_kobetu1.length = 3;
          this.c_kobetu1.options[2].text = "Ｐ圧縮";
        }
        else {
          this.c_kobetu1.length = 2;
        }

        switch (+this.c_style.value) {
          case 2: //嵐ノ型
          case 3: //極ノ型
            display("c_kobetu3", 1, "inline");
            this.kobetu3.firstChild.nodeValue = "溜め撃ち：";
            this.c_kobetu3.length = 5;
            this.c_kobetu3.options[0].text = "溜め０";
            this.c_kobetu3.options[0].value = (+this.c_style.value === 2) ? 95 : 100;
            this.c_kobetu3.options[1].text = "溜め１";
            this.c_kobetu3.options[1].value = 115;
            this.c_kobetu3.options[2].text = "溜め２";
            this.c_kobetu3.options[2].value = 130;
            this.c_kobetu3.options[3].text = "溜め３";
            this.c_kobetu3.options[3].value = 150;
            this.c_kobetu3.options[4].text = "超過";
            this.c_kobetu3.options[4].value = 130;
            break;
        }
      }
      break;

    case 14: //弓
      switch (+this.c_style.value) {
        case 2: //嵐ノ型
        case 3: //極ノ型
          display("c_kobetu2", 1, "inline");
          this.kobetu2.firstChild.nodeValue = "追加行動：";

          if (+this.c_style.value === 3 && (this.c_tame.selectedIndex > 2 && this.c_tame.selectedIndex < 6)) {
            this.c_kobetu2.length = 3;
            this.c_kobetu2.options[2].text = "タメ連射";
          }
          else
            this.c_kobetu2.length = 2;

          if (+this.c_style.value === 3 || (+this.c_style.value === 2 && this.c_kobetu2.selectedIndex)) {
            this.c_tame.length = 7;
            this.c_tame.options[6].text = "特殊";
          }
          else
            this.c_tame.length = 6;

          break;
      }
      setWpSpec(wp_type);
      break;
  }
}

function cngGunMotion(wp_type) {
  switch (wp_type) {
    case 12:
    case 13:
      for (var i = 6; i < 9; i++) { //散弾、打撃弾の切り替え
        if (this.c_sizilMotCng.checked) {
          this.c_tama.options[i].text = WEAPON_INFO[wp_type].Bullet["S" + i].N;
          this.c_tama.options[i].value = "S" + i;
        }
        else {
          this.c_tama.options[i].text = WEAPON_INFO[wp_type].Bullet[i].N;
          this.c_tama.options[i].value = i;
        }
      }
      break;
    case 14:
      var tameIdx = this.c_tame.selectedIndex;
      if (this.c_tame.options[tameIdx].text === "特殊" && this.c_kobetu2.selectedIndex) {
        for (var i = 16, j = 0; i < 18; i++, j++) { //オーラ、貫薙弓の切り替え
          if (this.c_sizilMotCng.checked) {
            this.c_shoot.options[j].text = WEAPON_INFO[wp_type].Bullet["S" + i].N + WEAPON_INFO[wp_type].Bullet["S" + i].C;
            this.c_shoot.options[j].value = "S" + i;
          }
          else {
            this.c_shoot.options[j].text = WEAPON_INFO[wp_type].Bullet[i].N + WEAPON_INFO[wp_type].Bullet[i].C;
            this.c_shoot.options[j].value = i;
          }
        }
      }
      break;
  }
}

function setMotion(wp_type){
  var motion_Pow = this.c_sizilMotUp.checked;
  var motion_Cng = this.c_sizilMotCng.checked;
  var style = +this.c_style.value;
  var kenjyutu = this.c_kenjyutu.selectedIndex;
  var reach = (wp_type === 9 ? this.c_kobetu1.selectedIndex : 0);
  var saxef_mode = (wp_type === 10 ? this.c_kobetu1.selectedIndex : 0);
  var magspk_mode = (wp_type === 11 ? this.c_kobetu1.selectedIndex : 0);

  WP_Motion.length = 0;

  var wp_motion_set = function(motion){
    if(!motion) return
    var tameAtUp = this.c_tameAtUp.selectedIndex;
    for (var i = 0, j = WP_Motion.length-1, MLen = motion.length; i < MLen; i++) {
      if(+motion[i].flg.S.charAt(style) === 1 && +motion[i].flg.P.charAt(motion_Pow) && +motion[i].flg.C.charAt(motion_Cng) &&
      (wp_type != 9 || +motion[i].flg.R.charAt(reach)) && (wp_type != 10 || +motion[i].flg.M.charAt(saxef_mode)) && (wp_type != 11 || +motion[i].flg.M.charAt(magspk_mode))){
        WP_Motion[++j] = {};
        for (var e in motion[i]) {
          switch (e) {
            case "P":
              WP_Motion[j].P = motion[i].P instanceof Array ? motion[i].P[tameAtUp] : motion[i].P;
              switch (wp_type) {
                case 7: //ランス
                  if (+this.c_hiden.value >= 12 && motion[i].R7) { //天槍のモーション値強化
                    WP_Motion[j].P += 10;
                  }
                  break;
                case 9:　//穿龍棍
                  if (motion[i].R9H) WP_Motion[j].P = motion[i].R9H[this.c_houjyutu.selectedIndex];
                  if (motion[i].R9K) WP_Motion[j].P = motion[i].R9K[this.c_taijyutu.selectedIndex];
                  //天嵐モーション値1.25倍
                  if (style !== 0 && style !== 3 && motion[i].R9)
                    WP_Motion[j].P = floor(WP_Motion[j].P * 125 / 100);
                  break;
                case 11:　//マグネットスパイク
                  //フィーチャー時磁縛モーション値1.25倍
                  if (this.c_fw.checked && motion[i].R11F) WP_Motion[j].P = floor(WP_Motion[j].P * 125 / 100);
                  break;
              }
              if (kenjyutu && motion[i].KH) { //特殊剣術モーション
                WP_Motion[j].KP = floor(WP_Motion[j].P * 120 / 100);
              }
              break;

            case "ZH": //属性補正
              WP_Motion[j].ZH = motion[i].ZH instanceof Array ? motion[i].ZH[tameAtUp] : motion[i].ZH;
              if (kenjyutu && motion[i].KH) { //特殊剣術モーション
                WP_Motion[j].ZH = floor(WP_Motion[j].ZH * 120 / 100);
              }
              break;

            case "IH":　//異常補正
              WP_Motion[j].IH = motion[i].IH;
              if (kenjyutu && motion[i].KH) { //特殊剣術モーション
                WP_Motion[j].IH = floor(WP_Motion[j].IH * 120 / 100);
              }
              break;

            default:
              WP_Motion[j][e] = motion[i][e];
              break;
          }
        }
      if (motion_Pow && !+motion[i].flg.P.charAt(0))　//モーション強化シジル
        WP_Motion[j].N += "<small>強</small>";

      if (kenjyutu && !motion[i].NK && !motion[i].KH) {　//剣術
        if (WP_Motion[j].P === undefined) continue;
        WP_Motion[++j] = {};
        WP_Motion[j] = JSON.parse(JSON.stringify(WP_Motion[j-1]));

        WP_Motion[j].P = floor(WP_Motion[j].P * 20 / 100);
        WP_Motion[j].ZH = (WP_Motion[j].ZH !== undefined) ? floor(WP_Motion[j].ZH * 20 / 100) : 20;
        WP_Motion[j].IH = (WP_Motion[j].IH !== undefined) ? floor(WP_Motion[j].IH * 20 / 100) : 20;

        WP_Motion[j].C = "<small>剣</small>";
      }

      }
    }
  }

  switch (wp_type) {
    case 0:
      resetData("damage");
      break;

    case 1: //片手剣
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 2: //双剣
      resetData("damage");
      var kijin_mode = this.c_kobetu1.selectedIndex;
      var gauge = this.c_kobetu3.selectedIndex;
      switch (kijin_mode) {
        case 0:　//通常
          wp_motion_set(WEAPON_INFO[wp_type].Motion_Normal);
          break;
        case 1:　//鬼人化
          wp_motion_set(WEAPON_INFO[wp_type].Motion_Kijin);
          break;
        case 2:　//真鬼人解放
          gauge ? wp_motion_set(WEAPON_INFO[wp_type].Motion_SinKijin_Max) : wp_motion_set(WEAPON_INFO[wp_type].Motion_SinKijin);
          break;
        case 3:
          gauge ? wp_motion_set(WEAPON_INFO[wp_type].Motion_GokuKijin_Max) : wp_motion_set(WEAPON_INFO[wp_type].Motion_GokuKijin);
          break;
      }
      if (mos_class > 1 && +this.c_style.value) {
        for (var i = 0; i < WP_Motion.length; i++) {
          if (WP_Motion[i].R2) //G級乱舞改属性0.7倍
            WP_Motion[i].ZH = 70;
        }
      }
    break;

    case 3: //大剣
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 4: //太刀
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      for (var i = 0, j = WP_Motion.length; i < j; i++) {
        var kijin = this.c_kobetu2.selectedIndex;
        if (WP_Motion[i].flg.R4KJ) {
          if (!+WP_Motion[i].flg.R4KJ.charAt(kijin)) {
            WP_Motion.splice(i, 1);
            i--, j--;
          }
        }
      }
      break;

    case 5: //ハンマー
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 6: //狩猟笛
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 7: //ランス
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 8: //ガンランス
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      var shellingType = +getVal("shellingType");
      var shellingLv = +getVal("shellingLv") - 1;
      var Shelling = {}, Wyvern = {}, WyvernBaku = {}, HeatBlade = {};
      var qReload = +this.c_kobetu1.value;
      var rengekiP = 0, bakuP = this.c_kobetu2.value;
      var zoku_type = this.c_kenshou.value.charAt(0) === "Z" ? +this.c_kenshou.value.charAt(1) : +this.z_type.value;

      switch (shellingType) { //砲撃タイプ選択
        case 0:
          Shelling = JSON.parse(JSON.stringify(WEAPON_INFO[8].Shelling_Normal[shellingLv]));
          Wyvern = JSON.parse(JSON.stringify(WEAPON_INFO[8].Wyvern_Normal[shellingLv]));

          Shelling.M += floor(e_attB_rslt * 11 / 100);
          Shelling.BM = Shelling.ZM * 2;
          Shelling.ZM += floor(e_attB_rslt * 11 / 100);
          Wyvern.M += floor(e_attB_rslt * 165 / 1000);
          rengekiP = 9;
          break;
        case 1:
          Shelling = JSON.parse(JSON.stringify(WEAPON_INFO[8].Shelling_Wide[shellingLv]));
          Wyvern = JSON.parse(JSON.stringify(WEAPON_INFO[8].Wyvern_Wide[shellingLv]));

          Shelling.M += floor(e_attB_rslt * 9 / 100);
          Shelling.BM = Shelling.ZM * 2;
          Shelling.ZM += floor(e_attB_rslt * 9 / 100);
          Wyvern.M += floor(e_attB_rslt * 135 / 1000);
          rengekiP = 8;
          break;
        case 2:
          Shelling = JSON.parse(JSON.stringify(WEAPON_INFO[8].Shelling_Long[shellingLv]));
          Wyvern = JSON.parse(JSON.stringify(WEAPON_INFO[8].Wyvern_Long[shellingLv]));

          Shelling.M += floor(e_attB_rslt * 10 / 100);
          Shelling.BM = Shelling.ZM * 2;
          Shelling.ZM += floor(e_attB_rslt * 10 / 100);
          Wyvern.M += floor(e_attB_rslt * 150 / 1000);
          rengekiP = 7;
          break;
      }

      switch (+this.c_style.value) {
        case 0: //地ノ型
          //砲撃
          WP_Motion = WP_Motion.concat([{
            N:Shelling.N,
            M:floor(Shelling.M * qReload / 10),
            ZP:floor(Shelling.FZ * qReload / 10),
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1
          }]);

          //連撃砲
          WP_Motion = WP_Motion.concat([{
            N:"連撃砲(1HIT)",
            M:floor(Shelling.M * rengekiP / 10),
            ZP:floor(Shelling.FZ * rengekiP / 10),
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1
          }]);

          //竜撃砲
          WP_Motion = WP_Motion.concat([{
            N:Wyvern.N,
            M:Wyvern.M,
            ZP:Wyvern.FZ,
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1,X:5
          }]);

          //爆竜轟砲
          WP_Motion = WP_Motion.concat([{
            N:"爆竜轟砲",
            M:floor(Wyvern.M * bakuP / 100),
            ZP:floor(Wyvern.FZ * bakuP / 100),
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1,X:2
          }]);
          break;

        case 1: //天ノ型
          if (this.c_kobetu3.selectedIndex) {
            HeatBlade = JSON.parse(JSON.stringify(WEAPON_INFO[8].HeatBlade[shellingLv]));

            //砲撃
            WP_Motion = WP_Motion.concat([{
              N:Shelling.N,
              M:floor(Shelling.M * qReload / 10),
              ZP:floor(Shelling.FZ * 3 * qReload / 10),
              T:-1,ZT:1
            }]);　//火属性3倍

            //連撃砲
            WP_Motion = WP_Motion.concat([{
              N:"連撃砲(1HIT)",
              M:floor(Shelling.M * rengekiP / 10),
              ZP:floor(Shelling.FZ * 3 * rengekiP / 10),
              T:-1,ZT:1
            }]);　//火属性3倍

            //ヒートブレード
            WP_Motion = WP_Motion.concat([{
              N:"ＨＢ先端",
              P:5,
              ZP:HeatBlade.Z,
              ZT:1,IH:0,NKS:1
            }]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ先端",
                P:floor(5 * 20 / 100),
                ZP:floor(HeatBlade.Z * 20 / 100),
                ZT:1,ZH:20,IH:0,NKS:1,
                C:"<small>剣</small>"
              }]);
            WP_Motion = WP_Motion.concat([{N:"ＨＢ叩きつけ",P:62}]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ叩きつけ",
                P:floor(62 * 20 / 100),
                ZH:20,IH:20,
                C:"<small>剣</small>"
              }]);
          }
          else {
            //砲撃
            WP_Motion = WP_Motion.concat([{
              N:Shelling.N,
              M:floor(Shelling.M * qReload / 10),
              ZP:floor(Shelling.FZ * qReload / 10),
              E:+this.c_sharp.value ? "" : 1,
              T:-1,ZT:1
            }]);

            //連撃砲
            WP_Motion = WP_Motion.concat([{
              N:"連撃砲(1HIT)",
              M:floor(Shelling.M * rengekiP / 10),
              ZP:floor(Shelling.FZ * rengekiP / 10),
              E:+this.c_sharp.value ? "" : 1,
              T:-1,ZT:1
            }]);
          }
          break;

        case 2: //嵐ノ型
          if (this.c_kobetu3.selectedIndex) {
            for (var e in WEAPON_INFO[8].HeatBlade[shellingLv])
              HeatBlade = JSON.parse(JSON.stringify(WEAPON_INFO[8].HeatBlade[shellingLv]));

            //属性砲叩きつけ
            WP_Motion = WP_Motion.concat([{N:"属性砲叩きつけ",P:25}]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"属性砲叩きつけ",P:floor(25 * 20 / 100),
                ZH:20,IH:20,
                C:"<small>剣</small>"}
              ]);

            if (this.c_kenshou.value.substr(0,2) === "BA") { //爆撃剣晶装填時、砲撃　→　爆撃砲
              WP_Motion = WP_Motion.concat([{
                N:"爆撃" + Shelling.N,
                M:floor(Shelling.BM * qReload / 10),
                T:-1
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"爆撃" + Shelling.N,
                M:floor(Shelling.ZM * qReload / 10),
                T:-1
              }]);

              //連撃砲
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.BM * rengekiP / 10),
                T:-1
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.ZM * rengekiP / 10),
                T:-1
              }]);
            }
            else if (zoku_type) { //砲撃　→　属性砲
              WP_Motion = WP_Motion.concat([{
                N:"属性" + Shelling.N,
                M:floor(1 * qReload / 10),
                ZP:floor(Shelling.ZB * g_zoku / 1000 * qReload / 10),
                ZB:Shelling.ZB,
                T:-1,ZT:zoku_type
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"属性" + Shelling.N,
                M:floor(Shelling.ZM * qReload / 10),
                T:-1
              }]);

              //連撃砲
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(1 * qReload / 10),
                ZP:floor(Shelling.ZB * g_zoku / 1000 * rengekiP / 10),
                ZB:Shelling.ZB,
                T:-1,ZT:zoku_type
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.ZM * rengekiP / 10),
                T:-1
              }]);
            }
            else { //砲撃　→　打撃砲
              WP_Motion = WP_Motion.concat([{
                N:"打撃" + Shelling.N,
                M:floor(Shelling.DM * qReload / 10),
                T:2
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"打撃" + Shelling.N,
                M:floor(Shelling.ZM * qReload / 10),
                T:-1
              }]);

              //連撃砲
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.DM * rengekiP / 10),
                T:2
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.ZM * rengekiP / 10),
                T:-1
              }]);
            }

            //ヒートブレード
            WP_Motion = WP_Motion.concat([{
              N:"ＨＢ先端",
              P:5,ZP:HeatBlade.Z,
              ZT:1,IH:0,NKS:1
            }]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ先端",
                P:floor(5 * 20 / 100),
                ZP:floor(HeatBlade.Z * 20 / 100),
                ZT:1,ZH:20,IH:0,NKS:1,
                C:"<small>剣</small>"
              }]);

            WP_Motion = WP_Motion.concat([{N:"ＨＢ叩きつけ",P:62}]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ叩きつけ",
                P:floor(62 * 20 / 100),
                ZH:20,IH:20,
                C:"<small>剣</small>"
              }]);
          }
          else {
            //砲撃
            WP_Motion = WP_Motion.concat([{
              N:Shelling.N,
              M:floor(Shelling.M * qReload / 10),
              ZP:floor(Shelling.FZ * qReload / 10),
              E:+this.c_sharp.value ? "" : 1,
              T:-1,ZT:1
            }]);

            //連撃砲
            WP_Motion = WP_Motion.concat([{
              N:"連撃砲(1HIT)",
              M:floor(Shelling.M * rengekiP / 10),
              ZP:floor(Shelling.FZ * rengekiP / 10),
              E:+this.c_sharp.value ? "" : 1,
              T:-1,ZT:1
            }]);
          }
          break;

        case 3: //極ノ型
          if (this.c_kobetu3.selectedIndex) {
            HeatBlade = JSON.parse(JSON.stringify(WEAPON_INFO[8].HeatBlade[shellingLv]));

            //属性砲叩きつけ
            WP_Motion = WP_Motion.concat([{N:"属性砲叩きつけ",P:25}]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"属性砲叩きつけ",
                P:floor(25 * 20 / 100),
                ZH:20,IH:20,
                C:"<small>剣</small>"
              }]);

            if (this.c_kenshou.value.substr(0,2) === "BA") { //爆撃剣晶装填時、砲撃　→　爆撃砲
              WP_Motion = WP_Motion.concat([{
                N:"爆撃" + Shelling.N,
                M:floor(Shelling.BM * qReload / 10),
                T:-1
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"爆撃" + Shelling.N,
                M:floor(Shelling.ZM * qReload / 10),
                T:-1
              }]);

              //連撃砲
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.BM * rengekiP / 10),
                T:-1
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.ZM * rengekiP / 10),
                T:-1
              }]);

              //爆撃剣無属性ブレード
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ先端",
                P:9,
                ZH:0,IH:0,NKS:1
              }]);
              if (kenjyutu) //剣術
                WP_Motion = WP_Motion.concat([{
                  N:"ＨＢ先端",
                  P:floor(9 * 20 / 100),
                  ZH:0,IH:0,NKS:1,
                  C:"<small>剣</small>"
                }]);
            }
            else if (zoku_type) { //砲撃　→　属性砲
              WP_Motion = WP_Motion.concat([{
                N:"属性" + Shelling.N,
                M:floor(1 * qReload / 10),
                ZP:floor(Shelling.ZB * g_zoku / 1000 * qReload / 10),
                ZB:Shelling.ZB,
                T:-1,ZT:zoku_type
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"属性" + Shelling.N,
                M:floor(Shelling.ZM * qReload / 10),
                T:-1
              }]);

              //連撃砲
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(1 * qReload / 10),
                ZP:floor(Shelling.ZB * g_zoku / 1000 * rengekiP / 10),
                ZB:Shelling.ZB,
                T:-1,ZT:zoku_type
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.ZM * rengekiP / 10),
                T:-1
              }]);

              //属性ブレード
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ先端",
                P:5,
                ZP:HeatBlade.Z,
                ZT:zoku_type,IH:0,NKS:1
              }]);
              if (kenjyutu) //剣術
                WP_Motion = WP_Motion.concat([{
                  N:"ＨＢ先端",
                  P:floor(5 * 20 / 100),
                  ZP:floor(HeatBlade.Z * 20 / 100),
                  ZT:zoku_type,ZH:20,IH:0,NKS:1,
                  C:"<small>剣</small>"
                }]);
            }
            //
            else { //砲撃　→　打撃砲
              WP_Motion = WP_Motion.concat([{
                N:"打撃" + Shelling.N,
                M:floor(Shelling.DM * qReload / 10),
                T:2
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"打撃" + Shelling.N,
                M:floor(Shelling.ZM * qReload / 10),
                T:-1
              }]);

              //連撃砲
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.DM * rengekiP / 10),
                T:2
              }]);
              WP_Motion = WP_Motion.concat([{
                N:"連撃砲(1HIT)",
                M:floor(Shelling.ZM * rengekiP / 10),
                T:-1
              }]);

              //無属性ブレード
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ先端",
                P:9,
                IH:0,NKS:1
              }]);
              if (kenjyutu) //剣術
                WP_Motion = WP_Motion.concat([{
                  N:"ＨＢ先端",
                  P:floor(9 * 20 / 100),
                  IH:0,NKS:1,
                  C:"<small>剣</small>"
                }]);
            }

            WP_Motion = WP_Motion.concat([{N:"ＨＢ叩きつけ",P:62}]);
            if (kenjyutu) //剣術
              WP_Motion = WP_Motion.concat([{
                N:"ＨＢ叩きつけ",
                P:floor(62 * 20 / 100),
                ZH:20,IH:20,
                C:"<small>剣</small>"
              }]);
          }
          else {
            //砲撃
            WP_Motion = WP_Motion.concat([{
              N:Shelling.N,
              M:floor(Shelling.M * qReload / 10),
              ZP:floor(Shelling.FZ * qReload / 10),
              E:+this.c_sharp.value ? "" : 1,
              T:-1,ZT:1
            }]);

            //連撃砲
            WP_Motion = WP_Motion.concat([{
              N:"連撃砲(1HIT)",
              M:floor(Shelling.M * rengekiP / 10),
              ZP:floor(Shelling.FZ * rengekiP / 10),
              E:+this.c_sharp.value ? "" : 1,
              T:-1,ZT:1
            }]);
          }

          //竜撃砲
          WP_Motion = WP_Motion.concat([{N:Wyvern.N,
            M:Wyvern.M,
            ZP:Wyvern.FZ,
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1,X:5}]);

          //爆竜轟砲
          WP_Motion = WP_Motion.concat([{N:"爆竜轟砲",
            M:floor(Wyvern.M * bakuP / 100),
            ZP:floor(Wyvern.FZ * bakuP / 100),
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1,X:2}]);

          WyvernBaku.M = floor(Wyvern.M * bakuP / 100);
          WyvernBaku.ZP = floor(Wyvern.FZ * bakuP / 100);

          //極竜滅砲
          WP_Motion = WP_Motion.concat([{N:"極竜滅砲",
            M:floor(WyvernBaku.M * 1285 / 1000),
            ZP:floor(WyvernBaku.ZP * 1285 / 1000),
            E:+this.c_sharp.value ? "" : 1,
            T:-1,ZT:1,X:2}]);
          break;
      }
      break;

    case 9: //穿龍棍
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 10: //スラッシュアックスF
      resetData("damage");
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      break;

    case 11: //マグネットスパイク
      resetData("damage");
      WP_Info.Type = this.c_kobetu1.selectedIndex ? 2 : 1;
      wp_motion_set(WEAPON_INFO[wp_type].Motion);
      for (var i = 0, j = WP_Motion.length; i < j; i++) {
        var magUp = this.c_kobetu2.selectedIndex;
        if (WP_Motion[i].flg.R11MG) {
          if (!+WP_Motion[i].flg.R11MG.charAt(magUp)) {
            WP_Motion.splice(i, 1);
            i--, j--;
          }
        }
      }
      break;

    case 12: //ライトボウガン
    case 13: //ヘビィボウガン
      resetData("damage");
      var motion = WEAPON_INFO[wp_type].Bullet;
      var loadingNum = 0;
      var bullet_num = "";
      var sizilzoku = +this.i_sizilzoku.value + +this.i_sizilwpUp.value;
      var sizilzokuRng = 0;

      //範囲辿異シジル
      if (+this.i_sizilzokuRng.value && +this.i_sizilzokuRngN.value) {
        if (+this.i_sizilzokuRngN.value > +this.i_sizilzokuRng.value)
          this.i_sizilzokuRng.value = this.i_sizilzokuRngN.value
        sizilzokuRng = +this.i_sizilzokuRng.value ? +this.i_sizilzokuRng.value * 5 + +this.i_sizilzokuRngN.value * 5 : 0;
      }

      //クリティカル距離倍率
      if (wp_type === 12) {
        if (+this.c_style.value === 1 || +this.c_style.value === 2) {
          criPoint = 160;
          if (this.c_fw.checked)
            criPoint += 10;
        }
        else {
          criPoint = 150;
          if (this.c_fw.checked)
            criPoint += 20;
        }
      }
      else {
        criPoint = 170;
        if (this.c_fw.checked)
          criPoint += 20;
      }

      //始種・辿異防具補正
      if (this.enemy_gou && this.c_armorGun.selectedIndex) {
        criPoint += 30
      }

      bullet_num = this.c_tama.value;

      if (wp_type === 13) { //圧縮リロの弾数データ処理
        if (motion[bullet_num].N.substr(3,2) === "拡散") {
          disabled("c_kobetu1", true);
          disabled("c_kobetu2", true);
          this.c_kobetu2.length = 1;
          this.c_kobetu2.options[0].text = "---------------";
        }
        else {
          if (this.d_specCng.style.backgroundColor) {
            disabled("c_kobetu1", !motion[bullet_num].LN);
            disabled("c_kobetu2", !motion[bullet_num].LN);
            this.c_kobetu2.length = motion[bullet_num].LN.length;
            for (var i = 0; i < motion[bullet_num].LN.length; i++) { //弾数記入
              this.c_kobetu2.options[i].text = motion[bullet_num].LN[i] + "発";
              this.c_kobetu2.options[i].value = motion[bullet_num].LN[i];
            }
          }
          else if (this.s_wp.value) {
            var eq = eq_data[WEAPON_INFO[wp_type].Id][this.s_wp.value];
            var eq_ln = +eq[I_aGUN + (motion[bullet_num].N.substr(3,2) === "打撃" ? +bullet_num.substr(1) : +bullet_num)];
            disabled("c_kobetu1", !eq_ln);
            disabled("c_kobetu2", !eq_ln);
            if (eq_ln) {
              if (Math.abs(eq_ln) === 1) {
                this.c_kobetu2.length = 1;
                this.c_kobetu2.options[0].text = (Math.abs(eq_ln) + 1) + "発";
                this.c_kobetu2.options[0].value = Math.abs(eq_ln) + 1;
              }
              else {
                this.c_kobetu2.length = 2;
                this.c_kobetu2.options[0].text = Math.abs(eq_ln) + "発";
                this.c_kobetu2.options[0].value = Math.abs(eq_ln);
                this.c_kobetu2.options[1].text = (Math.abs(eq_ln) + 1) + "発";
                this.c_kobetu2.options[1].value = Math.abs(eq_ln) + 1;
              }
            }
            else { //圧縮不可の弾
              this.c_kobetu2.length = 1;
              this.c_kobetu2.options[0].text = "---------------";
            }
          }
        }
      }

      loadingNum = this.c_kobetu2.value;
      WP_Motion = [];

      var comp = (wp_type === 13) ? this.c_kobetu1.selectedIndex : 0;
      switch (comp) { //圧縮タイプ選択
        case 1:
        case 2:
          if (motion[bullet_num].N.substr(3,2) === "拡散" || !this.c_kobetu2.value) {
            WP_Motion = WP_Motion.concat(motion[bullet_num]); //データ記入
            break;
          }

          if (comp === 1) //圧縮弾選択
            bullet_num = "C" + bullet_num;
          else //P圧縮弾選択
            bullet_num = "P" + bullet_num;

          WP_Motion = WP_Motion.concat(motion[bullet_num]); //データ記入

          //圧縮弾の物理威力
          if (comp === 1 && WP_Motion[0].N.substr(3,2) === "徹甲") //圧縮徹甲の威力計算式だけやや特殊
            WP_Motion[0].P =
              floor(
                (
                  motion[bullet_num].PB / 10)
                  * loadingNum) + 1;
          else
            WP_Motion[0].P =
              floor(
                (
                  motion[bullet_num].PB / 10)
                  * loadingNum);

          if (WP_Motion[0].ZB) { //圧縮散弾、属性弾の属性処理
            if (WP_Motion[0].N.substr(3,2) === "散弾") {
              if (comp === 1)
                WP_Motion[0].ZP =
                  floor(
                    (
                      motion[bullet_num].ZB * 6 / 10)
                      * loadingNum);
              else
                WP_Motion[0].ZP =
                  floor(
                    (
                      motion[bullet_num].ZB * 8 / 10)
                      * loadingNum);
            }

            switch (WP_Motion[0].N.substr(0,2)) { //圧縮属性弾の処理
              case "火炎":
              case "水冷":
              case "雷撃":
              case "氷結":
                if (comp === 1)
                  WP_Motion[0].ZP =
                    floor(
                      (
                        (
                          floor(
                            g_attB_rslt * motion[bullet_num].ZB / 100) + sizilzoku + sizilzokuRng)
                            * 6 / 10)
                            * loadingNum);
                else
                  WP_Motion[0].ZP =
                    floor(
                      (
                        (
                          floor(
                            g_attB_rslt * motion[bullet_num].ZB / 100) + sizilzoku + sizilzokuRng)
                            * 8 / 10)
                            * loadingNum);
                break;
              case "滅龍":
                if (comp === 1)
                  WP_Motion[0].ZP =
                    floor(
                      (
                        (
                          motion[bullet_num].ZB + sizilzoku + sizilzokuRng)
                          * 8 / 10)
                          * loadingNum);
                else
                  WP_Motion[0].ZP =
                    floor(
                      (
                        motion[bullet_num].ZB + sizilzoku + sizilzokuRng)
                        * loadingNum);
                break;
            }
          }

          if (WP_Motion[0].IPB) { //異常弾
            WP_Motion[0].IP = floor(motion[bullet_num].IPB * loadingNum);
          }
          else //圧縮異常弾は着弾爆発無し
            WP_Motion = WP_Motion.concat([{N:"着弾爆発",M:motion[bullet_num].M,T:-1}]); //着弾爆発
          break;

        default: //ライト&非圧縮
          WP_Motion = WP_Motion.concat(motion[bullet_num]); //データ記入

          switch (WP_Motion[0].N.substr(0,2)) { //属性弾の処理
            case "火炎":
            case "水冷":
            case "雷撃":
            case "氷結":
              WP_Motion[0].ZP =
                floor(
                  (
                    g_attB_rslt * motion[bullet_num].ZB / 100) + sizilzoku + sizilzokuRng);
              break;
          }
          break;
      }

      switch (WP_Motion[0].N.substr(3,2)) {　//クリ距離持ちの弾
        case "通常":
        case "貫通":
        case "打撃":
        case "徹甲":
          if (wp_type === 13) {
            if (this.c_kuugeki.checked) { //ヘビー空隙追加
              WP_Motion = WP_Motion.concat([{N:"空隙クリ",P:+criPoint + 45,PC:"倍"}]);
            }
            WP_Motion = WP_Motion.concat([{N:"クリ前半",P:+criPoint + 30,PC:"倍"}]);
          }

          if (wp_type === 12 && +this.c_style.value === 2 && this.c_kobetu2.selectedIndex) { //ステップ撃ち
            if (this.c_kuugeki.checked) { //空隙
              if (this.c_fw.checked) //近接撃ちはフィーチャーのクリ倍率UP無効
                WP_Motion = WP_Motion.concat([{N:"空隙接撃",P:+criPoint + 50 - 10,PC:"倍"}]);
              else
                WP_Motion = WP_Motion.concat([{N:"空隙接撃",P:+criPoint + 50,PC:"倍"}]);
            }
            if (this.c_fw.checked) //近接撃ちはフィーチャーのクリ倍率UP無効
              WP_Motion = WP_Motion.concat([{N:"近接撃ち",P:+criPoint + 40 - 10,PC:"倍"}]);
            else
              WP_Motion = WP_Motion.concat([{N:"近接撃ち",P:+criPoint + 40,PC:"倍"}]);
          }

          if (this.c_kuugeki.checked && wp_type === 12) { //ライト空隙追加
            WP_Motion = WP_Motion.concat([{N:"空隙クリ",P:criPoint + 10,PC:"倍"}]);
          }
          WP_Motion = WP_Motion.concat([{N:"クリ距離",P:criPoint,PC:"倍"},{N:"クリ距離外",P:100,PC:"倍"}]);

          break;
        default:
          WP_Motion = WP_Motion.concat({N:"全距離",P:100,PC:"倍"});
          break;
      }
      if (wp_type === 12 && +this.c_style.value === 2 && this.c_kobetu2.selectedIndex) //ステップ撃ちの爆風
        WP_Motion = WP_Motion.concat([{N:"密着爆風",M:30,ZP:12,ZT:1,T:-1}]);

      switch (WP_Motion[0].N.substr(3,2)) { //徹甲、子拡散の爆破
        case "徹甲":
          WP_Motion = WP_Motion.concat([{
            N:WP_Motion[0].BN,
            M:(WP_Motion[0].BMB ? (WP_Motion[0].BMB * loadingNum) : WP_Motion[0].BM) * (this.c_houjyutu.selectedIndex ? 15 : 10) / 10,
            ZP:WP_Motion[0].BFZ[this.c_houjyutu.selectedIndex],
            ZT:1,T:-1,
            BC:WP_Motion[0].BC || ""
          }]);
          break;

        case "拡散":
          WP_Motion = WP_Motion.concat([{
            N:WP_Motion[0].BN,
            M:WP_Motion[0].BM,
            ZP:WP_Motion[0].BFZ,
            ZT:1,T:-1,
            BC:WP_Motion[0].BC || ""
          }]);
          break;
      }

      if (wp_type === 13 && +this.c_style.value === 3) //極の型に砲熱照射追加
        WP_Motion = WP_Motion.concat([{
          N:WEAPON_INFO[wp_type].Bullet.G28.N,
          M:WEAPON_INFO[wp_type].Bullet.G28.R12H[this.c_houjyutu.selectedIndex],
          ZP:WEAPON_INFO[wp_type].Bullet.G28.FZ,
          ZT:1,T:-1,X:90
        }]);

      if (wp_type === 12) { //JS補正
        WP_Motion[0].H = +this.c_kobetu1.value;
        WP_Motion[0].ZH = +this.c_kobetu1.value;
        if (+this.c_style.value === 3) { //JS派生ショット補正
          WP_Motion[0].H *= +this.c_kobetu2.value / 10;
          WP_Motion[0].ZH *= +this.c_kobetu2.value / 10;
        }
      }
      else {
        if (+this.c_style.value > 1) { //溜め補正
          WP_Motion[0].H = +this.c_kobetu3.value;
          WP_Motion[0].ZH = +this.c_kobetu3.value;
        }
      }
      break;

    case 14: //弓
      resetData("damage");
      var motion = WEAPON_INFO[wp_type].Bullet;
      var ya_num = "";
      WP_Motion = [];

      criPoint = 150;
      //始種・辿異防具補正
      if (this.enemy_gou && this.c_armorGun.selectedIndex) {
        criPoint += 30
      }

      ya_num = this.c_shoot.value;
      if (ya_num !== "" && motion[ya_num].P instanceof Array) {
        this.c_ya.length = motion[ya_num].P.length;
        for (var j = 0; j < motion[ya_num].P.length; j++) {
          this.c_ya.options[j].text = (j+1) + "矢：" + motion[ya_num].P[j];
        }
      }
      else {
        this.c_ya.length = 1;
        this.c_ya.options[0].text = "-----";
      }

      var tameAt = tameZoku = tameAtMu = 1000;
      if (!this.c_tame.selectedIndex) { //近接攻撃
        WP_Info.Type = 1;
        wp_motion_set(WEAPON_INFO[wp_type].Motion);
      }
      else {
        WP_Info.Type = 3;

        switch (this.c_tame.selectedIndex) {
          case 2: //タメ１
          case 3: //タメ２
          case 4: //タメ３
          case 5: //タメ４
            var tameAt = [400,1000,1500,1850][this.c_tame.selectedIndex-2];
            var tameZoku = [700,950,1200,1334][this.c_tame.selectedIndex-2];
            var tameAtMu = tameAt;
            if (+this.c_style.value > 1) {
              switch (this.c_kobetu2.selectedIndex) {
                case 1: //しゃがみ撃ち
                  tameAt *= [120,130,140,140][this.c_tame.selectedIndex-2] / 100;
                  tameZoku *= [120,130,140,140][this.c_tame.selectedIndex-2] / 100;
                  break;
                case 2: //タメ連射
                  tameAt *= [85,75,65][this.c_tame.selectedIndex-3] / 100;
                  tameZoku *= [85,75,65][this.c_tame.selectedIndex-3] / 100;
                  break;
              }
            }
            break;
          case 1: //曲射
            if (motion[ya_num].N.substr(3,2) === "爆裂")
              tameZoku = 200;
            else
              tameZoku = 700;
            break;
          case 6: //オーラ、昇天
            if (this.c_kobetu2.selectedIndex === 1) { //オーラアロー&昇天補正
              tameAt = [1000,1100,1000,2000][this.c_shoot.selectedIndex];
              tameZoku = [1000,1100,1000,1500][this.c_shoot.selectedIndex];
              tameAtMu = tameAt;
            }
            else { //昇天補正
              tameAt = [1000,2000][this.c_shoot.selectedIndex];
              tameZoku = [1000,1500][this.c_shoot.selectedIndex];
              tameAtMu = tameAt;
            }
            break;
        }

        //データ記入
        WP_Motion = WP_Motion.concat([{
          N:motion[ya_num].N,
          P:motion[ya_num].P instanceof Array ? motion[ya_num].P[this.c_ya.selectedIndex] : motion[ya_num].P,
          H:tameAt / 10, ZH:tameZoku / 10, HMu:tameAtMu / 10,
          M:(motion[ya_num].M || ""),
          BA:(motion[ya_num].BA || ""),
          XB:(motion[ya_num].XB || ""),
          PC:(motion[ya_num].PC || ""
        )}]);
      }

      if ((ya_num === "S16" || ya_num === "S17") && this.c_ya.selectedIndex) //貫薙弓初撃以外特殊補正表示なし
        WP_Motion[0].XB = "";

      if (this.c_tame.selectedIndex && !(WP_Motion[0].N.substr(0,2) === "曲射") && !(WP_Motion[0].N.substr(0,2) === "昇天")) {
        if (this.c_kuugeki.checked) { //空隙
          WP_Motion = WP_Motion.concat([{N:"空隙クリ",P:+criPoint + 10,PC:"倍"}]);
        }
        WP_Motion = WP_Motion.concat([{N:"クリ距離",P:+criPoint,PC:"倍"},{N:"クリ距離外",P:100,PC:"倍"}]);
      }

      if (WP_Motion[0].N.substr(0,2) === "昇天") {
        if (this.c_kuugeki.checked) { //空隙
          WP_Motion = WP_Motion.concat([{N:"空隙クリ（上昇）",P:+criPoint + 10,PC:"倍"}]);
        }
        WP_Motion = WP_Motion.concat([{N:"クリ距離（上昇）",P:criPoint,PC:"倍"},{N:"クリ距離外（水平）",P:100,PC:"倍",NXB:1}]);
      }

      if (WP_Motion[0].N.substr(0,2) === "曲射")
        WP_Motion = WP_Motion.concat([{N:"全距離",P:100,PC:"倍"}]);

      if (WP_Motion[0].N.substr(3,2) === "爆裂") //爆裂型曲射
        WP_Motion = WP_Motion.concat([{N:"爆裂",M:WP_Motion[0].M,T:-1}]);

      break;
  }

  //反射有効時モーションセット
  if (!this.c_reflect.disabled && +this.c_reflect.value) {
    let refIdx = this.c_reflect.selectedIndex;
    WP_Motion = WP_Motion.concat([{N:this.c_reflect.options[refIdx].text,
      P:+this.c_reflect.value,ZH:0,IH:0,NCr:1,KRH:50}]);
  }

  //巧流強化有効時モーションセット
  if (!this.c_kouryuUp.disabled && this.c_kouryuUp.checked) {
    WP_Motion = WP_Motion.concat([{N:"巧流強化",P:30,ZH:0,IH:0,NCr:1,KRH:50}]);
  }

  //氷界有効時モーションセット
  if (this.c_iceField.selectedIndex) {
    var iceFieldB = [0,42,98,140][this.c_iceField.selectedIndex];
    WP_Motion = WP_Motion.concat([{
      N:"氷界LV" + c_iceField.selectedIndex,
      DoT:floor(e_attB_rslt * iceFieldB / 1000),
      T:-1
    }]);
  }
  //睡眠変撃選択時モーション表示強制分離表示に
  if (this.c_hengeki.checked
        && +this.i_type.value === 3 && +this.w_ijyou.value) {
    this.k_motion.selectedIndex = 1;
  }

  var list = this.damage;
  var damage_data = list.getElementsByTagName("tbody")[0];
  var combine = this.k_motion.selectedIndex;

  if (!wp_type) {
    display("damage", 0, ""); return;
  }

  display("damage", 1, "inline-block");
  var eleTr = document.createElement("tr");
  damage_data.appendChild(eleTr);
  eleTr.className = "dai";
  var eleTd = document.createElement("td");
  eleTr.appendChild(eleTd);
  eleTd.innerHTML = "ﾓｰｼｮﾝ値";

//モーション表示
  for(var i = 0, t = "", MLen = WP_Motion.length; i < MLen; i++){
    if (!WP_Motion[i].T) WP_Motion[i].T = WP_Info.Type;
    switch (WP_Motion[i].T) {
      case 1: //斬
      case 2: //打
        t = (WP_Motion[i].T === WP_Info.Type ? "" : BUKITYPE[WP_Motion[i].T])
          + (WP_Motion[i].KP ? WP_Motion[i].KP : (WP_Motion[i].P !== undefined ? WP_Motion[i].P : WP_Motion[i].M))
          + (WP_Motion[i].PC ? WP_Motion[i].PC : "")
          + (WP_Motion[i].ZT ? "+" + "<small>" + ZOKU_INFO[WP_Motion[i].ZT].Name + "</small>" + WP_Motion[i].ZP  : "")
          + (WP_Motion[i].X ? "×" + WP_Motion[i].X : "");
        if (!WP_Motion[i].H) WP_Motion[i].H = WP_Info.Hosei;
        break;
      case 3:
        if (i) { //クリ距離
          t = (WP_Motion[i].T === WP_Info.Type ? "" : BUKITYPE[WP_Motion[i].T]) + (WP_Motion[i].P / 100).toFixed(2) + (WP_Motion[i].PC || "");
        }
        else {
          t = (WP_Motion[i].T === WP_Info.Type ? "" : BUKITYPE[WP_Motion[i].T])
            + ((WP_Motion[i].P !== undefined) ? WP_Motion[i].P : WP_Motion[i].M)
            + (WP_Motion[i].ZT ? "+" + "<small>" + ZOKU_INFO[WP_Motion[i].ZT].Name + "</small>" + WP_Motion[i].ZP : "")
            + (WP_Motion[i].IT ? "+" + "<small>" + IJYOU_INFO[WP_Motion[i].IT].Name + "</small>" + WP_Motion[i].IP  : "")
            + (WP_Motion[i].XB ? "x" + WP_Motion[i].XB + "倍" : "") + "<br>"
            + (WP_Motion[i].PC || "");
        }
        if (!WP_Motion[i].H) WP_Motion[i].H = WP_Info.Hosei;
        break;
      case -1: //他
        if (WP_Motion[i].M) {
          t = "爆" + WP_Motion[i].M + (WP_Motion[i].ZT ? "+" + "<small>" + ZOKU_INFO[WP_Motion[i].ZT].Name + "</small>" + WP_Motion[i].ZP  : "")
          + (WP_Motion[i].X ? "<br>" + "x" + WP_Motion[i].X + "Hit" : "") + (WP_Motion[i].BC ? "<br>" + WP_Motion[i].BC : "");
        }
        else { //氷界
          t = "爆" + WP_Motion[i].DoT + "/Sec";
        }
        break;
      default:
        alert("エラー");
    }

    if(i > 0 && !combine && WP_Motion[i-1].N === WP_Motion[i].N) { //結合
      eleTd.innerHTML += (WP_Motion[i].P !== undefined || WP_Motion[i].M) ? ("・" + t) : ("・" + WP_Motion[i].PC); //気刃放出用の条件式
    }
    else {
      if (WP_Motion[i].P === undefined && (!WP_Motion[i].M && WP_Motion[i].DoT === undefined)) continue;
      eleTd = document.createElement("td");
      eleTr.appendChild(eleTd);
        eleTd.innerHTML = WP_Motion[i].N + (WP_Motion[i].C || "") + "<br>" + t;
    }
  }
  this.damage.rows[0].cells[0].colSpan = this.damage.rows[1].cells.length;
}

//ダメージ計算
function calcDmg(wp_type) {
  if (this.n_inputList.checked && !this.m_enemy.value) return;

  for (var buiCnt = 0; buiCnt < bui.length; buiCnt++) {
  var buiButu = [0, +bui[buiCnt][1], +bui[buiCnt][2], +bui[buiCnt][3]];
  var buiZoku = [0, +bui[buiCnt][4], +bui[buiCnt][5], +bui[buiCnt][6], +bui[buiCnt][7], +bui[buiCnt][8]];

  var hc = this.n_inputSelf.checked ? +this.m_hcS.value * 100 : +this.m_hcL.value;
  var ang = this.n_inputSelf.checked ? +this.m_angS.value * 100 : +this.m_angL.value;
  var def = this.n_inputSelf.checked ? +this.m_defS.value * 100 : +this.m_defL.value;
  var sharp = +this.c_sharp.value;

  var adjustP = (wp_type > 10) ? [0,64,72,81][this.c_adjust.selectedIndex] : [0,72,81,90][this.c_adjust.selectedIndex]
  var kariC = this.c_kariC.checked ? 125 : 100;

  var sizilzokuTeni = +this.i_sizilzokuTeni.value ? +this.i_sizilzokuTeni.value + 13 : 10;

  //斬り方補正
  if (sharp < 3) {
    disabled("c_kiri", false);
     var hosei_kirikata = +this.c_kiri.value;
  }
  else {
    disabled("c_kiri", true);
     var hosei_kirikata = 100;
    this.c_kiri.selectedIndex = 1;
  }

  //肉質補正
  var tenrai = this.c_tenrai.checked ? 5 : 0;
  var acidP = this.c_acid.value === "0" ? 10 : 0;
  var sonicP = this.c_sonicP.checked ? 2 : 0;
  var tokkou = +this.c_hit.value;
  var itten = +this.c_itten.value;

  //纏雷、強酸弾、物理音響
  for (var i = 1; i < 4; i++) {
    buiButu[i] += tenrai + acidP + sonicP;
  }

  //属性肉質補正
  var sonicZ = this.c_sonicZ.checked ? 4 : 0;
  var tokkouZ = +this.c_zokuHit.value;

  for (var i = 1; i < 6; i++) {
    buiZoku[i] += sonicZ;
    buiZoku[i] += +this.c_acid.value === i ? 10 : 0;  //属性酸弾
    if (!this.c_hutai.checked)
      buiZoku[i] += (buiZoku[i] >= 20 ? tokkouZ : 0);
    else {
      tokkouZ = +this.c_zokuHit.options[1].value;
      buiZoku[i] += tokkouZ;
    }
  }

  //会心補正
  if (kaisin_rslt >= 0) {
    var hosei_criB = 125;
    if (!this.c_hutai.checked) {
      switch (+this.c_sen.value) {　//一閃会心補正
        case 1:
          hosei_criB += 10;
          break;
        case 2:
          hosei_criB += 15;
          break;
        case 3:
          hosei_criB += 25;
          break;
      }
    }
    else {
      hosei_criB += 25; //不退会心補正
    }

    if (+this.c_garou.value === 2) { //餓狼+2補正
      hosei_criB += 10;
    }

    switch (+this.c_maku.value) {　//幕無補正
      case 1:
        hosei_criB += 10;
        break;
      case 2:
        hosei_criB += 15;
        break;
      case 3:
        hosei_criB += 20;
        break;
    }
  }
  else {
    var hosei_criB = 75;
  }

  var hosei_mot = hosei_zoku = hosei_ijyou = 100;
  var hosei_tamaAtUp = 10, hosei_binAtUp = 10;
  //個別補正
  switch (wp_type) {
    case 1: //片手剣
      if (this.c_fw.checked) //フィーチャー時属性異常1.2倍
        hosei_zoku = hosei_ijyou = 120;
      break;
    case 3: //大剣
    case 4: //太刀
      if (this.c_kobetu1.selectedIndex && hosei_kirikata === 100)
        hosei_kirikata = 105; //中腹補正
      break;
    case 9: //穿龍棍
      switch (+this.c_style.value) {
        case 1:
        case 3:
          if (this.c_kobetu3.selectedIndex) hosei_mot = 105;
          break;
      }
      break;
    case 10: //スラアク
      switch (getVal("c_kobetu2")) {
        case "KG": //強撃ビン
          hosei_mot = 110;
          break;
        case "KZ": //強属性ビン
          hosei_zoku = 130;
          break;
        case "KI": //強異常ビン
          hosei_ijyou = 120;
          break;
      }
      break;
    case 11: //マグネットスパイク
      if (this.c_kobetu2.selectedIndex) hosei_mot = 110;
      break;
    case 12:
    case 13:
      if (this.c_tamaAtUp.checked) {
        switch (WP_Motion[0].N.substr(3,2)) {
          case "通常":
          case "貫通":
          case "打撃":
            hosei_tamaAtUp = 11;
            break;
          case "散弾":
            hosei_tamaAtUp = 13;
            break;
        }
      }
      if (wp_type === 12 && +this.c_style.value === 2 && this.c_kobetu2.selectedIndex) { //ステップ撃ち属性1.5倍
        hosei_zoku = 150;
      }
      if (wp_type === 13 && +this.c_hiden.value > 11) { //銃仙属性1.3倍
        hosei_zoku = 130;
      }
      break;

    case 14:
      if (this.c_tamaAtUp.checked) {
        switch (WP_Motion[0].N.substr(0,2)) {
          case "連射":
          case "貫通":
            hosei_tamaAtUp = 11;
            break;
          case "拡散":
            hosei_tamaAtUp = 13;
            break;
        }
      }

      //ビン補正
      var bakubinFlg = 0
      switch (this.c_kobetu1.value) {
        case "BA":
          bakubinFlg = "BA";
          break;
        case "KG":
          hosei_binAtUp = 16;
          break;
        case "IJ":
        case "DA":
          hosei_binAtUp = 15;
          break;
      }
      if (this.c_kobetu1.value === "KG" || this.c_kobetu1.value === "IJ") {
        if (this.c_hrYumi.checked)
          hosei_binAtUp -= 1;
        if (this.enemy_gou && this.c_armorGun.selectedIndex) //始･辿防具装備時ビン補正+0.1倍
          hosei_binAtUp += 1;
        if (+this.c_hiden.value > 11) //弓鬼発動時ビン補正+0.1倍
          hosei_binAtUp += 1;
        if (this.c_zeigeki.checked) //消費特効発動時ビン補正+0.2倍
          hosei_binAtUp += 2;
      }
      break;
  }

  //爆撃剣条件式
  var bakukenFlg = bakuAt = 0;
  if (this.c_kenshou.value.substr(0,2) === "BA") {
    bakukenFlg = "BA";
    if (wp_type === 2 && this.c_kobetu1.selectedIndex) { //双剣鬼人
      bakuAt = WP_Info.BakuKen_Kijin[this.c_kenshou.value.charAt(2)];
    }
    else {
      bakuAt = WP_Info.BakuKen[this.c_kenshou.value.charAt(2)];
    }
  }

  //各モーションダメージ計算
  for(var i = 0, MLen = WP_Motion.length; i < MLen; i++) {
    var dmgButu_NoCr = dmgButu_Cr = dmgZoku = dmgHgk = 0;
    var catZokuUp = this.c_catZokuUp.checked ? 11 : 10;
    var hornZokuFlg = this.c_hornZokuUp.checked;
    var bakuFlg = 0
    var kei_ijyou = kei_ijyouType = 0;
    var kei_nZoku = [];
    var kei_mot = kei_motCri = 0;
    var transB = [100, 100];

    //強撃剣晶補正
    //強撃剣晶装填時、剣晶無効モーションは処理しない
    var hosei_kg = (this.c_kenshou.value === "KG" && !(WP_Motion[i].NKS || WP_Motion[i].R9K)) ? 12 : 10;

    var kei_hoseiMot = hosei_mot, kei_hoseiZoku = hosei_zoku, kei_hoseiIjyou = hosei_ijyou;
    //穿龍棍EX回避補正とスラアク強撃ビン補正
    if (wp_type === 9 && (+this.c_style.value === 1 && !WP_Motion[i].R9)) {
      kei_hoseiMot = 100;
    }
    if (wp_type === 10 && !WP_Motion[i].R10) {
      kei_hoseiMot = 100;
      kei_hoseiZoku = 100;
      kei_hoseiIjyou = 100;
    }

    //剣晶無効モーション
    //属性、異常、爆撃剣晶装填時、剣晶無効モーションは処理しない
    if (WP_Motion[i].NKS || WP_Motion[i].R9K) {
      kei_nZoku = eq_zoku.slice();
      kei_ijyou = eq_ijyou;
      kei_ijyouType = +this.i_type.value;
    }
    else if (wp_type !== 12 && wp_type !== 13) {
      kei_nZoku = this.c_kenshou.value.charAt(0) === "Z" ? kenshou_zoku.slice() : eq_zoku.slice();
      kei_ijyou = this.c_kenshou.value.charAt(0) === "I" ? kenshou_ijyou : eq_ijyou;
      kei_ijyouType = this.c_kenshou.value.charAt(0) === "I" ? +this.c_kenshou.value.charAt(1) : +this.i_type.value;
      bakuFlg = (bakukenFlg || bakubinFlg);
    }

    //-------------------------剣士ダメージ計算-------------------------
    switch (WP_Motion[i].T === -1 ? -1 : bakuFlg || WP_Motion[i].T) {
      case 1: //斬
      case 2: //打
        var kei_type = WP_Motion[i].T, kei_hosei = WP_Motion[i].H, kei_adjust = 100, disp_adjust = "";
        var kei_niku = [];

        //一点突破、痛撃
        for (var nikuCnt = 1; nikuCnt < 4; nikuCnt++) {
          kei_niku[nikuCnt] = buiButu[nikuCnt];
          //巧流強化は一点無効
          if (WP_Motion[i].N.indexOf("巧流") === -1)
            kei_niku[nikuCnt] += itten;

          //痛撃（不退）
          if (!this.c_hutai.checked)
            kei_niku[nikuCnt] += (kei_niku[nikuCnt] >= 30 ? tokkou : 0);
          else
            kei_niku[nikuCnt] += 5;
        }

        //タイプ選択、適応撃
        switch (wp_type) {
          case 1: //片手剣
            if (adjustP) {
              if (kei_niku[1] >= kei_niku[2] && kei_niku[1] >= kei_niku[3] &&
                kei_niku[kei_type] * 100 < kei_niku[1] * adjustP) { //斬
                kei_type = 1, kei_adjust = adjustP, disp_adjust = " aj1";
              }
              else if (kei_niku[2] >= kei_niku[1] && kei_niku[2] >= kei_niku[3] &&
                kei_niku[kei_type] * 100 < kei_niku[2] * adjustP) { //打
                kei_type = 2, kei_adjust = adjustP, disp_adjust = " aj2";
              }
              else if (kei_niku[kei_type] * 100 < kei_niku[3] * adjustP) { //弾
                kei_type = 3, kei_adjust = adjustP, disp_adjust = " aj3";
              }

              if (WP_Motion[i].T === 2) kei_hosei = WP_Info.Hosei;
            }
            break;
          case 7: //ランス
            if (adjustP) {
              if (kei_niku[1] >= kei_niku[2] && kei_niku[1] >= kei_niku[3] &&
                kei_niku[kei_type] * 100 < kei_niku[1] * adjustP) { //斬
                kei_type = 1, kei_adjust = adjustP, disp_adjust = " aj1";
              }
              else if (kei_niku[2] >= kei_niku[1] && kei_niku[2] >= kei_niku[3] &&
                kei_niku[kei_type] * 100 < kei_niku[2] * adjustP) { //打
                kei_type = 2, kei_adjust = adjustP, disp_adjust = " aj2";
              }
              else if (kei_niku[kei_type] * 100 < kei_niku[3] * adjustP) { //弾
                kei_type = 3, kei_adjust = adjustP, disp_adjust = " aj3";
              }
            }
            else {
              if (kei_type != 2) { //盾攻撃以外
                if (kei_niku[kei_type] * 100 >= kei_niku[2] * 72) { //斬肉質参照
                  kei_hosei = 100;
                }
                else { //打肉質参照
                  kei_type = 2, kei_hosei = 72;
                }
              }
            }
            break;
          case 14: //弓
            if (adjustP) {
              if (kei_niku[1] >= kei_niku[2] && kei_niku[1] >= kei_niku[3] &&
                kei_niku[kei_type] * 100 < kei_niku[1] * adjustP) { //斬
                kei_type = 1, kei_adjust = adjustP, disp_adjust = " aj1";
              }
              else if (kei_niku[2] >= kei_niku[1] && kei_niku[2] >= kei_niku[3] &&
                kei_niku[kei_type] * 100 < kei_niku[2] * adjustP) { //打
                kei_type = 2, kei_adjust = adjustP, disp_adjust = " aj2";
              }
              else if (kei_niku[kei_type] * 100 < kei_niku[3] * adjustP) { //弾
                kei_type = 3, kei_adjust = adjustP, disp_adjust = " aj3";
              }
            }
            else {
              kei_type = kei_niku[2] > kei_niku[kei_type] ? 2 : kei_type;
            }
            break;
          default:
            if (adjustP) {
              if (kei_niku[1] >= kei_niku[2] && kei_niku[1] >= kei_niku[3] &&
                kei_niku[kei_type] * kei_hosei < kei_niku[1] * adjustP) { //斬
                kei_type = 1, kei_hosei = 100, kei_adjust = adjustP, disp_adjust = " aj1";
              }
              else if (kei_niku[2] >= kei_niku[1] && kei_niku[2] >= kei_niku[3] &&
                kei_niku[kei_type] * kei_hosei < kei_niku[2] * adjustP) { //打
                kei_type = 2, kei_hosei = 100, kei_adjust = adjustP, disp_adjust = " aj2";
              }
              else if (kei_niku[kei_type] * kei_hosei < kei_niku[3] * adjustP) { //弾
                kei_type = 3, kei_hosei = 100, kei_adjust = adjustP, disp_adjust = " aj3";
              }
            }
            break;
        }
        WP_Motion[i].Hit = "" + disp_adjust;

        //変撃の追加ダメージ
        var deBuff = 10;
        var kei_motIjyouHosei = (WP_Motion[i].IH === undefined) ? 100 : WP_Motion[i].IH;
        if (this.c_hengeki.checked && kei_ijyou) {
          switch (kei_ijyouType) {
            case 1: //毒
              if (kei_motIjyouHosei !== 0) {
                kei_ijyou = floor((kei_ijyou * kei_motIjyouHosei / 100) * kei_hoseiIjyou / 100);
                if (kei_ijyou < 1) {
                  if (wp_type === 9 && WP_Motion[i].N.indexOf("拳舞") !== -1) {
                    if (!((WP_Motion[i].N === WP_Motion[i-1].N) && WP_Motion[i-1].DmgHgk))
                      break; //例外処理、拳舞は蓄積1未満だと保証蓄積無し
                  }
                  kei_ijyou = 1; //保証蓄積
                }
                WP_Motion[i].IP = kei_ijyou;

                if (!WP_Motion[i].C && this.c_kenshou.value.charAt(0) !== "I") { //非剣術、異常剣晶非装填時
                  dmgHgk = floor((kei_ijyou + WEAPON_INFO[wp_type].Hengeki[+this.i_type.value]) * 15 / 10);
                }
                else { //剣術、異常剣晶
                  dmgHgk = floor(kei_ijyou * 15 / 10);
                }
              }
              deBuff = 10;
              break;
            case 2: //麻痺
              if (kei_motIjyouHosei !== 0) {
                kei_ijyou = floor((kei_ijyou * kei_motIjyouHosei / 100) * kei_hoseiIjyou / 100);

                if (kei_ijyou < 1) {
                  if (wp_type === 9 && WP_Motion[i].N.indexOf("拳舞") !== -1) {
                    if (!((WP_Motion[i].N === WP_Motion[i-1].N) && WP_Motion[i-1].DmgHgk))
                      break; //例外処理、拳舞は蓄積1未満だと保証蓄積無し
                  }
                  kei_ijyou = 1; //保証蓄積
                }
                WP_Motion[i].IP = kei_ijyou;

                if (!WP_Motion[i].C && this.c_kenshou.value.charAt(0) !== "I") { //非剣術、異常剣晶非装填時
                  dmgHgk = floor((kei_ijyou + WEAPON_INFO[wp_type].Hengeki[+this.i_type.value]) * 6);
                }
                else { //剣術、異常剣晶
                  dmgHgk = floor(kei_ijyou * 6);
                }
              }
              deBuff = 11, WP_Motion[i].I = "<small>麻</small>";
              break;
            case 3: //睡眠
              if (!WP_Motion[i].C) { //非剣術
                deBuff = 30, WP_Motion[i].I = "<small>眠</small>";
                kei_niku[kei_type] += 10;
              }
              break;
          }
          WP_Motion[i].DmgHgk = dmgHgk;
        }

        //固定切れ味
        if (WP_Motion[i].S) {
          var kei_kirikata = 100;
          if (WP_Motion[i].S > 0) {
            var kei_sharp = SHARP_INFO[WP_Motion[i].S];
          }
        }
        else {
          var kei_kirikata = hosei_kirikata;
          var kei_sharp = SHARP_INFO[+this.c_sharp.value];
        }

        //特殊斬り方補正
        if (WP_Motion[i].KRH && +this.c_sharp.value < 3) {
          kei_kirikata = WP_Motion[i].KRH;
        }
        else if (WP_Motion[i].NCH || WP_Motion[i].R9K) { //中腹補正無効モーション、蹴り
          kei_kirikata = 100;
        }

        var kei_atk = g_attB_noHosei;
        if (WP_Motion[i].R3 || WP_Motion[i].R5) { //大剣フィーチャー、ハンマー瞬撃の攻撃力判定
          kei_atk = g_attB_rslt;
        }

        //ダメージ計算
        if (wp_type === 8 && WP_Motion[i].M) { //打撃砲
          var hosei_houjyutuM = [100,110,120,130][this.c_houjyutu.selectedIndex];

          //フィーチャー時1.5倍
          if (this.c_fw.checked) hosei_houjyutuM *= 15 / 10;

          dmgButu_Cr = dmgButu_NoCr =
            floor(
              floor(
                  WP_Motion[i].M * hosei_houjyutuM / 100)
                  * (mos_class > 1 ? 90 : 100) / 100);
        }
        else {
          //爆撃剣晶装填時、無属性ブレードのバーナー部分会心倍率+0.3
          var hbBakuCri = (wp_type === 8 && +this.c_style.value === 3 && WP_Motion[i].N === "ＨＢ先端"
            && this.c_kenshou.value.substr(0,2) === "BA") ? 30 : 0;

          //モーション値計算
          //ビン（弓だけ）→会心→強撃剣晶→強撃ビン&EX回避補正→剣術2
          if (WP_Motion[i].KH && this.c_kenjyutu.selectedIndex) { //特殊剣術補正モーション
            kei_mot =
              floor(
                floor(
                  floor(
                    WP_Motion[i].P * hosei_kg / 10)
                    * kei_hoseiMot / 100)
                    * 120 / 100);
            kei_motCri =
              floor(
                floor(
                  floor(
                    floor(
                      WP_Motion[i].P * (hosei_criB + hbBakuCri) / 100)
                      * hosei_kg / 10)
                      * kei_hoseiMot / 100)
                      * 120 / 100);
          }
          else if (WP_Motion[i].C) { //剣術補正
            kei_mot =
              floor(
                floor(
                  floor(
                    WP_Motion[i-1].P * hosei_kg / 10)
                    * kei_hoseiMot / 100)
                    * 20 / 100);
            kei_motCri =
              floor(
                floor(
                  floor(
                    floor(
                      WP_Motion[i-1].P * (hosei_criB + hbBakuCri) / 100)
                      * hosei_kg / 10)
                      * kei_hoseiMot / 100)
                      * 20 / 100);
          }
          else if (wp_type === 14) { //弓近接モーション
            kei_mot = floor(WP_Motion[i].P * hosei_binAtUp / 10);
            kei_motCri =
              floor(
                floor(
                  WP_Motion[i].P * hosei_binAtUp / 10)
                  * hosei_criB / 100);
          }
          else {
            kei_mot =
              floor(
                floor(
                  WP_Motion[i].P * hosei_kg / 10)
                  * kei_hoseiMot / 100);
            kei_motCri =
              floor(
                floor(
                  floor(
                    WP_Motion[i].P * (hosei_criB + hbBakuCri) / 100)
                    * hosei_kg / 10)
                    * kei_hoseiMot / 100);
          }

          //超越化補正
          if (this.c_trans.checked) {
            transB = [113, 100];
            for (var n = 1; n < 6; n++) {
              if (kei_nZoku[n])
              transB = [100, 200];
            }
          }

          //攻撃倍率*切れ味補正*斬り方*モーション値*肉質
          dmgButu_NoCr =
            floor(
              (
                (
                  (
                    (
                      (
                        (
                          kei_atk * kei_mot / 100) //モーション値
                          * (wp_type === 14 ? 1000 : kei_sharp.Rate) / 1000) //切れ味補正
                          * kei_kirikata / 100) //切り方補正
                          * kei_hosei / 100) //モーション、武器補正
                          * kei_niku[kei_type] / 100)　//肉質
                          * kei_adjust / 100)　//適応撃補正
                          * deBuff / 10);　//麻痺、睡眠補正

          if (WP_Motion[i].NCr) {
            dmgButu_Cr = dmgButu_NoCr;
          }
          else {
            //会心ダメージ計算
            dmgButu_Cr =
              floor(
                (
                  (
                    (
                      (
                        (
                          (
                            kei_atk * kei_motCri / 100)
                            * (wp_type === 14 ? 1000 : kei_sharp.Rate) / 1000)
                            * kei_kirikata / 100)
                            * kei_hosei / 100)
                            * kei_niku[kei_type] / 100)
                            * kei_adjust / 100)
                            * deBuff / 10);

          }
          //会心100%以上の場合会心ダメージに固定
          if (kaisin_rslt >= 100)
            dmgButu_NoCr = dmgButu_Cr;
          //会心0 or 切れ味黄色の場合非会心ダメージに固定
          if (kaisin_rslt === 0 || +this.c_sharp.value < 3)
            dmgButu_Cr = dmgButu_NoCr;

          //無属性片手強化シジル
          if (wp_type === 1 && this.c_sizilMuUp.checked && +this.z_type.value === 0 && +this.i_type.value === 0 && this.c_kenshou.selectedIndex < 2) {
            var kei_nikuMu = [], kei_typeMu = WP_Motion[i].T;
            //一点突破、痛撃
            for (var nikuCnt = 1; nikuCnt < 4; nikuCnt++) {
              kei_nikuMu[nikuCnt] = buiButu[nikuCnt];
              //巧流強化は一点無効
              if (WP_Motion[i].N.indexOf("巧流") === -1)
                kei_nikuMu[nikuCnt] += itten;

              //痛撃（不退）
              if (!this.c_hutai.checked)
                kei_nikuMu[nikuCnt] += (kei_nikuMu[nikuCnt] >= 30 ? tokkou : 0);
              else
                kei_nikuMu[nikuCnt] += 5;
            }

            if (kei_type === 1) { //斬100％打100％、肉質高い方参照
              kei_typeMu = kei_nikuMu[2] > kei_nikuMu[kei_typeMu] ? 2 : kei_typeMu;
            }
            else {
              kei_typeMu = kei_nikuMu[1] >= kei_nikuMu[kei_typeMu] ? 1 : kei_typeMu;
            }

            var katateMuUp =
                  floor(
                    (
                      (
                        (
                          kei_atk * 25 / 1000)
                          * kei_sharp.MuUp / 10000)
                          * (WP_Motion[i].C ? 20 : 100) / 100)
                          * kei_nikuMu[kei_typeMu] / 100);
            dmgButu_NoCr += katateMuUp;
            dmgButu_Cr += katateMuUp;
          }
          //無属性弓強化シジル（近接）
          else if (wp_type === 14 && this.c_sizilMuUp.checked && +this.z_type.value === 0 && this.c_kobetu1.selectedIndex < 2) {
            var yumiMuUp =
                  floor(
                    (
                      (
                        kei_atk * 15 / 1000)
                        * kei_niku[kei_type] / 100)
                        * kei_adjust / 100);
            dmgButu_NoCr += yumiMuUp;
            dmgButu_Cr += yumiMuUp;
          }
        }

        var kei_motZokuHosei = (WP_Motion[i].ZH === undefined) ? 100 : WP_Motion[i].ZH;

        //属性ダメージ計算
        if (WP_Motion[i].ZP) { //ヒートブレード、属性ブレード
          var hb_zoku = [0,0,0,0,0,0];
          if (wp_type === 8 && +this.c_style.value === 3 && this.c_kenshou.value.charAt(0) === "Z") //属性ブレード
            var hb_zokuType = this.c_kenshou.value.charAt(1)
          else
            var hb_zokuType = WP_Motion[i].ZT;

          var dZoku = 0;
          for (var k = 1; k < 6; k++) {
            hb_zoku[k] = floor(WP_Motion[i].ZP * ZOKU_INFO[hb_zokuType].Rate[k] / 100);
            dZoku +=
              (
                (
                  (
                    (
                      (
                        (
                          (
                            hb_zoku[k] * buiZoku[k] / 100)
                            * zokuUp[k] / 10)
                            * zokuUpA / 10)
                            * catZokuUp / 10)
                            * zokuItem[k] / 10)
                            * lionZoku / 100)
                            * sizilzokuTeni / 10)
                            * sisyuZoku / 100;
          }
        }
        else if (!(wp_type === 14 && (this.c_kobetu1.value === "IJ" || this.c_kobetu1.value === "DA"))) { //異常ビンと打撃ビンは属性無し
          var dZoku = 0;
          for (var n = 1; n < 6; n++) {
            dZoku +=
              (
                (
                  (
                    kei_nZoku[n] * kei_hoseiZoku / 100)
                    * kei_motZokuHosei / 100)
                    * catZokuUp / 10)
                    * buiZoku[n] / 100;
          }
        }
        //超越化属性補正
        dZoku = dZoku * transB[1] / 100;

        if (hornZokuFlg && kei_motZokuHosei && dZoku)
          dmgZoku = floor((dZoku * (wp_type === 14 ? 1000 : kei_sharp.Rate) / 1000) * 11 / 10 + 1);
        else
          dmgZoku = floor(dZoku * (wp_type === 14 ? 1000 : kei_sharp.Rate) / 1000);
        break;

      //-------------------------ガンナーダメージ計算-------------------------
      case 3: //弾
        if (i === 0) {
          WP_Motion[i].DmgButu =
          WP_Motion[i].DmgZoku =
          WP_Motion[i].Dmg = "";
          break;
        }
        var kei_hosei = WP_Motion[0].H, kei_adjust = 100, disp_adjust = "";

        var kei_type = (WP_Motion[0].N.substr(3,2) === "打撃" || (wp_type === 14 && this.c_kobetu1.value === "DA")) ? 2 : WP_Motion[i].T;

        //狙い撃ち
        var kei_hit = ((this.c_sniping.checked || this.c_hutai.checked) && WP_Motion[i].P >= 150) ? 5 : 0;
        var kei_niku = [];

        //適応撃
        if (adjustP) {
          //纏雷･強酸→一点→痛撃→適応撃→狙い撃ち

          //一点突破、痛撃
          for (var nikuCnt = 1; nikuCnt < 4; nikuCnt++) {
            kei_niku[nikuCnt] = buiButu[nikuCnt];

            //一点突破
            kei_niku[nikuCnt] += itten;
            //痛撃（不退）
            if (!this.c_hutai.checked)
              kei_niku[nikuCnt] += (kei_niku[nikuCnt] >= 30 ? tokkou : 0);
            else
              kei_niku[nikuCnt] += 5;
          }

          if (kei_niku[1] >= kei_niku[2] && kei_niku[1] >= kei_niku[3] &&
            kei_niku[kei_type] * 100 < kei_niku[1] * adjustP) { //斬
            kei_type = 1, kei_adjust = adjustP, disp_adjust = " aj1";
          }
          else if (kei_niku[2] >= kei_niku[1] && kei_niku[2] >= kei_niku[3] &&
            kei_niku[kei_type] * 100 < kei_niku[2] * adjustP) { //打
            kei_type = 2, kei_adjust = adjustP, disp_adjust = " aj2";
          }
          else if (kei_niku[kei_type] * 100 < kei_niku[3] * adjustP) { //弾
            kei_type = 3, kei_adjust = adjustP, disp_adjust = " aj3";
          }
        }
        else {
          kei_niku[kei_type] = buiButu[kei_type];
          //狙い撃ち→纏雷･強酸→痛撃→一点
          kei_niku[kei_type] += kei_hit;
          if (!this.c_hutai.checked)
            kei_niku[kei_type] += (kei_niku[kei_type] >= 30 ? tokkou : 0);
          else
            kei_niku[kei_type] += 5;
          kei_niku[kei_type] += itten;
        }
        WP_Motion[i].Hit = "" + disp_adjust;

        var kei_atk = g_attB_noHosei;

        //超越化補正
        if (this.c_trans.checked)
          transB = WP_Motion[0].ZP ? [100, 113] : [113, 100];

        //ダメージ計算
        dmgButu_NoCr =
          floor(
            (
              floor(
                floor(
                  (
                    (
                      (
                        kei_atk * WP_Motion[0].P / 100)
                        * kei_hosei / 100) //JS･タメ補正
                        * hosei_tamaAtUp / 10) //弾強化スキル
                        * (wp_type === 14 ? hosei_binAtUp : 10) / 10) //ビン補正（弓だけ）
                        * WP_Motion[i].P / 100) //クリ距離補正
                        * ((kei_niku[kei_type] * kei_adjust / 100) + (adjustP ? kei_hit : 0)) / 100) //肉質、適応撃&狙い撃ち補正
                        * ((WP_Motion[0].XB && !WP_Motion[i].NXB) ? WP_Motion[0].XB : 1));

        //会心ダメージ計算
        dmgButu_Cr =
          floor(
            (
              floor(
                floor(
                  (
                    (
                      (
                        (
                          kei_atk * WP_Motion[0].P / 100)
                          * hosei_criB / 100)
                          * kei_hosei / 100)
                          * hosei_tamaAtUp / 10)
                          * (wp_type === 14 ? hosei_binAtUp : 10) / 10)
                          * WP_Motion[i].P / 100)
                          * ((kei_niku[kei_type] * kei_adjust / 100) + (adjustP ? kei_hit : 0)) / 100) //肉質、適応撃&狙い撃ち補正
                          * ((WP_Motion[0].XB && !WP_Motion[i].NXB) ? WP_Motion[0].XB : 1));

        //会心100%以上の場合会心ダメージに固定
        if (kaisin_rslt >= 100)
          dmgButu_NoCr = dmgButu_Cr;

        //無属性弓強化シジル
        if (wp_type === 14 && this.c_sizilMuUp.checked && +this.z_type.value === 0 && this.c_kobetu1.selectedIndex < 2) {
          var kei_hoseiMu = WP_Motion[0].HMu;
          var yumiMuUp =
                floor(
                  (
                    (
                      kei_atk * 15 / 1000)
                      * kei_hoseiMu / 100)
                      * ((kei_niku[kei_type] * kei_adjust / 100) + (adjustP ? kei_hit : 0)) / 100); //肉質、適応撃&狙い撃ち補正
          dmgButu_NoCr += yumiMuUp;
          dmgButu_Cr += yumiMuUp;
        }

        var kei_motZokuHosei = (WP_Motion[0].ZH === undefined) ? 100 : WP_Motion[0].ZH;

        //属性ダメージ計算
        var dZoku = 0;
        if (WP_Motion[0].ZP) { //ボウガンの属性計算
          if (WP_Motion[0].N.substr(3,2) === "散弾") {
            for (var k = 1; k < 6; k++) {
              kei_nZoku[k] = floor(WP_Motion[0].ZP * ZOKU_INFO[WP_Motion[0].ZT].Rate[k] / 100);
              dZoku +=
                (
                  (
                    (
                      (
                        (
                          (
                            (
                              (
                                (
                                  kei_nZoku[k] * kei_hoseiZoku / 100)
                                  * kei_motZokuHosei / 100)
                                  * zokuUp[k] / 10)
                                  * zokuUpA / 10)
                                  * catZokuUp / 10)
                                  * zokuItem[k] / 10)
                                  * lionZoku / 100)
                                  * sizilzokuTeni / 10)
                                  * sisyuZoku / 100)
                                  * buiZoku[k] / 100;
            }
          }
          else {
            for (var k = 1; k < 6; k++) {
              kei_nZoku[k] = floor(WP_Motion[0].ZP * ZOKU_INFO[WP_Motion[0].ZT].Rate[k] / 100);
              dZoku +=
                (
                  (
                    (
                      (
                        (
                          (
                            (
                              (
                                (
                                  kei_nZoku[k] * kei_hoseiZoku / 100)
                                  * kei_motZokuHosei / 100)
                                  * zokuUp[k] / 10)
                                  * zokuUpA / 10)
                                  * catZokuUp / 10)
                                  * zokuItem[k] / 10)
                                  * lionZoku / 100)
                                  * sizilzokuTeni / 10)
                                  * sisyuZoku / 100)
                                  * buiZoku[k] / 100;
            }
          }
        }
        else if (wp_type === 14 && this.c_kobetu1.value !== "IJ") { //弓の属性計算
          for (var n = 1; n < 6; n++) {
            dZoku +=
              (
                (
                  (
                    kei_nZoku[n] * kei_hoseiZoku / 100)
                    * kei_motZokuHosei / 100)
                    * catZokuUp / 10)
                    * buiZoku[n] / 100;
          }
        }

        //超越化属性補正
        dZoku = dZoku * transB[1] / 100;

        if (hornZokuFlg && dZoku)
          dmgZoku = floor(dZoku * 11 / 10 + 1);
        else
          dmgZoku = floor(dZoku);
        break;
      case -1: //他
        var hosei_houjyutuM = 100, hosei_houjyutuZ = 100;
        if (WP_Motion[i].DoT !== undefined) {
          dmgButu_Cr = dmgButu_NoCr = WP_Motion[i].DoT;
        }
        else {
          //超越化補正
          if (this.c_trans.checked) {
            if (wp_type < 12)
              transB = WP_Motion[i].ZP ? [100, 200] : [113, 100];
            else
              transB = WP_Motion[i].ZP ? [100, 113] : [113, 100];
          }

        　switch (wp_type) {
            case 6: //狩猟笛（音響攻撃）
              if (WP_Motion[i].M)
                dmgButu_Cr = dmgButu_NoCr = WP_Motion[i].M;
              WP_Motion[i].Hit = "";
              break;

        　  case 8: //ガンランス(砲撃)
              //砲術補正
              hosei_houjyutuM = [100,110,120,130][this.c_houjyutu.selectedIndex];

              //フィーチャー時1.5倍
              if (this.c_fw.checked)
                hosei_houjyutuM *= 15 / 10;

              if (WP_Motion[i].M) { //砲撃爆発ダメージ
                dmgButu_NoCr = floor(WP_Motion[i].M * hosei_houjyutuM / 100);
                if (+this.c_sharp.value < 2 && !this.c_kobetu3.selectedIndex) //非HB、橙ゲージ時砲撃威力75％
                  dmgButu_NoCr = floor(dmgButu_NoCr * 75 / 100);
                if (+this.c_style.value > 1 && this.c_kobetu3.selectedIndex) {
                  switch (WP_Motion[i].N.substr(0,2)) {
                    case "打撃":
                    case "属性":
                    case "連撃":
                      dmgButu_NoCr = floor(dmgButu_NoCr * (mos_class > 1 ? 90 : 100) / 100);
                      break;
                  }
                }
                if (dmgButu_NoCr < 1) dmgButu_NoCr = 1;
              }
              dmgButu_Cr = dmgButu_NoCr;

              if (WP_Motion[i].ZP) { //砲撃属性計算式
                var hn_zoku = [0,0,0,0,0,0];
                var dZoku = 0;

                for (var k = 1; k < 6; k++) {
                  if (WP_Motion[i].ZB) { //属性砲

                    hn_zoku[k] =
                      floor(
                        floor(
                          kei_nZoku[k] * WP_Motion[i].ZB / 100)
                          * (mos_class > 1 ? 90 : 100) / 100);

                    dZoku +=
                      (
                        (
                          (
                            (
                              (
                                (
                                  (
                                    hn_zoku[k] * buiZoku[k] / 100)
                                    * zokuUp[k] / 10)
                                    * zokuUpA / 10)
                                    * catZokuUp / 10)
                                    * zokuItem[k] / 10)
                                    * lionZoku / 100)
                                    * sizilzokuTeni / 10)
                                    * sisyuZoku / 100;
                  }
                  else {　//砲撃火属性部分
                    hn_zoku[k] = (WP_Motion[i].ZP * ZOKU_INFO[WP_Motion[i].ZT].Rate[k] / 100);
                    dZoku += (hn_zoku[k] * buiZoku[k] / 100);
                  }
                }

                //超越化属性補正
                dZoku = dZoku * transB[1] / 100;

                if (hornZokuFlg && WP_Motion[i].ZB)　//属性旋律（属性砲だけ適用）
                  dmgZoku = floor(dZoku * 11 / 10 + 1);
                else
                  dmgZoku = floor(dZoku);

                if (+this.c_sharp.value < 2 && !this.c_kobetu3.selectedIndex) //非HB、橙ゲージ時砲撃威力75％
                  dmgZoku = floor(dmgZoku * 75 / 100);
              }
              WP_Motion[i].Hit = "";
              break;

            case 9: //穿龍棍（穿極・爆発）
            case 14: //弓（爆裂曲射）
              var kei_atk = g_attB_rslt;
              if (wp_type === 14 && bakuFlg === "BA") //曲射爆裂部分の爆撃ビン威力
                dmgButu_NoCr = WP_Motion[0].BA * 2;
              else if (WP_Motion[i].M)
                dmgButu_NoCr = floor(kei_atk * WP_Motion[i].M / 100);

              dmgButu_Cr = dmgButu_NoCr;
              WP_Motion[i].Hit = "";
              break;

            case 12: //ライト（徹甲・拡散）
            case 13: //ヘビィ（圧縮着弾・徹甲・拡散）
              if (+this.c_hiden.value > 11 && (WP_Motion[i].N.substr(0,2) === "排熱" || WP_Motion[i].N.substr(0,2) === "砲熱")) {
                WP_Motion[i].M *= 12 / 10;
                WP_Motion[i].ZP *= 12 / 10;
              }

              dmgButu_NoCr = WP_Motion[i].M;
              dmgButu_Cr = dmgButu_NoCr;

              //属性ダメージ計算
              var kei_motZokuHosei = (WP_Motion[0].ZH === undefined) ? 100 : WP_Motion[0].ZH;
              var dZoku = 0;
              if (WP_Motion[i].ZP) {
                for (var k = 1; k < 6; k++) {
                  kei_nZoku[k] = floor(WP_Motion[i].ZP * ZOKU_INFO[WP_Motion[i].ZT].Rate[k] / 100);
                  dZoku +=
                    (
                      (kei_nZoku[k] * kei_motZokuHosei / 100)
                      * buiZoku[k] / 100);
                }
              }

              //超越化属性補正
              dZoku = dZoku * transB[1] / 100;

              dmgZoku = floor(dZoku);
              WP_Motion[i].Hit = "";
              break;
        　}
        }
        break;
      case "BA": //爆撃
        //超越化補正
        if (this.c_trans.checked) {
          if (wp_type < 12)
            transB = WP_Motion[i].ZP ? [100, 200] : [113, 100];
          else
            transB = WP_Motion[i].ZP ? [100, 113] : [113, 100];
        }

        //貫薙弓は爆撃ビン使用不可
        if (wp_type === 14 && this.c_tame.selectedIndex && (i === 0 || WP_Motion[0].N.substr(0,2) === "貫薙")) {
          WP_Motion[i].DmgButu =
          WP_Motion[i].DmgZoku =
          WP_Motion[i].Dmg = "";
          if (i !== 0) {
            WP_Motion[i].E = 1;
          }
          break;
        }
        if (wp_type === 14) { //爆撃ビン
          dmgButu_NoCr = WP_Motion[0].BA;
          if (WP_Motion[0].N.substr(0,3) === "ｵｰﾗ" && this.c_soko.selectedIndex === 3) {
            dmgButu_NoCr = 275;
          }
          if (WP_Motion[i].NXB) {
            dmgButu_NoCr = dmgButu_NoCr / 10;
          }
          dmgButu_Cr = dmgButu_NoCr;
        }
        else { //爆撃剣
          //会心→剣術の順番でモーション値計算
          if (WP_Motion[i].KH && this.c_kenjyutu.selectedIndex) { //特殊剣術補正モーション
            kei_mot =
              floor(
                floor(
                  WP_Motion[i].P * kei_hoseiMot / 100)
                  * 120 / 100);
            kei_motCri =
              floor(
                floor(
                  floor(
                    WP_Motion[i].P * hosei_criB / 100)
                    * kei_hoseiMot / 100)
                    * 120 / 100);
          }
          else if (WP_Motion[i].C) {
            kei_mot =
              floor(
                floor(
                  WP_Motion[i-1].P * kei_hoseiMot / 100)
                  * 20 / 100);
            kei_motCri =
              floor(
                floor(
                  floor(
                    WP_Motion[i-1].P * hosei_criB / 100)
                    * kei_hoseiMot / 100)
                    * 20 / 100);
          }
          else {
            kei_mot = floor(WP_Motion[i].P * kei_hoseiMot / 100);
            kei_motCri =
              floor(
                floor(
                  WP_Motion[i].P * hosei_criB / 100)
                  * kei_hoseiMot / 100);
          }

          dmgButu_NoCr = floor(kei_mot / 100 * bakuAt);
          dmgButu_Cr = floor(kei_motCri / 100 * bakuAt);
        }

        WP_Motion[i].Hit = "";
        break;
      default:
        alert("エラー");
    }

    if (this.c_hengeki.checked) {
      WP_Motion[i].DmgHgk =
        floor(
          (
            (
              floor(
                dmgHgk * transB[0] / 100
                * kariC / 100)
                * ang / 100)
                * hc / 100)
                * def / 100);

//      if (WP_Motion[i].IP && WP_Motion[i].DmgHgk < 1) WP_Motion[i].DmgHgk = 1; //蓄積値あれば最低保障ダメージ（表示上）
    }

    if (WP_Motion[i].Dmg === "") continue;
    WP_Motion[i].DmgZoku =
      floor(
        (
          (
            floor(
              dmgZoku * kariC / 100)
              * ang / 100)
              * hc / 100)
              * def / 100);
//    if (dmgZoku > 0 && WP_Motion[i].DmgZoku < 1) WP_Motion[i].DmgZoku = 1; //属性ダメージがあれば最低でも１表示

    if (this.k_cri.value === "1" || Math.abs(kaisin_rslt) >= 100) { //会心表示
      WP_Motion[i].DmgButu =
        floor(
          (
            (
              floor(
                dmgButu_Cr * transB[0] / 100
                * kariC / 100)
                * ang / 100)
                * hc / 100)
                * def / 100);
      if (WP_Motion[i].DmgButu < 1) WP_Motion[i].DmgButu = 1; //最低保障物理ダメージ

      WP_Motion[i].Dmg =
        floor(
          (
            (
              floor(
                ((dmgButu_Cr + (dmgHgk ? dmgHgk : 0)) * transB[0] / 100 + dmgZoku) * kariC / 100)
                * ang / 100)
                * hc / 100)
                * def / 100);
      if (WP_Motion[i].Dmg < 1) WP_Motion[i].Dmg = 1; //最低保障ダメージ
    }
    else if (this.k_cri.value === "" || kaisin_rslt === 0) { //非会心表示
      WP_Motion[i].DmgButu =
        floor(
          (
            (
              floor(
                dmgButu_NoCr * transB[0] / 100
                * kariC / 100)
                * ang / 100)
                * hc / 100)
                * def / 100);
      if (WP_Motion[i].DmgButu < 1) WP_Motion[i].DmgButu = 1; //最低保障物理ダメージ

      WP_Motion[i].Dmg =
        floor(
          (
            (
              floor(
                ((dmgButu_NoCr + (dmgHgk ? dmgHgk : 0)) * transB[0] / 100 + dmgZoku) * kariC / 100)
                * ang / 100)
                * hc / 100)
                * def / 100);
      if (WP_Motion[i].Dmg < 1) WP_Motion[i].Dmg = 1; //最低保障ダメージ
    }
    else { //会心平均期待値
      var dmgButu_Avg =
        dmgButu_NoCr +
        (
          (dmgButu_Cr - dmgButu_NoCr)
          * Math.abs(kaisin_rslt > 100 ? 100 : kaisin_rslt) / 100);

      WP_Motion[i].DmgButu =
        +(
          (
            (
              (dmgButu_Avg * transB[0] / 100
              * kariC / 100)
              * ang / 100)
              * hc / 100)
              * def / 100).toFixed(2);
      if (WP_Motion[i].DmgButu < 1) WP_Motion[i].DmgButu = 1; //最低保障物理ダメージ

      WP_Motion[i].Dmg =
        +(
          (
            (
              (((dmgButu_Avg + (dmgHgk ? dmgHgk : 0)) * transB[0] / 100 + dmgZoku) * kariC / 100)
              * ang / 100)
              * hc / 100)
              * def / 100).toFixed(2);
      if (WP_Motion[i].Dmg < 1) WP_Motion[i].Dmg = 1; //最低保障ダメージ
    }
  }

  var list = this.damage;
  var damage_data = list.getElementsByTagName("tbody")[0];
  var combine = this.k_motion.selectedIndex;
  var dmgSum = this.k_gou.selectedIndex;

  var eleTr = document.createElement("tr");
  damage_data.appendChild(eleTr);
  var eleTd = document.createElement("td");
  eleTr.appendChild(eleTd);
  eleTd.innerHTML = bui[buiCnt][0];

  //モーション表示
  for(var i = 0, t = "", MLen = WP_Motion.length; i < MLen; i++){
    if(!combine) { //結合
      if (WP_Motion[i].X) {
        WP_Motion[i].DmgButu *= WP_Motion[i].X;
        WP_Motion[i].DmgZoku *= WP_Motion[i].X;
        WP_Motion[i].DmgHgk *= WP_Motion[i].X;
        WP_Motion[i].Dmg *= WP_Motion[i].X;
      }
      if (i > 0 && WP_Motion[i-1].N === WP_Motion[i].N) {
        if (WP_Motion[i].P === undefined && !WP_Motion[i].M) continue;
        WP_Motion[i].DmgButu += WP_Motion[i-1].DmgButu;
        WP_Motion[i].DmgZoku += WP_Motion[i-1].DmgZoku;
        WP_Motion[i].DmgHgk += WP_Motion[i-1].DmgHgk;
        WP_Motion[i].Dmg += WP_Motion[i-1].Dmg;
        list.rows[buiCnt+2].deleteCell(-1);
      }
      if (this.k_cri.value === "2" && WP_Motion[i].Dmg !== "") { //小数点誤差を無くす
        WP_Motion[i].DmgButu = +WP_Motion[i].DmgButu.toFixed(2);
        WP_Motion[i].Dmg = +WP_Motion[i].Dmg.toFixed(2);
        if (kaisin_rslt >= 100 || kaisin_rslt === 0) {
          WP_Motion[i].DmgButu = floor(WP_Motion[i].DmgButu);
          WP_Motion[i].Dmg = floor(WP_Motion[i].Dmg);
        }
      }
    }

    eleTd = document.createElement("td");
    if (WP_Motion[i].P === undefined && (!WP_Motion[i].M && WP_Motion[i].DoT === undefined)) continue;
    eleTr.appendChild(eleTd);
    if (WP_Motion[i].E) {
      eleTd.innerHTML = "-";
    }
    else {
      if (!dmgSum)
        eleTd.innerHTML = WP_Motion[i].Dmg
        + (WP_Motion[i].I ? WP_Motion[i].I : "");
      else
        eleTd.innerHTML = WP_Motion[i].DmgButu
        + (WP_Motion[i].I ? WP_Motion[i].I : "")
        + (WP_Motion[i].DmgHgk ? "+" + WP_Motion[i].DmgHgk + "<small>変</small>" : "")
        + (WP_Motion[i].DmgZoku ? (WP_Motion[i].DmgZoku > 0 ? "+" : "") + WP_Motion[i].DmgZoku : "");
    }
      eleTd.className = WP_Motion[i].Hit;
  }
}
}

function getVal(id) {
  return document.getElementById(id).value;
}

function setIHtml(id, val) {
  document.getElementById(id).innerHTML = val;
}

function floor(val) {
  return Math.floor(val);
}

function ceil(val) {
  return Math.ceil(val);
}

function display(id, val, type) {
  if (val != 0) {
    document.getElementById(id).style.display = type;
  }
  else {
    document.getElementById(id).style.display = "none";
  }
}

function disabled(id, type) {
    document.getElementById(id).disabled = type;
}

function resetData(id){
  for (var i = document.getElementById(id).rows.length-1; i > 0; i--) {
    document.getElementById(id).deleteRow(i);
  }
}

function bulNum(val) {
  if (val > 0) {
    return val;
  }
  else if (val < 0) {
    return ("<span style=\"color:red;\">" + Math.abs(val) + "</span>");
  }
  else {
    return "-";
  }
};

function setInit() {
  display("z_typeBox", 1, "");  //属性選択、初期ON
  display("i_typeBox", 1, "");  //異常選択、初期ON
  display("w_zokuBox", 0, "");  //属性値入力、初期OFF
  display("w_ijyouBox", 0, ""); //異常値値入力、初期OFF
  display("h_zokuBox", 1, "");  //表示属性値、初期ON
  display("g_zokuBox", 1, "");  //表示内部属性、初期ON
  display("h_ijyouBox", 1, ""); //表示異常値、初期ON
  display("g_ijyouBox", 1, ""); //表示異常蓄積値、初期ON

  disabled("c_houjyutu", true); //砲術、初期OFF
  disabled("c_taijyutu", true); //体術、初期OFF
  disabled("c_zeigeki", true);  //消費特効、初期OFF
  disabled("c_kenjyutu", true); //剣術、初期OFF
  disabled("c_tameAtUp", true); //溜め威力、初期OFF
  disabled("c_kouryuUp", true); //巧流強化、初期OFF
  disabled("c_tamaAtUp", true); //弾強化、初期OFF
  disabled("c_sniping", true);  //狙い撃ち、初期OFF
  disabled("c_kuugeki", true);  //空隙、初期OFF

  disabled("c_geki", true);     //劇物、初期OFF
  disabled("c_hengeki", true);  //異常追撃、初期OFF

  disabled("c_sizilMuUp", true);  //無属性強化、初期OFF
  disabled("c_sizilMotUp", true); //技強化シジル、初期OFF
  disabled("c_sizilMotCng", true);  //技変化シジル、初期OFF
  disabled("c_sizilReachUp", true); //リーチUPシジル、初期OFF

  this.c_houjyutu.selectedIndex =
  this.c_taijyutu.selectedIndex =
  this.c_tameAtUp.selectedIndex = 0;
//  this.c_reflect.selectedIndex = 0;

  this.c_blessing.checked =
  this.c_sizilMotUp.checked =
  this.c_sizilMotCng.checked =
  this.c_sizilReachUp.checked =
  this.c_sizilMuUp.checked = false;
}

function initKobetu () {
  display("c_kobetu1", 0, "");
  disabled("c_kobetu1", false);
  this.kobetu1.firstChild.nodeValue = "";
  this.c_kobetu1.length = 1;
  this.c_kobetu1.options[0].text = "無し";

  display("c_kobetu2", 0, "");
  disabled("c_kobetu2", false);
  this.kobetu2.firstChild.nodeValue = "";
  this.c_kobetu2.length = 1;
  this.c_kobetu2.options[0].text = "無し";

  display("c_kobetu3", 0, "");
  disabled("c_kobetu3", false);
  this.kobetu3.firstChild.nodeValue = "";
  this.c_kobetu3.length = 1;
  this.c_kobetu3.options[0].text = "無し";

  display("shelling", 0, "");
  this.shelling1.firstChild.nodeValue = "";
  this.shellingType.length = 1;
  this.shellingType.options[0].text = "無し";

  this.shelling2.firstChild.nodeValue = "";
  this.shellingLv.length = 1;
  this.shellingLv.options[0].text = "無し";
}

change_event = function(id){
  switch (id) {
    case "c_sharp":
    case "c_kenshou":
    case "c_gohu":
    case "c_tume":
    case "c_mesi":
    case "c_tane":
    case "c_honki":
    case "c_hornAtUp":
    case "c_hornZokuUp":
    case "c_hornIjyouUp":
    case "c_attUp":
    case "c_soko":
    case "c_vampire":
    case "c_kougeki":
    case "c_mousin":
    case "c_siri":
    case "c_tonfaBuff":
    case "c_lion":
    case "c_criUp":
    case "c_senten":
    case "c_garou":
    case "c_maku":
    case "c_sihuku":
    case "c_zeigeki":
    case "c_karyudo":
    case "c_katsu":
    case "c_kizuna":
    case "c_touha":
    case "c_sien":
    case "c_sendou":
    case "c_wolf":
    case "c_attUpL":
    case "c_attUpLSP":
    case "c_singeki":
    case "c_haisui":
    case "c_armor":
    case "c_armorGun":
    case "c_srCri":
    case "c_srAtt":
    case "c_heatupG":
    case "c_attLmt":
    case "c_kyokuAtt":
    case "c_kyokuItemAtt":
    case "c_zokuUpF":
    case "c_zokuUpW":
    case "c_zokuUpT":
    case "c_zokuUpD":
    case "c_zokuUpI":
    case "c_zokuUpA":
    case "c_geki":
    case "c_hengeki":
    case "c_ijyouUp":
    case "c_pigIjyouUp":
    case "w_att":
    case "w_zoku":
    case "w_ijyou":
    case "z_type":
    case "i_type":
    case "w_kaisin":
    case "i_sizilatt":
    case "i_sizilzoku":
    case "i_sizilkaisin":
    case "i_sizilwpUp":
    case "i_sizilattTeni":
    case "i_sizilzokuTeni":
    case "i_sizilattRng":
    case "i_sizilattRngN":
    case "i_sizilzokuRng":
    case "i_sizilzokuRngN":
    case "i_sizilkaisinRng":
    case "i_sizilkaisinRngN":
    case "c_sizilReachUp":
    case "c_sizilIjyouUp":
    case "c_sizilIjyouUpRng":
    case "c_catAtt":
    case "c_catKaisin":
    case "c_catCheer":
    case "c_catKizuna":
    case "c_catZokuUp":
    case "c_catActAtk":
      calcAtk(+this.w_type.value);
      break;
    case "c_sen":
      issen_bk = this.c_sen.selectedIndex;
      calcAtk(+this.w_type.value);
      break;
    case "c_hit":
      tokkou_bk = this.c_hit.selectedIndex;
      break;
    case "c_kiri":
    case "c_kariC":
    case "c_trans":
    case "c_adjust":
    case "c_zokuHit":
    case "c_itten":
    case "c_tenrai":
    case "c_acid":
    case "c_sonicP":
    case "c_sonicZ":
    case "c_kenjyutu":
    case "c_houjyutu":
    case "c_tameAtUp":
    case "c_taijyutu":
    case "c_reflect":
    case "c_iceField":
    case "c_kouryuUp":
    case "c_tamaAtUp":
    case "c_sniping":
    case "c_kuugeki":
    case "c_sizilMuUp":
    case "c_sizilMotUp":
    case "c_tama":
    case "c_shoot":
    case "c_ya":
    case "c_hrYumi":
    case "m_angS":
    case "m_angL":
    case "m_hcS":
    case "m_defS":
    case "m_defL":
    case "k_motion":
    case "k_cri":
    case "k_gou":
      break;
    case "c_tame":
      cngKobetu(+this.w_type.value);
      break;
    case "c_hutai":
      setSkill(+this.w_type.value, "attUp",  this.c_attUp.selectedIndex);
      calcAtk(+this.w_type.value);
      break;
    case "c_ItemZoku":
      setSkill(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_fw":
      fw_bk = this.c_fw.checked;
      setSkill(+this.w_type.value, "reflect", this.c_reflect.selectedIndex);
      calcAtk(+this.w_type.value);
      break;
    case "w_type":
    case "c_style":
      if (id === "w_type") {
        if (this.w_type.value)
          this.sizilwpUp.firstChild.nodeValue = WEAPON_INFO[+this.w_type.value].Name + "強化：";
        if (+this.w_type.value === 11) this.c_style.selectedIndex = 3;
        wp_search(+this.w_type.value);
        cngWeapon(+this.w_type.value);
        prev();
      }
      setSkill(+this.w_type.value);
      setWeapon(+this.w_type.value);
      cngKobetu(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "s_wp":
    case "c_gunLv":
    case "c_barrel":
    case "c_blessing":
    case "c_armorKen":
      if ((id === "s_wp" && s_wp_bk && getVal("s_wp") !== s_wp_bk) || (id === "c_blessing" && this.c_blessing.checked === false)) prev();
      cngWeapon(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_kobetu1":
      if (+this.w_type.value === 2 || +this.w_type.value === 12)
        cngKobetu(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_hiden":
    case "c_kobetu2":
    case "c_kobetu3":
    case "shellingType":
    case "shellingLv":
      if (id === "c_hiden") hiden_bk = this.c_hiden.selectedIndex;
      cngKobetu(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_sizilMotCng":
      cngGunMotion(+this.w_type.value);
      break;
    case "n_inputSelf":
    case "n_inputList":
      mos_class = this.n_inputSelf.checked ? +this.m_classS.value : +this.m_classL.value;
      this.n_inputList.checked = this.n_inputSelf.checked ? false : true;
      nikuInputCng();
      cngMos();
      cngNiku();
      cngWeapon(+this.w_type.value);
      setSkill(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "m_classS":
    case "m_classL":
    case "m_enemy":
      mos_class = this.n_inputSelf.checked ? +this.m_classS.value : +this.m_classL.value;
      if (id === "m_classL") cngMosList();
      cngMos();
      cngNiku();
      cngWeapon(+this.w_type.value);
      setSkill(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_nikuZan":
    case "c_nikuDa":
    case "c_nikuTama":
    case "c_nikuF":
    case "c_nikuW":
    case "c_nikuT":
    case "c_nikuD":
    case "c_nikuI":
      cngMos();
      cngNiku();
      break;
    case "m_status":
      cngNiku();
      break;
    case "m_hcL":
      this.enemy_hc = this.m_hcL.selectedIndex;
      cngHcAng();
      cngWeapon(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_reach0":
    case "c_reach1":
    case "c_reach2":
    case "c_reach3":
    case "c_reach4":
    case "c_reach5":
    case "c_class0":
    case "c_class1":
    case "c_class2":
    case "c_class3":
    case "c_class4":
    case "c_class5":
    case "c_class6":
    case "c_class7":
    case "c_rep2":
    case "c_repm":
    case "c_repd":
    case "c_repi":
    case "c_repe":
    case "c_repr":
    case "c_rep3":
    case "c_repg":
    case "c_repk":
    case "c_repp":
    case "c_rep5":
      document.getElementById(id).style.borderStyle = document.getElementById(id).style.borderStyle === "" ? "inset" : "";
      document.getElementById(id).style.backgroundColor = document.getElementById(id).style.backgroundColor === "" ? "gray" : "";
      wp_search(+this.w_type.value);
      break;
    case "d_specCng":
      document.getElementById(id).style.borderStyle = document.getElementById(id).style.borderStyle === "" ? "inset" : "";
      document.getElementById(id).style.backgroundColor = document.getElementById(id).style.backgroundColor === "" ? "gray" : "";
      specCng();
      setWpSpec(+this.w_type.value);
      break;
    case "s_srt":
    case "s_rare":
    case "s_slot":
    case "s_zoku_ken":
    case "s_ijyou":
    case "s_shelling":
    case "s_music":
    case "s_axeBin":
    case "s_zoku_yumi":
    case "s_tame":
    case "s_ya":
    case "s_kyoku":
    case "s_bin":
    case "s_tama1":
    case "s_tama2":
    case "s_reload":
    case "s_kick":
    case "s_teni":
      wp_search(+this.w_type.value);
      break;
    case "c_sinkaLv":
      cngSinkaLV(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
    case "c_GclassLv":
      cngGLV(+this.w_type.value);
      calcAtk(+this.w_type.value);
      break;
  }
  setMotion(+this.w_type.value);
  calcDmg(+this.w_type.value);
}

function nikuInputCng() {
  if (this.n_inputSelf.checked) {
    this.selfInput.style.display = "inline-block";
    this.listInput.style.display = "none"
    this.enemy_gou = this.m_classS.selectedIndex === 1;
  }
  else {
    this.listInput.style.display = "inline-block"
    this.selfInput.style.display = "none";
    this.enemy_gou = false;
  }
}

//-------------------------設定取得＆保存-------------------------
function getSettingData() {
  var input = document.getElementsByTagName("input");
  var select = document.getElementsByTagName("select");
  var checkbox = [], inputNum = [], options = [];
  var settingData = [];
  for (var i = 0; i < input.length; i++) {
    if (input[i].type === "checkbox" || input[i].type === "radio") {
      settingData = settingData.concat([{Id:input[i].id, check:input[i].checked}]);
    }
    else if (input[i].type === "number") {
      settingData = settingData.concat([{Id:input[i].id, val:input[i].value}]);
    }
    else if (input[i].type === "button" && input[i].id !== "d_specCng") {
      settingData = settingData.concat([{Id:input[i].id, bgc:input[i].style.backgroundColor, bs:input[i].style.borderStyle}]);
    }
  }
  for (var i = 0; i < select.length; i++) {
    settingData = settingData.concat([{Id:select[i].id, Idx:select[i].selectedIndex}]);
  }
  saveData(settingData);
}

//-------------------------設定保存-------------------------
function saveData(data) {
  let blob = new Blob([JSON.stringify(data)], {type : 'application/json'});
  let a = document.createElement("a");
  a.href = window.URL.createObjectURL(blob);

  a.download = (function() {
    var fn = window.prompt("ファイル名入れてください（デフォ名：setting.txt）","");
    if (fn === null || fn === "")
      return "setting.txt";
    else
      return fn + ".txt";
  })();
  document.body.appendChild(a);
  a.click();
}

//-------------------------設定の読み込み-------------------------
function loadData() {
  let fileList = this.d_load.files;
  var reader = new FileReader();
  reader.readAsText(fileList[0]);
  reader.addEventListener('load', function() {
    var setting = JSON.parse(reader.result);
    var t = "";

    for (var i = 0; i < setting.length; i++) {
      let Id = setting[i].Id;
      switch (Id) {
        case "m_classS":
        case "m_classL":
        case "w_type":
        case "c_style":
          document.getElementById(Id).selectedIndex = setting[i].Idx;
          change_event(Id);
          t += Id + ",";
          break;
        case "n_inputSelf":
        case "n_inputList":
          document.getElementById(Id).checked = setting[i].check;
          change_event(Id);
          t += Id + ",";
          break;
      }
    }
    //モンスターデータの読込
    for (var i = 0; i < setting.length; i++) {
      let Id = setting[i].Id;
      if (Id === "m_enemy") {
        document.getElementById(Id).selectedIndex = setting[i].Idx;
        change_event(Id);
        t += Id + ",";
        break;
      }
    }
    //武器情報の読込
    for (var i = 0; i < setting.length; i++) {
      let Id = setting[i].Id;
      switch (Id) {
        case "c_reach0":
        case "c_reach1":
        case "c_reach2":
        case "c_reach3":
        case "c_reach4":
        case "c_reach5":
        case "c_class0":
        case "c_class1":
        case "c_class2":
        case "c_class3":
        case "c_class4":
        case "c_class5":
        case "c_class6":
        case "c_class7":
        case "c_rep2":
        case "c_repm":
        case "c_repd":
        case "c_repi":
        case "c_repe":
        case "c_repr":
        case "c_rep3":
        case "c_repg":
        case "c_repk":
        case "c_repp":
        case "c_rep5":
          document.getElementById(Id).style.backgroundColor = setting[i].bgc;
          document.getElementById(Id).style.borderStyle = setting[i].bs;
          t += Id + ",";
          break;
        case "s_srt":
        case "s_rare":
        case "s_slot":
        case "s_zoku_ken":
        case "s_ijyou":
        case "s_shelling":
        case "s_music":
        case "s_axeBin":
        case "s_zoku_yumi":
        case "s_tame":
        case "s_ya":
        case "s_kyoku":
        case "s_bin":
        case "s_tama1":
        case "s_tama2":
        case "s_reload":
        case "s_kick":
        case "s_teni":
          document.getElementById(Id).selectedIndex = setting[i].Idx;
          t += Id + ",";
          break;
      }
    }
    wp_search(+getVal("w_type"));
    for (var i = 0; i < setting.length; i++) {
      let Id = setting[i].Id;
      if (Id === "s_wp") {
        document.getElementById(Id).selectedIndex = setting[i].Idx;
        change_event(Id);
        t += Id + ",";
        break;
      }
    }
    for (var i = 0; i < setting.length; i++) {
      let Id = setting[i].Id;
      switch (Id) {
        case "c_gunLv":
        case "c_sinkaLv":
        case "c_GclassLv":
          document.getElementById(Id).selectedIndex = setting[i].Idx;
          t += Id + ",";
          break;
        case "c_barrel":
        case "c_blessing":
          document.getElementById(Id).checked = setting[i].check;
          t += Id + ",";
          break;
      }
    }
    cngWeapon(+getVal("w_type"));

    for (var i = 0; i < setting.length; i++) {
      let Id = setting[i].Id;

      if (t.indexOf(Id) === -1) {
        switch (Object.keys(setting[i])[1]) {
          case "Idx":
            document.getElementById(Id).selectedIndex = setting[i].Idx;
            change_event(Id);
            break;
          case "check":
            document.getElementById(Id).checked = setting[i].check;
            change_event(Id);
            break;
          case "val":
            document.getElementById(Id).value = setting[i].val;
            change_event(Id);
            break;
        }
      }
    }
  })
  this.d_load.value = null;
}

//-------------------------モンスターリスト変更-------------------------
function cngMosList() {
  var thead = [
    ["大型","古龍","大討伐","中型","小型"],
    ["大型","剛種","遷悠","大討伐","中型","小型"],
    ["大型","極征","遷悠","狩煉道･天廊","大討伐","中型","小型"],
    ["大型"]][mos_class];
  var bk_m_enemy = this.m_enemy.value;
  this.m_status.selectedIndex =
  this.m_angL.selectedIndex =
  this.m_hcL.selectedIndex =
  this.m_defL.selectedIndex = 0;
  this.enemy_hc = false;

  var df = document.createDocumentFragment(), o = document.createElement("option");
  for (var i = 0; i < thead.length; i++) {
    o.setAttribute("value", "");
    df.appendChild(o.cloneNode(false));
    df.lastChild.appendChild(document.createTextNode("－－－－" + thead[i] + "－－－－"));
    df.lastChild.style.backgroundColor = "aquamarine";
    for (var j = 0, n = "", mos_len = mos_list[mos_class][i].length; j < mos_len; j++) {
      n = mos_list[mos_class][i][j];
      o.setAttribute("value", n);
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode(n));
    }
  }
  this.m_enemy.length = 0;
  this.m_enemy.appendChild(df);
  this.m_enemy.value = bk_m_enemy;
  if (!this.m_enemy.value) this.m_enemy.selectedIndex = 0;
}
//-------------------------モンスター変更-------------------------
function cngMos() {
  if (this.n_inputSelf.checked) {
    this.enemy_gou = this.m_classS.selectedIndex === 1;
    this.enemy_hc = false;
    return;
  }
  if (!this.m_enemy.value) return;
  var mons = mos_data[this.m_enemy.value][this.m_classL.selectedIndex], t = "", u = "";
  var df = document.createDocumentFragment(),o = document.createElement("option");

  //状態
  for (var i = 0,　m = mons[1].split("|"),　max = m.length; i < max ; i++) {
    t = m[i].split("I");
    o.setAttribute("value", t[1]);
    df.appendChild(o.cloneNode(false));
    df.lastChild.appendChild(document.createTextNode(t[0]))
  }
  this.m_status.length = 0;
  this.m_status.appendChild(df);
  this.m_status.disabled = this.m_status.length === 1;

  //怒り
  if (mons[3]) {
    for (var i = 0,　m = mons[3].split(","),　max = m.length; i < max ; i++) {
      t = m[i].split(":");
      o.setAttribute("value", t[1]);
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode(t[0] + "：" + (t[1]/100).toFixed(2)))
    }
  }
  this.m_angL.length = 1;
  this.m_angL.appendChild(df);
  this.m_angL.disabled = this.m_angL.length === 1;

  //HC
  if (mons[4]) {
    for (var i = 0,　m = mons[4].split("I"),　max = m.length; i < max ; i++) {
      t = m[i].split(":");
      u = t[1].split(",");
      o.setAttribute("value", u[0]);
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode(t[0] + "：" + (u[0]/100).toFixed(2)))
    }
  }
  this.m_hcL.length = 1;
  this.m_hcL.appendChild(df);
  this.m_hcL.disabled = this.m_hcL.length === 1;
  this.enemy_hc = false;

  //全体防御率
  if (mons[5]) {
    for (var i = 0,　m = mons[5].split(","),　max = m.length; i < max ; i++) {
      t = m[i].split(":");
      o.setAttribute("value", t[1]);
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode(t[0] + "：" + (t[1]/100).toFixed(2)))
    }
  }
  this.m_defL.length = 1;
  this.m_defL.appendChild(df);
  this.m_defL.disabled = this.m_defL.length === 1;

  this.enemy_gou = mons[0] === "剛種" || mons[0] === "覇種" || this.m_classL.selectedIndex > 1;
}

function cngNiku() {
  if (this.n_inputList.checked && !this.m_enemy.value) return;

  bui = [];
  for (var i = this.niku.rows.length-1; i > 1; i--) { //テーブルクリア
    this.niku.deleteRow(i);
  }
  //-------------------------肉質データをテーブルに記入-------------------------
  if (this.n_inputSelf.checked) {
    bui[0] = ["入力値", this.c_nikuZan.value, this.c_nikuDa.value, this.c_nikuTama.value, this.c_nikuF.value, this.c_nikuW.value, this.c_nikuT.value, this.c_nikuD.value, this.c_nikuI.value];
    let eleTr = document.createElement("tr");
    this.niku.appendChild(eleTr);
    for (var j = 0; j < bui[0].length; j++) {
      let eleTd = document.createElement("td");
      eleTr.appendChild(eleTd);
      eleTd.innerHTML = bui[0][j];
    }
  }
  else {
    bui = this.m_status.value.split(":");
    for (var i = 0; i < bui.length; i++) {
      let eleTr = document.createElement("tr");
      this.niku.appendChild(eleTr);

      bui[i] = bui[i].split(",");
      for (var j = 0; j < bui[i].length; j++) {
        let eleTd = document.createElement("td");
        eleTr.appendChild(eleTd);
        eleTd.innerHTML = bui[i][j];
      }
    }
    //怒り固定
    var mons = mos_data[this.m_enemy.value][this.m_classL.selectedIndex];
    if (mons[2]) {
    	var ang = mons[2].split(",")[this.m_status.selectedIndex];
      if (ang) {
        this.m_angL.selectedIndex = ang;
        this.m_angL.disabled = true;
      }
      else {
        this.m_angL.disabled = false;
      }
    }
  }
}

//-------------------------HC補正変更-------------------------
function cngHcAng() {
  if (!this.n_inputList.checked || !this.m_enemy.value) return;
  var mons = mos_data[this.m_enemy.value][this.m_classL.selectedIndex], m = "", t = "", u = "";

  //HC
  if (mons[4] && this.m_hcL.selectedIndex) //HC選択時
    m = mons[4].split("I"), t = m[this.m_hcL.selectedIndex-1].split(":"), u = t[1].split(",");

  if (mons[3]) {
    for (var i = 0,　m = mons[3].split(","),　max = m.length; i < max ; i++) {
      t = m[i].split(":");
      if (this.m_hcL.selectedIndex) {
        this.m_angL.options[i+1].value = t[1] * u[1] / 100;
        this.m_angL.options[i+1].text = t[0] + "：" + (t[1] * u[1] / 10000).toFixed(2)
      }
      else {
        this.m_angL.options[i+1].value = t[1];
        this.m_angL.options[i+1].text = t[0] + "：" + (t[1] / 100).toFixed(2)
      }
    }
  }
}
//-------------------------武器検索-------------------------
function wp_search(wp_type) {
  if (wp_type === 0) {
    this.s_wp.length = 1;
    return;
  }
  var list = [], cnt = 0;
  var ck_sort = +this.s_srt.value, lm_rare = +this.s_rare.value, lm_slot = +this.s_slot.value;

  //データ展開
  var eq_list = eq_data[WEAPON_INFO[wp_type].Id];
  for (var eq_id in eq_list) {
    if (typeof eq_list[eq_id] !== "string") break;
    eq_list[eq_id] = eq_list[eq_id].split(",");
  }
  eq_list = sinka_data[WEAPON_INFO[wp_type].Id];
  for (var i = 0; i < eq_list.length; i++) {
    if (typeof eq_list[i] !== "string") break;
    eq_list[i] = eq_list[i].split(",");
    for (var j = 0, w = eq_list[i]; j < 100; w[j] = w[j++].split("."));
  }
  setLvAtt(wp_type);
  var rep = "1-1t";
  //生産種類
  if (!this.c_repe.style.backgroundColor) rep += "1e";	//イベント
  if (!this.c_repi.style.backgroundColor) rep += "1i";	//韋駄天
  if (!this.c_repd.style.backgroundColor) rep += "1d";	//パローネ
  if (!this.c_repr.style.backgroundColor) rep += "1r";	//狩衛戦
  if (!this.c_repd.style.backgroundColor && !this.c_repr.style.backgroundColor) rep += "1dr";	//パローネ+狩衛戦
  if (!this.c_repe.style.backgroundColor && !this.c_repr.style.backgroundColor) rep += "1er";	//イベント+狩衛戦
  if (!this.c_rep2.style.backgroundColor) rep += "2-";	//猟団
  if (!this.c_rep2.style.backgroundColor && !this.c_repd.style.backgroundColor) rep += "2r";	//猟団+狩衛戦
  if (!this.c_repm.style.backgroundColor) rep += "2m";	//狩人祭
  if (!this.c_repm.style.backgroundColor && !this.c_repd.style.backgroundColor) rep += "2mr";	//狩人祭+狩衛戦
  if (!this.c_rep3.style.backgroundColor) { //カフェ
    rep += "3-";
    if (!this.c_repi.style.backgroundColor) rep += "3i";
  }
  if (!this.c_repg.style.backgroundColor) rep += "4g";	//ガチャ
  if (!this.c_repk.style.backgroundColor) rep += "4k";	//キット
  if (!this.c_rep5.style.backgroundColor) rep += "5-";	//特典
  if (!this.c_repp.style.backgroundColor) rep += "5p";	//パッケ

  var cls = "", cls_hr = false;
  //武器種類
  if (!this.c_class0.style.backgroundColor) {
    cls += "ABC";	//HR
    cls_hr = true;
  }
  if (!this.c_class1.style.backgroundColor) cls += "DGHIJO";	//剛種
  if (!this.c_class2.style.backgroundColor) cls += "FQU";	//進化
  if (!this.c_class3.style.backgroundColor) cls += "KL";	//G級
  if (!this.c_class4.style.backgroundColor) cls += "MR";	//G技巧
  if (!this.c_class5.style.backgroundColor) cls += "S";	//祈歌
  if (!this.c_class6.style.backgroundColor) cls += "P";	//遷悠
  if (!this.c_class7.style.backgroundColor) cls += "T";	//辿異

  //個別検索条件設定
  var check_F = function(){return true};
  var t = "", c1 = I_aZOKU, c2 = I_aZYOU, c3 = I_aGAUGE;
  switch (wp_type) {
    case 12:
    case 13:
      c1 = +this.s_tama1.value + I_aGUN, c2 = +this.s_tama2.value + I_aGUN, c3 = I_aRELO;
      if (this.s_tama1.value) t = "e_tama1 > 0";
      if (this.s_tama2.value) t += (t ? " && " : "") + "e_tama2 > 0";
      if (this.s_reload.value) t += (t ? " && " : "") + "+e_reload >= " + this.s_reload.value;
      if (this.s_kick.value) t += (t ? " && " : "") + "+e_kick >= " + this.s_kick.value;
      if (this.s_teni.value) t += (t ? " && " : "") + "e_teni.indexOf(\"" + this.s_teni.value + "\") !== -1";
      if (t) eval("check_F = function(e_tama1, e_tama2, e_reload, e_kick, e_teni){return " + t + ";}");
      break;
    case 14:
      c2 = I_aKYOKUSYA;
      this.s_zoku_ken.selectedIndex = this.s_zoku_yumi.value === "99" ? 0 : this.s_zoku_yumi.selectedIndex;
      if (this.s_zoku_yumi.value !== "-") t = "+e_zoku === " + this.s_zoku_yumi.value;
      if (this.s_kyoku.value) t += (t ? "&&" : "") + "+e_kyoku === " + this.s_kyoku.value;
      if (this.s_ya.value) {
        t += (t ? "&&" : "") + "e_ya.split(\":\")[" + (+this.s_tame.value-1) + "].indexOf(\"" + this.s_ya.value + "\") !== -1";
      }

      if (this.s_bin.value) t += (t ? "&&" : "") + "e_bin.indexOf(\"" + this.s_bin.value + "\") !== -1";
      if (this.s_teni.value) t += (t ? " && " : "") + "e_teni.indexOf(\"" + this.s_teni.value + "\") !== -1";
      if (t) eval("check_F = function(e_zoku, e_kyoku, e_ya, e_bin, e_teni){return " + t + ";}");
      break;
    default:
      this.s_zoku_yumi.selectedIndex = this.s_zoku_ken.selectedIndex;
      if (this.s_zoku_ken.value !== "-") t = "+e_zoku === " + this.s_zoku_yumi.value;
      if (this.s_ijyou.value !== "-") t += (t ? "&&" : "") + "+e_ijyou === " + this.s_ijyou.value;
      switch (wp_type) {
        case 6: //狩猟笛
          if (this.s_music.value) t += (t ? " && " : "") + "e_sub === \"" + this.s_music.value + "\"";
          break;
        case 8: //ガンランス
          if (this.s_shelling.value) t += (t ? " && " : "") + "e_sub.indexOf(\"" + this.s_shelling.value + "\") !== -1";
          break;
        case 10: //スラアクF
          if (this.s_axeBin.value) t += (t ? " && " : "") + "e_sub.indexOf(\"" + this.s_axeBin.value + "\") !== -1";
          break;
        default:
          var e = this.s_reach.getElementsByTagName("input");
          for (var i = 0; i < e.length; i++) {
            if (e[i].style.backgroundColor) {
              if (e[i].value === "中")
                t += (t ? " && " : "") + "e_sub";
              else {
                t += (t ? " && " : "") + "e_sub !== " + "\"" + e[i].value + "\"";
              }
            }
          }
          break;
      }
      if (this.s_teni.value) t += (t ? " && " : "") + "e_teni.indexOf(\"" + this.s_teni.value + "\") !== -1";

      if (t) eval("check_F = function(e_zoku, e_ijyou, e_gauge, e_sub, e_teni){return " + t + ";}");
      break;
  }
  eq_list = eq_data[WEAPON_INFO[wp_type].Id];
  for (var eq_id in eq_list) {
    var eq = eq_list[eq_id];
    if (check_F(eq[c1], eq[c2], eq[c3], eq[I_aREACH], eq[I_aSINKAGR]) && +eq[I_aRARE] <= lm_rare && +eq[I_aSLOT] >= lm_slot
      && rep.indexOf(eq[I_aCRE]) !== -1 && cls.indexOf(eq[I_aCLASS]) !== -1 && (cls_hr || eq[I_aCLASS])) {
      var w = list[cnt++] = [0, eq, eq_id, 0], eqAt = +eq[I_aAT],eqCri = +eq[I_aCRI];

      //ソートキー
      switch (ck_sort) {
        case 0: //名前
          break;
        case 1: //攻撃
          w[0] = eqAt * 1000 + +eq[I_aZOKUAT] + +eq[I_aZYOUAT];
          w[3] = eqAt;
          break;
        case 2: //会心
          w[3] = eqAt + Math.round(eqAt * 25 * eqCri / 10000);
          w[0] = w[3] * 1000 + +eq[I_aZOKUAT] + +eq[I_aZYOUAT];
          break;
        case 3: //属性
          w[0] = eq[I_aZOKUAT] * 1000 + eqAt + Math.round(eqAt * 25 * eqCri / 10000);
          w[3] = eq[I_aZOKUAT];
          break;
        case 4: //状態異常
          w[0] = eq[I_aZYOUAT] * 1000 + eqAt + Math.round(eqAt * 25 * eqCri / 10000);
          w[3] = eq[I_aZYOUAT];
          break;
      }
    }
  }

  //ソート
  if (ck_sort) {
  	list.sort(function (a, b){return b[0]-a[0]});
  }
  else { //名前順
  	var Fulltohalf = (function (){
  		var han = "0123456789.,-+ABCDEFGHIJKLMNOPQRSTUVWXYZｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｧｨｨｩｩｪｪｫｫｯｯｬｬｭｭｮｮｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾊﾋﾌﾍﾎﾊﾋﾌﾍﾎｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾊﾋﾌﾍﾎﾊﾋﾌﾍﾎｳ";
  		var zen = "０１２３４５６７８９．，－＋ＡＢＣＤＥＦＪＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンあいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわをんぁァぃィぅゥぇェぉォっッゃャゅュょョがぎぐげござじずぜぞだぢづでどばびぶべぼぱぴぷぺぽガギグゲゴザジズゼゾダジヅデドバビブベボパピプペポヴ";
  		return function (strVal) {
  			for (var i = 0, str = "", m = strVal.length, c = "", n = 0; i < m; i++){
  				c = strVal.charAt(i), n = zen.indexOf(c,0);
  				str += (n >= 0) ? han.charAt(n) : "ﾞ" + c;
  			}
  			return str;
  		}
  	})();
  	list.sort(function (a, b){return Fulltohalf(b[1][I_aNAME]) < Fulltohalf(a[1][I_aNAME]) ? 1 : -1});
  }

  //データ記入&区切り挿入
  var eqAt = 99999, sortname = ["","武器倍率:","会心付倍率:","属性値:","状態異常値:"][ck_sort];
  var df = document.createDocumentFragment(),o = document.createElement("option");
  for (var i = 0; i < list.length; i++) {
    if (ck_sort && eqAt-list[i][3] > 0) {
      o.setAttribute("value", "");
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode("－"+sortname+list[i][3]+"－"))
      df.lastChild.style.backgroundColor = "aquamarine";
      eqAt = list[i][3];
    }

    o.setAttribute("value", list[i][2]);
    df.appendChild(o.cloneNode(false));
    df.lastChild.appendChild(document.createTextNode(list[i][1][I_aNAME]))
  }
  this.s_wp.length = 1;
  this.s_wp.appendChild(df);
}
//-------------------------武器変更-------------------------
function cngWeapon(wp_type) {
  display("c_gunLv", 0, "");
  display("c_sinkaLv", 0, "");
  display("c_GclassLv", 0, "");
  display("c_blessLabel", 0, "");
  disabled("c_barrel", true);
  if (!this.d_specCng.style.backgroundColor) disabled("c_hrYumi", true);
  this.c_hrYumi.checked = false;

  if (!this.s_wp.value) {
    this.d_att.innerHTML = this.d_zoku.innerHTML = this.d_kaisin.innerHTML = this.d_slot.innerHTML = this.d_class.innerHTML = this.d_doc.innerHTML = this.d_hr.innerHTML = this.d_spec.innerHTML = "&nbsp;";
    this.c_gunLv.selectedIndex = 4;
    return;
  }
  var eq = eq_data[WEAPON_INFO[wp_type].Id][this.s_wp.value];
  var t = "";

  this.wp_hrClass = CLASSTYPE.HrClass.indexOf(eq[I_aCLASS]) !== -1 || (CLASSTYPE.Senyu.indexOf(eq[I_aCLASS]) !== -1 && +eq[I_aHR] < 2000) || (CLASSTYPE.Bless.indexOf(eq[I_aCLASS]) !== -1 && +eq[I_aHR] < 2000);
  this.wp_hc = eq[I_aCLASS] === CLASSTYPE.HC;
  this.wp_sp = eq[I_aCLASS] === CLASSTYPE.SP;
  this.wp_Gosyu = eq[I_aCLASS] && CLASSTYPE.Gosyu.indexOf(eq[I_aCLASS]) >= 0;
  this.wp_Tenran = eq[I_aCLASS] && CLASSTYPE.Tenran.indexOf(eq[I_aCLASS]) >= 0;
  this.wp_Resyu = eq[I_aCLASS] && CLASSTYPE.Resyu.indexOf(eq[I_aCLASS]) >= 0;
  this.wp_Teni = eq[I_aCLASS] && CLASSTYPE.Teni.indexOf(eq[I_aCLASS]) >= 0;
  this.wp_Gclass = eq[I_aCLASS] && CLASSTYPE.GClass.indexOf(eq[I_aCLASS]) >= 0;
  this.wp_sinka = eq[I_aCLASS] && CLASSTYPE.Sinka.indexOf(eq[I_aCLASS]) >= 0;
  this.wp_Bless = eq[I_aCLASS] && eq[I_aCLASS] === "S";

  var gunLvAtt = 0, gunBarrel = 0;
  if ((wp_type === 12 || wp_type === 13) && (this.wp_hrClass || this.wp_Gosyu)) { //ボウガン加工レベル
    display("c_gunLv", 1, "inline");
    gunLvAtt = +getVal("c_gunLv");
  }
  if (wp_type === 13) { //パワーバレル･ヘビィバレル
    disabled("c_barrel", false);
    if (this.c_barrel.checked) gunBarrel = this.wp_Gosyu ? 40 : 20;
  }
  if (wp_type === 14) { //HR･準Gのビン補正
    if (CLASSTYPE.HrClass.indexOf(eq[I_aCLASS]) !== -1 || eq[I_aCLASS] === "K" || eq[I_aCLASS] === "S")
      this.c_hrYumi.checked = true;
  }
  if (this.wp_Bless) //祈歌チェックボックス表示
    display("c_blessLabel", 1, "inline");
  var blessing = this.wp_Bless && this.c_blessing.checked;

  switch (wp_type) {
    case 12:
    case 13:
      this.d_kick.innerHTML = KICKNAME[eq[I_aKICK]];
      this.d_reload.innerHTML = RELOADNAME[eq[I_aRELO]];
      break;
    case 14:
      if (eq[I_aZOKUAT])
        t = ZOKU_INFO[eq[I_aZOKU]].Name + "："
          + (blessing ? eq[I_aZOKUAT] * 2 : eq[I_aZOKUAT]) + "0"; //属性
        t += (t ? "<br>" : "") + "<small>曲射：" + KYOKUNAME[eq[I_aKYOKUSYA]] + "</small>"; //曲射
      this.d_zoku.innerHTML = t;
      if (+eq[I_aZOKU] === 99) { //爆破属性
        this.i_type.selectedIndex = 4;
        this.w_ijyou.value = eq[I_aZOKUAT] + "0";
        this.z_type.selectedIndex = this.w_zoku.value = 0;
      }
      else {
        this.z_type.selectedIndex = +eq[I_aZOKU];
        this.w_zoku.value = (blessing ? eq[I_aZOKUAT] * 2 : eq[I_aZOKUAT]) + "0"; + "0";
      }
      break;
    default:
      if (eq[I_aZOKUAT])
        t = ZOKU_INFO[eq[I_aZOKU]].Name + "："
          + (blessing ? eq[I_aZOKUAT] * 2 : eq[I_aZOKUAT]) + "0"; //属性
      if (eq[I_aZYOUAT])
        t += (t ? "<br>" : "") + IJYOU_INFO[eq[I_aZYOU]].Name + "："
          + (blessing ? eq[I_aZYOUAT] * 2 : eq[I_aZYOUAT]) + "0"; //状態異常
      this.d_zoku.innerHTML = t;
      this.z_type.selectedIndex = +eq[I_aZOKU];
      this.w_zoku.value = (blessing ? eq[I_aZOKUAT] * 2 : eq[I_aZOKUAT]) + "0";
      this.i_type.selectedIndex = +eq[I_aZYOU];
      this.w_ijyou.value = (blessing ? eq[I_aZYOUAT] * 2 : eq[I_aZYOUAT]) + "0";
      break;
  }
  setWpSpec(wp_type);

  this.d_att.innerHTML = this.w_att.value =
    floor((+eq[I_aAT] + (blessing ? 45 : 0) + gunLvAtt + gunBarrel) * WEAPON_INFO[wp_type].Ratio / 10);;
  this.d_kaisin.innerHTML = this.w_kaisin.value = eq[I_aCRI] || 0;
  this.d_slot.innerHTML = eq[I_aSLOT] || 0;
  this.d_class.innerHTML = CLASSTYPE[eq[I_aCLASS]];
  this.d_doc.innerHTML = eq[I_aDOC];

  t = "";
  if (eq[I_aDEF])
    t = (eq[I_aDEF] > 0 ? "+" : "") + eq[I_aDEF];
  this.d_def.innerHTML = t;

  if (+eq[I_aHR] >= 3000) {
  	this.d_hr.innerHTML = "【GSR】";
  } else if (+eq[I_aHR] >= 2000) {
  	this.d_hr.innerHTML = "【GR】";
  } else {
  	this.d_hr.innerHTML = "【HR】";
  }
  this.d_hr.innerHTML += " ﾚｱ:" + eq[I_aRARE] + "　" + MAKENAME[eq[I_aCRE].charAt(0)] + MAKENAME[eq[I_aCRE].substring(1)];

  t = "";
  switch (wp_type) {
    case 12:
    case 13:
      t = "<div style=\"display:inline-block\";><small>" +
        "通:" + bulNum(eq[I_aGUN+0]) + "/" + bulNum(eq[I_aGUN+1]) + "/" + bulNum(eq[I_aGUN+2]) + "　" + "<br>" +
        "貫:" + bulNum(eq[I_aGUN+3]) + "/" + bulNum(eq[I_aGUN+4]) + "/" + bulNum(eq[I_aGUN+5]) + "　" + "<br>" +
        "散:" + bulNum(eq[I_aGUN+6]) + "/" + bulNum(eq[I_aGUN+7]) + "/" + bulNum(eq[I_aGUN+8]) + "　" + "<br>" +
        "徹:" + bulNum(eq[I_aGUN+9]) + "/" + bulNum(eq[I_aGUN+10]) + "/" + bulNum(eq[I_aGUN+11]) + "　" + "<br>" +
        "拡:" + bulNum(eq[I_aGUN+12]) + "/" + bulNum(eq[I_aGUN+13]) + "/" + bulNum(eq[I_aGUN+14]) + "　" + "</small></div>";
      t += "<div style=\"display:inline-block; vertical-align:top\"><small>" +
        "回:" + bulNum(eq[I_aGUN+15]) + "/" + bulNum(eq[I_aGUN+16]) + "　" + "<br>" +
        "毒:" + bulNum(eq[I_aGUN+17]) + "/" + bulNum(eq[I_aGUN+18]) + "　" + "<br>" +
        "麻:" + bulNum(eq[I_aGUN+19]) + "/" + bulNum(eq[I_aGUN+20]) + "　" + "<br>" +
        "眠:" + bulNum(eq[I_aGUN+21]) + "/" + bulNum(eq[I_aGUN+22]) + "　" + "</small></div>";

      t += "<div style=\"display:inline-block\"><small>" +
        "火:" + bulNum(eq[I_aGUN+23]) + "　" + "<br>" +
        "水:" + bulNum(eq[I_aGUN+24]) + "　" + "<br>" +
        "電:" + bulNum(eq[I_aGUN+25]) + "　" + "<br>" +
        "氷:" + bulNum(eq[I_aGUN+26]) + "　" + "<br>" +
        "龍:" + bulNum(eq[I_aGUN+27]) + "　" + "</small></div>";
      t += "<div style=\"display:inline-block; vertical-align:top\"><small>" +
        "捕:" + bulNum(eq[I_aGUN+28]) + "<br>" +
        "ペ:" + bulNum(eq[I_aGUN+29]) + "<br>" +
        "鬼:" + bulNum(eq[I_aGUN+30]) + "<br>" +
        "硬:" + bulNum(eq[I_aGUN+31]) + "</small></div>";
      break;
    case 14:
      var ya_G = eq[I_aYA].split(":");
      t = "<div style=\"display:inline-block\";><small>" +
        "溜め１:" + ya_G[0] + "<br>" +
        "溜め２:" + ya_G[1] + "<br>" +
        "溜め３:" + ya_G[2] + "<br>" +
        "溜め４:" + ya_G[3] + "<br>" +
        "ビン:" + eq[I_aBIN] + "</small></div>";
      break;
    case 6: //狩猟笛
      t = "<small>音色：" + "<span style=\"background-color:slategray;\">" + ONPUCOLOR[eq[I_aREACH].charAt(0)] + ONPUCOLOR[eq[I_aREACH].charAt(1)] + ONPUCOLOR[eq[I_aREACH].charAt(2)] + "</span></small>";
      break;
    case 8:  //ガンランス
      t = "<small>" + eq[I_aREACH] + "</small>";
      break;
    case 9:
      break;
    case 10: //スラアク
      t = "　　　　　" + "<small>" + eq[I_aREACH] + "</small>";
      break;
    default:
      t = eq[I_aREACH] ? "<small>リーチ：" + eq[I_aREACH] + "</small>" : "<small>リーチ：" + "中" + "</small>";
      break;
  }
  if (wp_type < 12) {
    var eq_gauge = "<ul>" + createGauge(eq[I_aGAUGE]).replace(/([roygbwps])(\d+)/g,"<li class=$1 style='width:$2px'>").replace("|","</ul><ul>") + "</ul>";
    if (blessing || (this.enemy_hc && this.wp_hc) || (this.enemy_gou && this.wp_Tenran && this.c_armorKen.selectedIndex)) //斬れ味ワンランクアップ
      eq_gauge = eq_gauge.replace(/class\=p/g,"class=s").replace(/class\=w/g,"class=p").replace(/class\=b/g,"class=w").replace(/class\=g/g,"class=b").replace(/class\=y/g,"class=g").replace(/class\=o/g,"class=y").replace(/class\=r/g,"class=o");
    t += eq_gauge;
  }

  t += this.wp_Teni ? "<div style=\"color:red;\">　≪" + (eq[I_aCLASS] === "U" ? eq[I_aSINKAGR].split("|")[1] : eq[I_aSINKAGR]) + "≫</div>" : "<div>&nbsp;</div>";

  this.d_spec.innerHTML = t;
  this.c_kenshou.options[1].style.backgroundColor = "gray";

  if (this.wp_Resyu || blessing) {
    if (eq[I_aDOC].lastIndexOf("一閃+1") !== -1 && +getVal("c_sen") < 1) this.c_sen.selectedIndex = 1, s_wp_bk = getVal("s_wp");
    else if (eq[I_aDOC].lastIndexOf("一閃+2") !== -1 && +getVal("c_sen") < 2) this.c_sen.selectedIndex = 2, s_wp_bk = getVal("s_wp");
    else if (eq[I_aDOC].lastIndexOf("弱点特効") !== -1 && +getVal("c_hit") < 5) this.c_hit.selectedIndex = 1, s_wp_bk = getVal("s_wp");
    else if (blessing) {
      if (this.c_hiden.selectedIndex < 4) this.c_hiden.selectedIndex = 4;
      this.c_hrYumi.checked = false;
      this.c_fw.checked = true;
      setSkill(+this.w_type.value, "reflect", this.c_reflect.selectedIndex);
      s_wp_bk = getVal("s_wp");
    }
  }

  if (this.wp_sinka) { //進化武器
    var eqSinka = eq[I_aCLASS] === "U" ? sinka_data[WEAPON_INFO[wp_type].Id][+eq[I_aSINKAGR].split("|")[0]] : sinka_data[WEAPON_INFO[wp_type].Id][+eq[I_aSINKAGR]];
    var df = document.createDocumentFragment(),o = document.createElement("option");

    for (var i = 0; i < 100 && eqSinka[i][2] - this.s_rare.value <= 0; i++) {
      o.setAttribute("value", i+1);
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode(i+1));
    }
    if (this.c_sinkaLv.length !== i) {
      df.lastChild.setAttribute("selected", "selected");
      this.c_sinkaLv.length = 0, this.c_sinkaLv.appendChild(df);
    }
    display("c_sinkaLv", 1, "inline");
    this.c_kenshou.options[1].style.backgroundColor = "";
    cngSinkaLV(wp_type);
  }
  else if (this.wp_Gclass && eq[I_aSINKAGR]) {  //G武器
    var eqG = eq[I_aSINKAGR].split("!");
    var df = document.createDocumentFragment(),o = document.createElement("option");

    for (var i = 0; i < eqG.length-1; i++) {
      o.setAttribute("value", i+1);
      df.appendChild(o.cloneNode(false));
      df.lastChild.appendChild(document.createTextNode(i+1));
    }
    if (this.c_GclassLv.length !== i) {
      df.lastChild.setAttribute("selected", "selected");
      this.c_GclassLv.length = 0, this.c_GclassLv.appendChild(df);
    }
    display("c_GclassLv", 1, "inline");
    this.c_kenshou.options[1].style.backgroundColor = "gray";
    cngGLV(wp_type);
  }
}
//-------------------------武器LV変更合わせ-------------------------
function setLvAtt(wp_type) {
  if (wp_type === 0) return;
  var eq_list = eq_data[WEAPON_INFO[wp_type].Id];
  var eqSinka_list = sinka_data[WEAPON_INFO[wp_type].Id];

  for (var eq_id in eq_list) {
    var eq = eq_list[eq_id];
    if (eq[I_aCLASS] && CLASSTYPE.Sinka.indexOf(eq[I_aCLASS]) >= 0) {
      var eqSinka = eq[I_aCLASS] === "U" ? eqSinka_list[+eq[I_aSINKAGR].split("|")[0]][99] : eqSinka_list[+eq[I_aSINKAGR]][99];
      eq[I_aAT] = eqSinka[0]; //攻撃
      eq[I_aZOKUAT] = eqSinka[1]; //属性
      eq[I_aZYOUAT] = eqSinka[2]; //異常&曲射
      eq[I_aCRI] = eqSinka[3]; //会心
      eq[I_aRARE] = eqSinka[5]; //レア度
    }
    else if (eq[I_aSINKAGR] && CLASSTYPE.GClass.indexOf(eq[I_aCLASS]) >= 0) {
      var eqG = eq[I_aSINKAGR].split("!")[49].split(".");
      eq[I_aAT] = eqG[0]; //攻撃
      eq[I_aZOKUAT] = eqG[1]; //属性
      eq[I_aZYOUAT] = eqG[2]; //異常&曲射
      eq[I_aCRI] = eqG[3]; //会心
    }
  }
}
//-------------------------斬れ味ゲージ生成-------------------------
var createGauge = function(w) {
  var MaxSharp = +w.substring(3,6);
  //通常
  var wkSharp = MaxSharp, Gauge = gauge_data[w.substring(0,3)].split(","), wkGauge = [];
  for (var i = 0; i < 8; i++) {
    wkGauge[i] = +Gauge[i] > wkSharp ? wkSharp : Gauge[i];
  }
  var wkT = "", t = [];
  if (wkGauge[0] - 0 > 0) {
    t[0] = floor(wkGauge[0] * 1000 / 2855);
    wkT += "r" + t[0];
  }
  if (wkGauge[1] - wkGauge[0] > 0) {
    t[1] = floor(wkGauge[1] * 1000 / 2855) - floor(wkGauge[0] * 1000 / 2855);
    wkT += "o" + t[1];
  }
  if (wkGauge[2] - wkGauge[1] > 0) {
    t[2] = floor(wkGauge[2] * 1000 / 2855) - floor(wkGauge[1] * 1000 / 2855);
    wkT += "y" + t[2];
  }
  if (wkGauge[3] - wkGauge[2] > 0) {
    t[3] = floor(wkGauge[3] * 1000 / 2855) - floor(wkGauge[2] * 1000 / 2855);
    wkT += "g" + t[3];
  }
  if (wkGauge[4] - wkGauge[3] > 0) {
    t[4] = floor(wkGauge[4] * 1000 / 2855) - floor(wkGauge[3] * 1000 / 2855);
    wkT += "b" + t[4];
  }
  if (wkGauge[5] - wkGauge[4] > 0) {
    t[5] = floor(wkGauge[5] * 1000 / 2855) - floor(wkGauge[4] * 1000 / 2855);
    wkT += "w" + t[5];
  }
  if (wkGauge[6] - wkGauge[5] > 0) {
    t[6] = floor(wkGauge[6] * 1000 / 2855) - floor(wkGauge[5] * 1000 / 2855);
    wkT += "p" + t[6];
  }
  if (wkSharp - wkGauge[6] > 0) {
    t[7] = floor(wkSharp * 1000 / 2855) - floor(wkGauge[6] * 1000 / 2855);
    wkT += "s" + t[7];
  }
  wkT += "|";
  //斬れ味+1
  wkSharp = MaxSharp >= 350 ? 400 : MaxSharp + 50, wkGauge = [];
  for (var i = 0; i < 8; i++) {
    wkGauge[i] = +Gauge[i] > wkSharp ? wkSharp : Gauge[i];
  }
  if (wkGauge[0] - 0 > 0) {
    t[0] = floor(wkGauge[0] * 1000 / 2855);
    wkT += "r" + t[0];
  }
  if (wkGauge[1] - wkGauge[0] > 0) {
    t[1] = floor(wkGauge[1] * 1000 / 2855) - floor(wkGauge[0] * 1000 / 2855);
    wkT += "o" + t[1];
  }
  if (wkGauge[2] - wkGauge[1] > 0) {
    t[2] = floor(wkGauge[2] * 1000 / 2855) - floor(wkGauge[1] * 1000 / 2855);
    wkT += "y" + t[2];
  }
  if (wkGauge[3] - wkGauge[2] > 0) {
    t[3] = floor(wkGauge[3] * 1000 / 2855) - floor(wkGauge[2] * 1000 / 2855);
    wkT += "g" + t[3];
  }
  if (wkGauge[4] - wkGauge[3] > 0) {
    t[4] = floor(wkGauge[4] * 1000 / 2855) - floor(wkGauge[3] * 1000 / 2855);
    wkT += "b" + t[4];
  }
  if (wkGauge[5] - wkGauge[4] > 0) {
    t[5] = floor(wkGauge[5] * 1000 / 2855) - floor(wkGauge[4] * 1000 / 2855);
    wkT += "w" + t[5];
  }
  if (wkGauge[6] - wkGauge[5] > 0) {
    t[6] = floor(wkGauge[6] * 1000 / 2855) - floor(wkGauge[5] * 1000 / 2855);
    wkT += "p" + t[6];
  }
  if (wkSharp - wkGauge[6] > 0) {
    t[7] = floor(wkSharp * 1000 / 2855) - floor(wkGauge[6] * 1000 / 2855);
    wkT += "s" + t[7];
  }
  return wkT;
}
//-------------------------進化武器LV変更-------------------------
function cngSinkaLV(wp_type) {
  var eq = eq_data[WEAPON_INFO[wp_type].Id][this.s_wp.value];
  var eqSinka = eq[I_aCLASS] === "U" ? sinka_data[WEAPON_INFO[wp_type].Id][+eq[I_aSINKAGR].split("|")[0]][this.c_sinkaLv.value-1] : sinka_data[WEAPON_INFO[wp_type].Id][+eq[I_aSINKAGR]][this.c_sinkaLv.value-1];
  var t = "", gunBarrel = 0;

  if (wp_type === 13) { //パワーバレル
    disabled("c_barrel", false);
    if (this.c_barrel.checked) gunBarrel = 20;
  }
  this.d_att.innerHTML = this.w_att.value = floor((+eqSinka[0] + gunBarrel) * WEAPON_INFO[wp_type].Ratio / 10);

  switch (wp_type) {
    case 12:
    case 13:
      break;
    case 14:
      if (eq[I_aZOKUAT])
        t = ZOKU_INFO[eq[I_aZOKU]].Name + "：" + eqSinka[1] + "0"; //属性
        t += (t ? "<br>" : "") + "<small>曲射：" + KYOKUNAME[eq[I_aKYOKUSYA]] + "</small>"; //曲射
      this.d_zoku.innerHTML = t;
      this.z_type.selectedIndex = +eq[I_aZOKU];
      this.w_zoku.value = eqSinka[1] + "0";
      break;
    default:
      if (eq[I_aZOKUAT])
        t = ZOKU_INFO[eq[I_aZOKU]].Name + "：" + eqSinka[1] + "0"; //属性
      if (eq[I_aZYOUAT])
        t += (t ? "<br>" : "") + IJYOU_INFO[eq[I_aZYOU]].Name + "：" + eqSinka[2] + "0"; //状態異常
      this.d_zoku.innerHTML = t;
      this.z_type.selectedIndex = +eq[I_aZOKU];
      this.w_zoku.value = eqSinka[1] + "0";
      this.i_type.selectedIndex = +eq[I_aZYOU];
      this.w_ijyou.value = eqSinka[2] + "0";
      break;
  }

  this.d_kaisin.innerHTML = this.w_kaisin.value = eqSinka[3] || 0;

  t = "";
  switch (wp_type) {
    case 12:
    case 13:
      t = "<div style=\"display:inline-block\";><small>" +
        "通:" + bulNum(eq[I_aGUN+0]) + "/" + bulNum(eq[I_aGUN+1]) + "/" + bulNum(eq[I_aGUN+2]) + "　" + "<br>" +
        "貫:" + bulNum(eq[I_aGUN+3]) + "/" + bulNum(eq[I_aGUN+4]) + "/" + bulNum(eq[I_aGUN+5]) + "　" + "<br>" +
        "散:" + bulNum(eq[I_aGUN+6]) + "/" + bulNum(eq[I_aGUN+7]) + "/" + bulNum(eq[I_aGUN+8]) + "　" + "<br>" +
        "徹:" + bulNum(eq[I_aGUN+9]) + "/" + bulNum(eq[I_aGUN+10]) + "/" + bulNum(eq[I_aGUN+11]) + "　" + "<br>" +
        "拡:" + bulNum(eq[I_aGUN+12]) + "/" + bulNum(eq[I_aGUN+13]) + "/" + bulNum(eq[I_aGUN+14]) + "　" + "</small></div>";
      t += "<div style=\"display:inline-block; vertical-align:top\"><small>" +
        "回:" + bulNum(eq[I_aGUN+15]) + "/" + bulNum(eq[I_aGUN+16]) + "　" + "<br>" +
        "毒:" + bulNum(eq[I_aGUN+17]) + "/" + bulNum(eq[I_aGUN+18]) + "　" + "<br>" +
        "麻:" + bulNum(eq[I_aGUN+19]) + "/" + bulNum(eq[I_aGUN+20]) + "　" + "<br>" +
        "眠:" + bulNum(eq[I_aGUN+21]) + "/" + bulNum(eq[I_aGUN+22]) + "　" + "</small></div>";

      t += "<div style=\"display:inline-block\"><small>" +
        "火:" + bulNum(eq[I_aGUN+23]) + "　" + "<br>" +
        "水:" + bulNum(eq[I_aGUN+24]) + "　" + "<br>" +
        "電:" + bulNum(eq[I_aGUN+25]) + "　" + "<br>" +
        "氷:" + bulNum(eq[I_aGUN+26]) + "　" + "<br>" +
        "龍:" + bulNum(eq[I_aGUN+27]) + "　" + "</small></div>";
      t += "<div style=\"display:inline-block; vertical-align:top\"><small>" +
        "捕:" + bulNum(eq[I_aGUN+28]) + "<br>" +
        "ペ:" + bulNum(eq[I_aGUN+29]) + "<br>" +
        "鬼:" + bulNum(eq[I_aGUN+30]) + "<br>" +
        "硬:" + bulNum(eq[I_aGUN+31]) + "</small></div>";
      break;
    case 14:
      var ya_G = eq[I_aYA].split(":");
      t = "<div style=\"display:inline-block\";><small>" +
        "溜め１:" + ya_G[0] + "<br>" +
        "溜め２:" + ya_G[1] + "<br>" +
        "溜め３:" + ya_G[2] + "<br>" +
        "溜め４:" + ya_G[3] + "<br>" +
        "ビン:" + eq[I_aBIN] + "</small></div>";
      break;
    case 6: //狩猟笛
      t = "<small>音色：" + "<span style=\"background-color:slategray;\">" + ONPUCOLOR[eq[I_aREACH].charAt(0)] + ONPUCOLOR[eq[I_aREACH].charAt(1)] + ONPUCOLOR[eq[I_aREACH].charAt(2)] + "</span></small>";
      break;
    case 8:  //ガンランス
      t = "<small>" + eq[I_aREACH].substr(0,5) + "LV" + eqSinka[6] + "</small>";
      setWpSpec(wp_type, eqSinka[6]);
      break;
    case 9:
      break;
    case 10: //スラアク
      t = "　　　　　" + "<small>" + eq[I_aREACH] + "</small>";
      break;
    default:
      t = eq[I_aREACH] ? "<small>リーチ：" + eq[I_aREACH] + "</small>" : "<small>リーチ：" + "中" + "</small>";
      break;
  }
  if (wp_type < 12)
    t += "<ul>" + createGauge(eq[I_aGAUGE].substr(0,3)+eqSinka[4]).replace(/([roygbwps])(\d+)/g,"<li class=$1 style='width:$2px'>").replace("|","</ul><ul>") + "</ul>";

  t += this.wp_Teni ? "<div style=\"color:red;\">　≪" + (eq[I_aCLASS] === "U" ? eq[I_aSINKAGR].split("|")[1] : eq[I_aSINKAGR]) + "≫</div>" : "<div>&nbsp;</div>";
  this.d_spec.innerHTML = t;

  if (+eq[I_aHR] >= 3000) {
    this.d_hr.innerHTML = "【GSR】";
  } else if (+eq[I_aHR] >= 2000) {
    this.d_hr.innerHTML = "【GR】";
  } else {
    this.d_hr.innerHTML = "【HR】";
  }
  this.d_hr.innerHTML += " ﾚｱ:" + eqSinka[5] + "　" + MAKENAME[eq[I_aCRE].charAt(0)] + MAKENAME[eq[I_aCRE].substring(1)];
}
//-------------------------G武器LV変更-------------------------
function cngGLV(wp_type) {
  var eq = eq_data[WEAPON_INFO[wp_type].Id][this.s_wp.value];
  var eqG = eq[I_aSINKAGR].split("!")[this.c_GclassLv.value-1].split(".");
  var t = "", gunBarrel = 0;

  if (wp_type === 13) { //パワーバレル
    disabled("c_barrel", false);
    if (this.c_barrel.checked) gunBarrel = 20;
  }
  this.d_att.innerHTML = this.w_att.value = floor((+eqG[0] + gunBarrel) * WEAPON_INFO[wp_type].Ratio / 10);

  switch (wp_type) {
    case 12:
    case 13:
      break;
    case 14:
      if (eq[I_aZOKUAT])
        t = ZOKU_INFO[eq[I_aZOKU]].Name + "：" + eqG[1] + "0"; //属性
        t += (t ? "<br>" : "") + "<small>曲射：" + KYOKUNAME[eq[I_aKYOKUSYA]] + "</small>"; //曲射
      this.d_zoku.innerHTML = t;
      this.z_type.selectedIndex = +eq[I_aZOKU];
      this.w_zoku.value = eqG[1] + "0";
      break;
    default:
      if (eq[I_aZOKUAT])
        t = ZOKU_INFO[eq[I_aZOKU]].Name + "：" + eqG[1] + "0"; //属性
      if (eq[I_aZYOUAT])
        t += (t ? "<br>" : "") + IJYOU_INFO[eq[I_aZYOU]].Name + "：" + eqG[2] + "0"; //状態異常
      this.d_zoku.innerHTML = t;
      this.z_type.selectedIndex = +eq[I_aZOKU];
      this.w_zoku.value = eqG[1] + "0";
      this.i_type.selectedIndex = +eq[I_aZYOU];
      this.w_ijyou.value = eqG[2] + "0";
      break;
  }

  this.d_kaisin.innerHTML = this.w_kaisin.value = eqG[3] || 0;
  t = "";
  if (eq[I_aDEF])
    t = (eq[I_aDEF] > 0 ? "+" : "") + eq[I_aDEF];
  this.d_def.innerHTML = t;

  t = "";
  switch (wp_type) {
    case 12:
    case 13:
      t = "<div style=\"display:inline-block\";><small>" +
        "通:" + bulNum(eq[I_aGUN+0]) + "/" + bulNum(eq[I_aGUN+1]) + "/" + bulNum(eq[I_aGUN+2]) + "　" + "<br>" +
        "貫:" + bulNum(eq[I_aGUN+3]) + "/" + bulNum(eq[I_aGUN+4]) + "/" + bulNum(eq[I_aGUN+5]) + "　" + "<br>" +
        "散:" + bulNum(eq[I_aGUN+6]) + "/" + bulNum(eq[I_aGUN+7]) + "/" + bulNum(eq[I_aGUN+8]) + "　" + "<br>" +
        "徹:" + bulNum(eq[I_aGUN+9]) + "/" + bulNum(eq[I_aGUN+10]) + "/" + bulNum(eq[I_aGUN+11]) + "　" + "<br>" +
        "拡:" + bulNum(eq[I_aGUN+12]) + "/" + bulNum(eq[I_aGUN+13]) + "/" + bulNum(eq[I_aGUN+14]) + "　" + "</small></div>";
      t += "<div style=\"display:inline-block; vertical-align:top\"><small>" +
        "回:" + bulNum(eq[I_aGUN+15]) + "/" + bulNum(eq[I_aGUN+16]) + "　" + "<br>" +
        "毒:" + bulNum(eq[I_aGUN+17]) + "/" + bulNum(eq[I_aGUN+18]) + "　" + "<br>" +
        "麻:" + bulNum(eq[I_aGUN+19]) + "/" + bulNum(eq[I_aGUN+20]) + "　" + "<br>" +
        "眠:" + bulNum(eq[I_aGUN+21]) + "/" + bulNum(eq[I_aGUN+22]) + "　" + "</small></div>";

      t += "<div style=\"display:inline-block\"><small>" +
        "火:" + bulNum(eq[I_aGUN+23]) + "　" + "<br>" +
        "水:" + bulNum(eq[I_aGUN+24]) + "　" + "<br>" +
        "電:" + bulNum(eq[I_aGUN+25]) + "　" + "<br>" +
        "氷:" + bulNum(eq[I_aGUN+26]) + "　" + "<br>" +
        "龍:" + bulNum(eq[I_aGUN+27]) + "　" + "</small></div>";
      t += "<div style=\"display:inline-block; vertical-align:top\"><small>" +
        "捕:" + bulNum(eq[I_aGUN+28]) + "<br>" +
        "ペ:" + bulNum(eq[I_aGUN+29]) + "<br>" +
        "鬼:" + bulNum(eq[I_aGUN+30]) + "<br>" +
        "硬:" + bulNum(eq[I_aGUN+31]) + "</small></div>";
      break;
    case 14:
      var ya_G = eq[I_aYA].split(":");
      t = "<div style=\"display:inline-block\";><small>" +
        "溜め１:" + ya_G[0] + "<br>" +
        "溜め２:" + ya_G[1] + "<br>" +
        "溜め３:" + ya_G[2] + "<br>" +
        "溜め４:" + ya_G[3] + "<br>" +
        "ビン:" + eq[I_aBIN] + "</small></div>";
      break;
    case 6: //狩猟笛
      t = "<small>音色：" + "<span style=\"background-color:slategray;\">" + ONPUCOLOR[eq[I_aREACH].charAt(0)] + ONPUCOLOR[eq[I_aREACH].charAt(1)] + ONPUCOLOR[eq[I_aREACH].charAt(2)] + "</span></small>";
      break;
    case 8:  //ガンランス
      t = "<small>" + eqG[5] + "</small>";
      setWpSpec(wp_type, eqG[5].substr(-1));
      break;
    case 9:
      break;
    case 10: //スラアク
      t = "　　　　　" + "<small>" + eq[I_aREACH] + "</small>";
      break;
    default:
      t = eq[I_aREACH] ? "<small>リーチ：" + eq[I_aREACH] + "</small>" : "<small>リーチ：" + "中" + "</small>";
      break;
  }
  if (wp_type < 12)
    t += "<ul>" + createGauge(eqG[4]).replace(/([roygbwps])(\d+)/g,"<li class=$1 style='width:$2px'>").replace("|","</ul><ul>") + "</ul>";
    t += "<div>&nbsp;</div>";

  this.d_spec.innerHTML = t;

}
//-------------------------武器性能の入力変更-------------------------
function specCng() {
  if (this.d_specCng.style.backgroundColor) {
    disabled("w_att", false);
    disabled("z_type", false);
    disabled("w_zoku", false);
    disabled("i_type", false);
    disabled("w_ijyou", false);
    disabled("w_kaisin", false);
    disabled("c_barrel", true);
    disabled("c_hrYumi", false);
  }
  else {
    disabled("w_att", true);
    disabled("z_type", true);
    disabled("w_zoku", true);
    disabled("i_type", true);
    disabled("w_ijyou", true);
    disabled("w_kaisin", true);
    disabled("c_barrel", false);
    disabled("c_hrYumi", true);
    cngWeapon(+this.w_type.value);
  }
}
//-------------------------設定を戻す-------------------------
function prev() {
  this.c_sen.selectedIndex = issen_bk;
  this.c_hit.selectedIndex = tokkou_bk;
  this.c_hiden.selectedIndex = hiden_bk;
  this.c_fw.checked = fw_bk, setSkill(+this.w_type.value, "reflect", this.c_reflect.selectedIndex);

  s_wp_bk = "";
}
//-------------------------初期設定-------------------------
init();
nikuInputCng();
cngMosList();
cngNiku();
specCng();
setSkill(+this.w_type.value);
setWeapon(+this.w_type.value);


}
/*
     FILE ARCHIVED ON 19:42:48 Oct 09, 2019 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 06:07:28 Nov 26, 2023.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 161.397
  exclusion.robots: 0.088
  exclusion.robots.policy: 0.077
  cdx.remote: 0.067
  esindex: 0.01
  LoadShardBlock: 63.225 (3)
  PetaboxLoader3.datanode: 188.987 (5)
  load_resource: 409.712 (2)
  PetaboxLoader3.resolve: 251.772 (2)
*/